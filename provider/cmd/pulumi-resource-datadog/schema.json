{
    "name": "datadog",
    "description": "A Pulumi package for creating and managing Datadog resources.",
    "keywords": [
        "pulumi",
        "datadog"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`datadog` Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog).",
    "repository": "https://github.com/pulumi/pulumi-datadog",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_API_KEY"
                    ]
                }
            },
            "apiUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_HOST"
                    ]
                }
            },
            "appKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_APP_KEY"
                    ]
                }
            },
            "validate": {
                "type": "boolean"
            }
        }
    },
    "types": {
        "datadog:/DashboardListDashItem:DashboardListDashItem": {
            "properties": {
                "dashId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashId",
                "type"
            ]
        },
        "datadog:/DashboardTemplateVariable:DashboardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "templateVariables"
            ]
        },
        "datadog:/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "datadog:/DashboardWidget:DashboardWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:/DashboardWidgetLayout:DashboardWidgetLayout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetChangeDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetChangeDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetChangeDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetChangeDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetChangeDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetChangeDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetDistributionDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetDistributionDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetDistributionDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetDistributionDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition": {
            "properties": {
                "layoutType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "layoutType",
                "widgets"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout": {
            "properties": {
                "height": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "deprecationMessage": "This parameter has been deprecated. Use 'indexes' instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDisplay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDateColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetHeatmapDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetHeatmapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:/DashboardWidgetLayout:DashboardWidgetLayout": {
            "properties": {
                "height": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "deprecationMessage": "This parameter has been deprecated. Use 'indexes' instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDisplay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDateColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetQueryTableDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetQueryTableDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetQueryValueDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetQueryValueDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition": {
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetToplistDefinitionRequestRumQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetToplistDefinitionRequestRumQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetToplistDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetToplistDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetToplistDefinitionRequestSecurityQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetToplistDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/DowntimeRecurrence:DowntimeRecurrence": {
            "properties": {
                "period": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rrule": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilDate": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilOccurrences": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:/LogsArchiveAzure:LogsArchiveAzure": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "container": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "storageAccount": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "container",
                "storageAccount",
                "tenantId"
            ]
        },
        "datadog:/LogsArchiveGcs:LogsArchiveGcs": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "clientEmail": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "clientEmail",
                "path",
                "projectId"
            ]
        },
        "datadog:/LogsArchiveS3:LogsArchiveS3": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "clientEmail": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "bucket",
                "clientEmail",
                "path",
                "projectId",
                "roleName"
            ]
        },
        "datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sampleRate": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/LogsIndexFilter:LogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/MonitorThresholdWindows:MonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "describes how long an anomalous metric must be normal before the alert recovers.\n"
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "describes how long a metric must be anomalous before an alert triggers.\n"
                }
            },
            "type": "object"
        },
        "datadog:/MonitorThresholds:MonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "number"
                },
                "criticalRecovery": {
                    "type": "number"
                },
                "ok": {
                    "type": "number"
                },
                "unknown": {
                    "type": "number"
                },
                "warning": {
                    "type": "number"
                },
                "warningRecovery": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:/ScreenBoardWidget:ScreenBoardWidget": {
            "properties": {
                "alertId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoRefresh": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgcolor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "columns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layoutVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusShowTitle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleText": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitor": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetRule:ScreenBoardWidgetRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tileDeves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "x",
                "y"
            ]
        },
        "datadog:/ScreenBoardWidgetRule:ScreenBoardWidgetRule": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "viz"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "invert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numerator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ]
        },
        "datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold": {
            "properties": {
                "target": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "the time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object) page. Available options to choose from are:\n- `7d`\n- `30d`\n- `90d`\n- `target`: (Required) the objective's target `[0,100]`\n- `target_display`: (Optional) the string version to specify additional digits in the case of `99` but want 3 digits like `99.000` to display.\n- `warning`: (Optional) the objective's warning value `[0,100]`. This must be `\u003e target` value.\n- `warning_display`: (Optional) the string version to specify additional digits in the case of `99` but want 3 digits like `99.000` to display.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningDisplay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "timeframe"
            ]
        },
        "datadog:/SyntheticsTestAssertion:SyntheticsTestAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "property": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath": {
            "properties": {
                "jsonpath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetvalue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator",
                "targetvalue"
            ]
        },
        "datadog:/SyntheticsTestOptions:SyntheticsTestOptions": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean"
                },
                "allowInsecure": {
                    "type": "boolean"
                },
                "followRedirects": {
                    "type": "boolean"
                },
                "minFailureDuration": {
                    "type": "integer"
                },
                "minLocationFailed": {
                    "type": "integer"
                },
                "retryCount": {
                    "type": "integer"
                },
                "retryInterval": {
                    "type": "integer"
                },
                "tickEvery": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:/SyntheticsTestOptionsList:SyntheticsTestOptionsList": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowInsecure": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "followRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minFailureDuration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minLocationFailed": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorOptions": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retry": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEvery": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions": {
            "properties": {
                "renotifyInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/SyntheticsTestRequest:SyntheticsTestRequest": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth": {
            "properties": {
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "datadog:/SyntheticsTestStep:SyntheticsTestStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "params",
                "type"
            ]
        },
        "datadog:/TimeBoardGraph:TimeBoardGraph": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeNoMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeUngroupedHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphMarker:TimeBoardGraphMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequest:TimeBoardGraphRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "title",
                "viz"
            ]
        },
        "datadog:/TimeBoardGraphMarker:TimeBoardGraphMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:/TimeBoardGraphRequest:TimeBoardGraphRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDirection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stacked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:/getMonitorThresholdWindows:getMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string"
                },
                "triggerWindow": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "recoveryWindow",
                "triggerWindow"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:/getMonitorThresholds:getMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "number"
                },
                "criticalRecovery": {
                    "type": "number"
                },
                "ok": {
                    "type": "number"
                },
                "unknown": {
                    "type": "number"
                },
                "warning": {
                    "type": "number"
                },
                "warningRecovery": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "critical",
                "criticalRecovery",
                "ok",
                "unknown",
                "warning",
                "warningRecovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:pagerduty/IntegrationService:IntegrationService": {
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Your Service name associated service key in Pagerduty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceKey",
                "serviceName"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the datadog package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_API_KEY"
                    ]
                }
            },
            "apiUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_HOST"
                    ]
                }
            },
            "appKey": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "DATADOG_APP_KEY"
                    ]
                }
            },
            "validate": {
                "type": "boolean"
            }
        }
    },
    "resources": {
        "datadog:aws/integration:Integration": {
            "description": "Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration\nconst sandbox = new datadog.aws.Integration(\"sandbox\", {\n    accountId: \"1234567890\",\n    accountSpecificNamespaceRules: {\n        auto_scaling: false,\n        opsworks: false,\n    },\n    excludedRegions: [\n        \"us-east-1\",\n        \"us-west-2\",\n    ],\n    filterTags: [\"key:value\"],\n    hostTags: [\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    roleName: \"DatadogAWSIntegrationRole\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration\nsandbox = datadog.aws.Integration(\"sandbox\",\n    account_id=\"1234567890\",\n    account_specific_namespace_rules={\n        \"auto_scaling\": False,\n        \"opsworks\": False,\n    },\n    excluded_regions=[\n        \"us-east-1\",\n        \"us-west-2\",\n    ],\n    filter_tags=[\"key:value\"],\n    host_tags=[\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    role_name=\"DatadogAWSIntegrationRole\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Amazon Web Services integration\n        var sandbox = new Datadog.Aws.Integration(\"sandbox\", new Datadog.Aws.IntegrationArgs\n        {\n            AccountId = \"1234567890\",\n            AccountSpecificNamespaceRules = \n            {\n                { \"auto_scaling\", false },\n                { \"opsworks\", false },\n            },\n            ExcludedRegions = \n            {\n                \"us-east-1\",\n                \"us-west-2\",\n            },\n            FilterTags = \n            {\n                \"key:value\",\n            },\n            HostTags = \n            {\n                \"key:value\",\n                \"key2:value2\",\n            },\n            RoleName = \"DatadogAWSIntegrationRole\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegration(ctx, \"sandbox\", \u0026aws.IntegrationArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tAccountSpecificNamespaceRules: pulumi.BoolMap{\n\t\t\t\t\"auto_scaling\": pulumi.Bool(false),\n\t\t\t\t\"opsworks\":     pulumi.Bool(false),\n\t\t\t},\n\t\t\tExcludedRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-east-1\"),\n\t\t\t\tpulumi.String(\"us-west-2\"),\n\t\t\t},\n\t\t\tFilterTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t},\n\t\t\tHostTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t\tpulumi.String(\"key2:value2\"),\n\t\t\t},\n\t\t\tRoleName: pulumi.String(\"DatadogAWSIntegrationRole\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalId": {
                    "type": "string"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roleName": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "externalId",
                "roleName"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roleName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "accountId",
                "roleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountSpecificNamespaceRules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "excludedRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "filterTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hostTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roleName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLambdaArn:IntegrationLambdaArn": {
            "description": "Provides a Datadog - Amazon Web Services integration Lambda ARN resource. This can be used to create and manage the log collection Lambdas for an account.\n\nUpdate operations are currently not supported with datadog API so any change forces a new resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst mainCollector = new datadog.aws.IntegrationLambdaArn(\"main_collector\", {\n    accountId: \"1234567890\",\n    lambdaArn: \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmain_collector = datadog.aws.IntegrationLambdaArn(\"mainCollector\",\n    account_id=\"1234567890\",\n    lambda_arn=\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mainCollector = new Datadog.Aws.IntegrationLambdaArn(\"mainCollector\", new Datadog.Aws.IntegrationLambdaArnArgs\n        {\n            AccountId = \"1234567890\",\n            LambdaArn = \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegrationLambdaArn(ctx, \"mainCollector\", \u0026aws.IntegrationLambdaArnArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tLambdaArn: pulumi.String(\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "lambdaArn": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "lambdaArn"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "lambdaArn": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "accountId",
                "lambdaArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLambdaArn resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "lambdaArn": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLogCollection:IntegrationLogCollection": {
            "description": "Provides a Datadog - Amazon Web Services integration log collection resource. This can be used to manage which AWS services logs are collected from for an account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration lambda arn\nconst main = new datadog.aws.IntegrationLogCollection(\"main\", {\n    accountId: \"1234567890\",\n    services: [\"lambda\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration lambda arn\nmain = datadog.aws.IntegrationLogCollection(\"main\",\n    account_id=\"1234567890\",\n    services=[\"lambda\"])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Amazon Web Services integration lambda arn\n        var main = new Datadog.Aws.IntegrationLogCollection(\"main\", new Datadog.Aws.IntegrationLogCollectionArgs\n        {\n            AccountId = \"1234567890\",\n            Services = \n            {\n                \"lambda\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegrationLogCollection(ctx, \"main\", \u0026aws.IntegrationLogCollectionArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tServices: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"lambda\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "accountId",
                "services"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "accountId",
                "services"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLogCollection resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "datadog:azure/integration:Integration": {
            "description": "Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Microsoft Azure integration\nconst sandbox = new datadog.azure.Integration(\"sandbox\", {\n    clientId: \"\u003cazure_client_id\u003e\",\n    clientSecret: \"\u003cazure_client_secret_key\u003e\",\n    hostFilters: \"examplefilter:true,example:true\",\n    tenantName: \"\u003cazure_tenant_name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Microsoft Azure integration\nsandbox = datadog.azure.Integration(\"sandbox\",\n    client_id=\"\u003cazure_client_id\u003e\",\n    client_secret=\"\u003cazure_client_secret_key\u003e\",\n    host_filters=\"examplefilter:true,example:true\",\n    tenant_name=\"\u003cazure_tenant_name\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Microsoft Azure integration\n        var sandbox = new Datadog.Azure.Integration(\"sandbox\", new Datadog.Azure.IntegrationArgs\n        {\n            ClientId = \"\u003cazure_client_id\u003e\",\n            ClientSecret = \"\u003cazure_client_secret_key\u003e\",\n            HostFilters = \"examplefilter:true,example:true\",\n            TenantName = \"\u003cazure_tenant_name\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/azure\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azure.NewIntegration(ctx, \"sandbox\", \u0026azure.IntegrationArgs{\n\t\t\tClientId:     pulumi.String(\"\u003cazure_client_id\u003e\"),\n\t\t\tClientSecret: pulumi.String(\"\u003cazure_client_secret_key\u003e\"),\n\t\t\tHostFilters:  pulumi.String(\"examplefilter:true,example:true\"),\n\t\t\tTenantName:   pulumi.String(\"\u003cazure_tenant_name\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "hostFilters": {
                    "type": "string"
                },
                "tenantName": {
                    "type": "string"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "hostFilters": {
                    "type": "string"
                },
                "tenantName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string"
                    },
                    "hostFilters": {
                        "type": "string"
                    },
                    "tenantName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integration:Integration": {
            "description": "Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Google Cloud Platform integration\nconst awesomeGcpProjectIntegration = new datadog.gcp.Integration(\"awesome_gcp_project_integration\", {\n    clientEmail: \"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n    clientId: \"123456789012345678901\",\n    hostFilters: \"foo:bar,buzz:lightyear\",\n    privateKey: `-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n`,\n    privateKeyId: \"1234567890123456789012345678901234567890\",\n    projectId: \"awesome-project-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Google Cloud Platform integration\nawesome_gcp_project_integration = datadog.gcp.Integration(\"awesomeGcpProjectIntegration\",\n    client_email=\"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n    client_id=\"123456789012345678901\",\n    host_filters=\"foo:bar,buzz:lightyear\",\n    private_key=\"\"\"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n\n\"\"\",\n    private_key_id=\"1234567890123456789012345678901234567890\",\n    project_id=\"awesome-project-id\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Google Cloud Platform integration\n        var awesomeGcpProjectIntegration = new Datadog.Gcp.Integration(\"awesomeGcpProjectIntegration\", new Datadog.Gcp.IntegrationArgs\n        {\n            ClientEmail = \"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n            ClientId = \"123456789012345678901\",\n            HostFilters = \"foo:bar,buzz:lightyear\",\n            PrivateKey = @\"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n\n\",\n            PrivateKeyId = \"1234567890123456789012345678901234567890\",\n            ProjectId = \"awesome-project-id\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/gcp\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gcp.NewIntegration(ctx, \"awesomeGcpProjectIntegration\", \u0026gcp.IntegrationArgs{\n\t\t\tClientEmail:  pulumi.String(\"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\"),\n\t\t\tClientId:     pulumi.String(\"123456789012345678901\"),\n\t\t\tHostFilters:  pulumi.String(\"foo:bar,buzz:lightyear\"),\n\t\t\tPrivateKey:   pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"-----BEGIN PRIVATE KEY-----\\n\", \"...\\n\", \"-----END PRIVATE KEY-----\\n\", \"\\n\")),\n\t\t\tPrivateKeyId: pulumi.String(\"1234567890123456789012345678901234567890\"),\n\t\t\tProjectId:    pulumi.String(\"awesome-project-id\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clientEmail": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "hostFilters": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "required": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "inputProperties": {
                "clientEmail": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "hostFilters": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clientEmail": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "hostFilters": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "privateKeyId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboard:Dashboard": {
            "description": "Provides a Datadog dashboard resource. This can be used to create and manage Datadog dashboards.\n\n\u003e **Note:** This resource uses the new [Dashboard API](https://docs.datadoghq.com/api/v1/dashboards/) which adds new features like better validation and support for the [Group widget](https://docs.datadoghq.com/graphing/widgets/group/). Additionally, this resource unifies `datadog.TimeBoard` and `datadog.ScreenBoard` resources to allow you to manage all of your dashboards using a single format.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Create A New Datadog Dashboard - Ordered Layout\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst orderedDashboard = new datadog.Dashboard(\"ordered_dashboard\", {\n    description: \"Created using the Datadog provider in Terraform\",\n    isReadOnly: true,\n    layoutType: \"ordered\",\n    templateVariables: [\n        {\n            default: \"aws\",\n            name: \"var_1\",\n            prefix: \"host\",\n        },\n        {\n            default: \"autoscaling\",\n            name: \"var_2\",\n            prefix: \"service_name\",\n        },\n    ],\n    templateVariablePresets: [{\n        name: \"preset_1\",\n        templateVariables: [\n            {\n                name: \"var_1\",\n                value: \"host.dc\",\n            },\n            {\n                name: \"var_2\",\n                value: \"my_service\",\n            },\n        ],\n    }],\n    title: \"Ordered Layout Dashboard\",\n    widgets: [\n        {\n            alertGraphDefinition: {\n                alertId: \"895605\",\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n                vizType: \"timeseries\",\n            },\n        },\n        {\n            alertValueDefinition: {\n                alertId: \"895605\",\n                precision: 3,\n                textAlign: \"center\",\n                title: \"Widget Title\",\n                unit: \"b\",\n            },\n        },\n        {\n            alertValueDefinition: {\n                alertId: \"895605\",\n                precision: 3,\n                textAlign: \"center\",\n                title: \"Widget Title\",\n                unit: \"b\",\n            },\n        },\n        {\n            changeDefinition: {\n                requests: [{\n                    changeType: \"absolute\",\n                    compareTo: \"week_before\",\n                    increaseGood: true,\n                    orderBy: \"name\",\n                    orderDir: \"desc\",\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    showPresent: true,\n                }],\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            distributionDefinition: {\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    style: {\n                        palette: \"warm\",\n                    },\n                }],\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            checkStatusDefinition: {\n                check: \"aws.ecs.agent_connected\",\n                groupBies: [\n                    \"account\",\n                    \"cluster\",\n                ],\n                grouping: \"cluster\",\n                tags: [\n                    \"account:demo\",\n                    \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                ],\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            heatmapDefinition: {\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    style: {\n                        palette: \"warm\",\n                    },\n                }],\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n                yaxis: {\n                    includeZero: true,\n                    max: \"2\",\n                    min: \"1\",\n                    scale: \"sqrt\",\n                },\n            },\n        },\n        {\n            hostmapDefinition: {\n                groups: [\n                    \"host\",\n                    \"region\",\n                ],\n                noGroupHosts: true,\n                noMetricHosts: true,\n                nodeType: \"container\",\n                request: {\n                    fills: [{\n                        q: \"avg:system.load.1{*} by {host}\",\n                    }],\n                    sizes: [{\n                        q: \"avg:memcache.uptime{*} by {host}\",\n                    }],\n                },\n                scopes: [\n                    \"region:us-east-1\",\n                    \"aws_account:727006795293\",\n                ],\n                style: {\n                    fillMax: \"20\",\n                    fillMin: \"10\",\n                    palette: \"yellow_to_green\",\n                    paletteFlip: true,\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            noteDefinition: {\n                backgroundColor: \"pink\",\n                content: \"note text\",\n                fontSize: \"14\",\n                showTick: true,\n                textAlign: \"center\",\n                tickEdge: \"left\",\n                tickPos: \"50%\",\n            },\n        },\n        {\n            queryValueDefinition: {\n                autoscale: true,\n                customUnit: \"xx\",\n                precision: 4,\n                requests: [{\n                    aggregator: \"sum\",\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            palette: \"white_on_green\",\n                            value: 2,\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            palette: \"white_on_red\",\n                            value: 2.2,\n                        },\n                    ],\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                textAlign: \"right\",\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            queryTableDefinition: {\n                requests: [{\n                    aggregator: \"sum\",\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            palette: \"white_on_green\",\n                            value: 2,\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            palette: \"white_on_red\",\n                            value: 2.2,\n                        },\n                    ],\n                    limit: 10,\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            scatterplotDefinition: {\n                colorByGroups: [\n                    \"account\",\n                    \"apm-role-group\",\n                ],\n                request: {\n                    xes: [{\n                        aggregator: \"max\",\n                        q: \"avg:system.cpu.user{*} by {service, account}\",\n                    }],\n                    ys: [{\n                        aggregator: \"min\",\n                        q: \"avg:system.mem.used{*} by {service, account}\",\n                    }],\n                },\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n                xaxis: {\n                    includeZero: true,\n                    label: \"x\",\n                    max: \"2000\",\n                    min: \"1\",\n                    scale: \"pow\",\n                },\n                yaxis: {\n                    includeZero: false,\n                    label: \"y\",\n                    max: \"2222\",\n                    min: \"5\",\n                    scale: \"log\",\n                },\n            },\n        },\n        {\n            layout: {\n                height: 43,\n                width: 32,\n                x: 5,\n                y: 5,\n            },\n            servicemapDefinition: {\n                filters: [\n                    \"env:prod\",\n                    \"datacenter:us1.prod.dog\",\n                ],\n                service: \"master-db\",\n                title: \"env: prod, datacenter:us1.prod.dog, service: master-db\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n        },\n        {\n            timeseriesDefinition: {\n                events: [\n                    {\n                        q: \"sources:test tags:1\",\n                    },\n                    {\n                        q: \"sources:test tags:2\",\n                    },\n                ],\n                legendSize: \"2\",\n                markers: [\n                    {\n                        displayType: \"error dashed\",\n                        label: \" z=6 \",\n                        value: \"y = 4\",\n                    },\n                    {\n                        displayType: \"ok solid\",\n                        label: \" x=8 \",\n                        value: \"10 \u003c y \u003c 999\",\n                    },\n                ],\n                requests: [\n                    {\n                        displayType: \"line\",\n                        metadatas: [{\n                            aliasName: \"Alpha\",\n                            expression: \"avg:system.cpu.user{app:general} by {env}\",\n                        }],\n                        q: \"avg:system.cpu.user{app:general} by {env}\",\n                        style: {\n                            lineType: \"dashed\",\n                            lineWidth: \"thin\",\n                            palette: \"warm\",\n                        },\n                    },\n                    {\n                        displayType: \"area\",\n                        logQuery: {\n                            compute: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            groupBies: [{\n                                facet: \"host\",\n                                limit: 10,\n                                sort: {\n                                    aggregation: \"avg\",\n                                    facet: \"@duration\",\n                                    order: \"desc\",\n                                },\n                            }],\n                            index: \"mcnulty\",\n                            search: {\n                                query: \"status:info\",\n                            },\n                        },\n                    },\n                    {\n                        apmQuery: {\n                            compute: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            groupBies: [{\n                                facet: \"resource_name\",\n                                limit: 50,\n                                sort: {\n                                    aggregation: \"avg\",\n                                    facet: \"@string_query.interval\",\n                                    order: \"desc\",\n                                },\n                            }],\n                            index: \"apm-search\",\n                            search: {\n                                query: \"type:web\",\n                            },\n                        },\n                        displayType: \"bars\",\n                    },\n                    {\n                        displayType: \"area\",\n                        processQuery: {\n                            filterBies: [\"active\"],\n                            limit: 50,\n                            metric: \"process.stat.cpu.total_pct\",\n                            searchBy: \"error\",\n                        },\n                    },\n                ],\n                showLegend: true,\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n                yaxis: {\n                    includeZero: false,\n                    max: \"100\",\n                    scale: \"log\",\n                },\n            },\n        },\n        {\n            toplistDefinition: {\n                requests: [{\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            palette: \"white_on_green\",\n                            value: 2,\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            palette: \"white_on_red\",\n                            value: 2.2,\n                        },\n                    ],\n                    q: \"avg:system.cpu.user{app:general} by {env}\",\n                }],\n                title: \"Widget Title\",\n            },\n        },\n        {\n            groupDefinition: {\n                layoutType: \"ordered\",\n                title: \"Group Widget\",\n                widgets: [\n                    {\n                        noteDefinition: {\n                            backgroundColor: \"pink\",\n                            content: \"cluster note widget\",\n                            fontSize: \"14\",\n                            showTick: true,\n                            textAlign: \"center\",\n                            tickEdge: \"left\",\n                            tickPos: \"50%\",\n                        },\n                    },\n                    {\n                        alertGraphDefinition: {\n                            alertId: \"123\",\n                            time: {\n                                live_span: \"1h\",\n                            },\n                            title: \"Alert Graph\",\n                            vizType: \"toplist\",\n                        },\n                    },\n                ],\n            },\n        },\n        {\n            serviceLevelObjectiveDefinition: {\n                showErrorBudget: true,\n                sloId: \"56789\",\n                timeWindows: [\n                    \"7d\",\n                    \"previous_week\",\n                ],\n                title: \"Widget Title\",\n                viewMode: \"overall\",\n                viewType: \"detail\",\n            },\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nordered_dashboard = datadog.Dashboard(\"orderedDashboard\",\n    description=\"Created using the Datadog provider in Terraform\",\n    is_read_only=True,\n    layout_type=\"ordered\",\n    template_variables=[\n        datadog.DashboardTemplateVariableArgs(\n            default=\"aws\",\n            name=\"var_1\",\n            prefix=\"host\",\n        ),\n        datadog.DashboardTemplateVariableArgs(\n            default=\"autoscaling\",\n            name=\"var_2\",\n            prefix=\"service_name\",\n        ),\n    ],\n    template_variable_presets=[datadog.DashboardTemplateVariablePresetArgs(\n        name=\"preset_1\",\n        template_variables=[\n            {\n                \"name\": \"var_1\",\n                \"value\": \"host.dc\",\n            },\n            {\n                \"name\": \"var_2\",\n                \"value\": \"my_service\",\n            },\n        ],\n    )],\n    title=\"Ordered Layout Dashboard\",\n    widgets=[\n        datadog.DashboardWidgetArgs(\n            alert_graph_definition=datadog.DashboardWidgetAlertGraphDefinitionArgs(\n                alert_id=\"895605\",\n                time=datadog.DashboardWidgetAlertGraphDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n                viz_type=\"timeseries\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            alert_value_definition=datadog.DashboardWidgetAlertValueDefinitionArgs(\n                alert_id=\"895605\",\n                precision=3,\n                text_align=\"center\",\n                title=\"Widget Title\",\n                unit=\"b\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            alert_value_definition=datadog.DashboardWidgetAlertValueDefinitionArgs(\n                alert_id=\"895605\",\n                precision=3,\n                text_align=\"center\",\n                title=\"Widget Title\",\n                unit=\"b\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            change_definition=datadog.DashboardWidgetChangeDefinitionArgs(\n                request=[{\n                    \"changeType\": \"absolute\",\n                    \"compareTo\": \"week_before\",\n                    \"increaseGood\": True,\n                    \"orderBy\": \"name\",\n                    \"orderDir\": \"desc\",\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"showPresent\": True,\n                }],\n                time=datadog.DashboardWidgetChangeDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            distribution_definition=datadog.DashboardWidgetDistributionDefinitionArgs(\n                request=[{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"style\": {\n                        \"palette\": \"warm\",\n                    },\n                }],\n                time=datadog.DashboardWidgetDistributionDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            check_status_definition=datadog.DashboardWidgetCheckStatusDefinitionArgs(\n                check=\"aws.ecs.agent_connected\",\n                group_by=[\n                    \"account\",\n                    \"cluster\",\n                ],\n                grouping=\"cluster\",\n                tags=[\n                    \"account:demo\",\n                    \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                ],\n                time=datadog.DashboardWidgetCheckStatusDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            heatmap_definition=datadog.DashboardWidgetHeatmapDefinitionArgs(\n                request=[{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"style\": {\n                        \"palette\": \"warm\",\n                    },\n                }],\n                time=datadog.DashboardWidgetHeatmapDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n                yaxis=datadog.DashboardWidgetHeatmapDefinitionYaxisArgs(\n                    include_zero=True,\n                    max=\"2\",\n                    min=\"1\",\n                    scale=\"sqrt\",\n                ),\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            hostmap_definition=datadog.DashboardWidgetHostmapDefinitionArgs(\n                group=[\n                    \"host\",\n                    \"region\",\n                ],\n                no_group_hosts=True,\n                no_metric_hosts=True,\n                node_type=\"container\",\n                request=datadog.DashboardWidgetHostmapDefinitionRequestArgs(\n                    fill=[{\n                        \"q\": \"avg:system.load.1{*} by {host}\",\n                    }],\n                    size=[{\n                        \"q\": \"avg:memcache.uptime{*} by {host}\",\n                    }],\n                ),\n                scope=[\n                    \"region:us-east-1\",\n                    \"aws_account:727006795293\",\n                ],\n                style=datadog.DashboardWidgetHostmapDefinitionStyleArgs(\n                    fill_max=\"20\",\n                    fill_min=\"10\",\n                    palette=\"yellow_to_green\",\n                    palette_flip=True,\n                ),\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            note_definition=datadog.DashboardWidgetNoteDefinitionArgs(\n                background_color=\"pink\",\n                content=\"note text\",\n                font_size=\"14\",\n                show_tick=True,\n                text_align=\"center\",\n                tick_edge=\"left\",\n                tick_pos=\"50%\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            query_value_definition=datadog.DashboardWidgetQueryValueDefinitionArgs(\n                autoscale=True,\n                custom_unit=\"xx\",\n                precision=4,\n                request=[{\n                    \"aggregator\": \"sum\",\n                    \"conditionalFormats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"palette\": \"white_on_green\",\n                            \"value\": \"2\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"palette\": \"white_on_red\",\n                            \"value\": \"2.2\",\n                        },\n                    ],\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                text_align=\"right\",\n                time=datadog.DashboardWidgetQueryValueDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            query_table_definition=datadog.DashboardWidgetQueryTableDefinitionArgs(\n                request=[{\n                    \"aggregator\": \"sum\",\n                    \"conditionalFormats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"palette\": \"white_on_green\",\n                            \"value\": \"2\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"palette\": \"white_on_red\",\n                            \"value\": \"2.2\",\n                        },\n                    ],\n                    \"limit\": \"10\",\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                time=datadog.DashboardWidgetQueryTableDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            scatterplot_definition=datadog.DashboardWidgetScatterplotDefinitionArgs(\n                color_by_groups=[\n                    \"account\",\n                    \"apm-role-group\",\n                ],\n                request=datadog.DashboardWidgetScatterplotDefinitionRequestArgs(\n                    x=[{\n                        \"aggregator\": \"max\",\n                        \"q\": \"avg:system.cpu.user{*} by {service, account}\",\n                    }],\n                    y=[{\n                        \"aggregator\": \"min\",\n                        \"q\": \"avg:system.mem.used{*} by {service, account}\",\n                    }],\n                ),\n                time=datadog.DashboardWidgetScatterplotDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n                xaxis=datadog.DashboardWidgetScatterplotDefinitionXaxisArgs(\n                    include_zero=True,\n                    label=\"x\",\n                    max=\"2000\",\n                    min=\"1\",\n                    scale=\"pow\",\n                ),\n                yaxis=datadog.DashboardWidgetScatterplotDefinitionYaxisArgs(\n                    include_zero=False,\n                    label=\"y\",\n                    max=\"2222\",\n                    min=\"5\",\n                    scale=\"log\",\n                ),\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=43,\n                width=32,\n                x=5,\n                y=5,\n            ),\n            servicemap_definition=datadog.DashboardWidgetServicemapDefinitionArgs(\n                filters=[\n                    \"env:prod\",\n                    \"datacenter:us1.prod.dog\",\n                ],\n                service=\"master-db\",\n                title=\"env: prod, datacenter:us1.prod.dog, service: master-db\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            timeseries_definition=datadog.DashboardWidgetTimeseriesDefinitionArgs(\n                event=[\n                    {\n                        \"q\": \"sources:test tags:1\",\n                    },\n                    {\n                        \"q\": \"sources:test tags:2\",\n                    },\n                ],\n                legend_size=\"2\",\n                marker=[\n                    {\n                        \"displayType\": \"error dashed\",\n                        \"label\": \" z=6 \",\n                        \"value\": \"y = 4\",\n                    },\n                    {\n                        \"displayType\": \"ok solid\",\n                        \"label\": \" x=8 \",\n                        \"value\": \"10 \u003c y \u003c 999\",\n                    },\n                ],\n                request=[\n                    {\n                        \"displayType\": \"line\",\n                        \"metadata\": [{\n                            \"aliasName\": \"Alpha\",\n                            \"expression\": \"avg:system.cpu.user{app:general} by {env}\",\n                        }],\n                        \"q\": \"avg:system.cpu.user{app:general} by {env}\",\n                        \"style\": {\n                            \"lineType\": \"dashed\",\n                            \"lineWidth\": \"thin\",\n                            \"palette\": \"warm\",\n                        },\n                    },\n                    {\n                        \"displayType\": \"area\",\n                        \"logQuery\": {\n                            \"compute\": {\n                                \"aggregation\": \"avg\",\n                                \"facet\": \"@duration\",\n                                \"interval\": 5000,\n                            },\n                            \"groupBy\": [{\n                                \"facet\": \"host\",\n                                \"limit\": 10,\n                                \"sort\": {\n                                    \"aggregation\": \"avg\",\n                                    \"facet\": \"@duration\",\n                                    \"order\": \"desc\",\n                                },\n                            }],\n                            \"index\": \"mcnulty\",\n                            \"search\": {\n                                \"query\": \"status:info\",\n                            },\n                        },\n                    },\n                    {\n                        \"apmQuery\": {\n                            \"compute\": {\n                                \"aggregation\": \"avg\",\n                                \"facet\": \"@duration\",\n                                \"interval\": 5000,\n                            },\n                            \"groupBy\": [{\n                                \"facet\": \"resource_name\",\n                                \"limit\": 50,\n                                \"sort\": {\n                                    \"aggregation\": \"avg\",\n                                    \"facet\": \"@string_query.interval\",\n                                    \"order\": \"desc\",\n                                },\n                            }],\n                            \"index\": \"apm-search\",\n                            \"search\": {\n                                \"query\": \"type:web\",\n                            },\n                        },\n                        \"displayType\": \"bars\",\n                    },\n                    {\n                        \"displayType\": \"area\",\n                        \"processQuery\": {\n                            \"filterBy\": [\"active\"],\n                            \"limit\": 50,\n                            \"metric\": \"process.stat.cpu.total_pct\",\n                            \"searchBy\": \"error\",\n                        },\n                    },\n                ],\n                show_legend=True,\n                time=datadog.DashboardWidgetTimeseriesDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n                yaxis=datadog.DashboardWidgetTimeseriesDefinitionYaxisArgs(\n                    include_zero=False,\n                    max=\"100\",\n                    scale=\"log\",\n                ),\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            toplist_definition=datadog.DashboardWidgetToplistDefinitionArgs(\n                request=[{\n                    \"conditionalFormats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"palette\": \"white_on_green\",\n                            \"value\": \"2\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"palette\": \"white_on_red\",\n                            \"value\": \"2.2\",\n                        },\n                    ],\n                    \"q\": \"avg:system.cpu.user{app:general} by {env}\",\n                }],\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            group_definition=datadog.DashboardWidgetGroupDefinitionArgs(\n                layout_type=\"ordered\",\n                title=\"Group Widget\",\n                widget=[\n                    {\n                        \"noteDefinition\": {\n                            \"backgroundColor\": \"pink\",\n                            \"content\": \"cluster note widget\",\n                            \"fontSize\": \"14\",\n                            \"showTick\": True,\n                            \"textAlign\": \"center\",\n                            \"tickEdge\": \"left\",\n                            \"tickPos\": \"50%\",\n                        },\n                    },\n                    {\n                        \"alertGraphDefinition\": {\n                            \"alertId\": \"123\",\n                            \"time\": {\n                                \"liveSpan\": \"1h\",\n                            },\n                            \"title\": \"Alert Graph\",\n                            \"vizType\": \"toplist\",\n                        },\n                    },\n                ],\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            service_level_objective_definition=datadog.DashboardWidgetServiceLevelObjectiveDefinitionArgs(\n                show_error_budget=True,\n                slo_id=\"56789\",\n                time_windows=[\n                    \"7d\",\n                    \"previous_week\",\n                ],\n                title=\"Widget Title\",\n                view_mode=\"overall\",\n                view_type=\"detail\",\n            ),\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var orderedDashboard = new Datadog.Dashboard(\"orderedDashboard\", new Datadog.DashboardArgs\n        {\n            Description = \"Created using the Datadog provider in Terraform\",\n            IsReadOnly = true,\n            LayoutType = \"ordered\",\n            TemplateVariables = \n            {\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"aws\",\n                    Name = \"var_1\",\n                    Prefix = \"host\",\n                },\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"autoscaling\",\n                    Name = \"var_2\",\n                    Prefix = \"service_name\",\n                },\n            },\n            TemplateVariablePresets = \n            {\n                new Datadog.Inputs.DashboardTemplateVariablePresetArgs\n                {\n                    Name = \"preset_1\",\n                    TemplateVariables = \n                    {\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_1\",\n                            Value = \"host.dc\",\n                        },\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_2\",\n                            Value = \"my_service\",\n                        },\n                    },\n                },\n            },\n            Title = \"Ordered Layout Dashboard\",\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                    {\n                        AlertId = \"895605\",\n                        Time = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        VizType = \"timeseries\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertValueDefinition = new Datadog.Inputs.DashboardWidgetAlertValueDefinitionArgs\n                    {\n                        AlertId = \"895605\",\n                        Precision = 3,\n                        TextAlign = \"center\",\n                        Title = \"Widget Title\",\n                        Unit = \"b\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertValueDefinition = new Datadog.Inputs.DashboardWidgetAlertValueDefinitionArgs\n                    {\n                        AlertId = \"895605\",\n                        Precision = 3,\n                        TextAlign = \"center\",\n                        Title = \"Widget Title\",\n                        Unit = \"b\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ChangeDefinition = new Datadog.Inputs.DashboardWidgetChangeDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"changeType\", \"absolute\" },\n                                { \"compareTo\", \"week_before\" },\n                                { \"increaseGood\", true },\n                                { \"orderBy\", \"name\" },\n                                { \"orderDir\", \"desc\" },\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                                { \"showPresent\", true },\n                            },\n                        },\n                        Time = new Datadog.Inputs.DashboardWidgetChangeDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    DistributionDefinition = new Datadog.Inputs.DashboardWidgetDistributionDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                                { \"style\", \n                                {\n                                    { \"palette\", \"warm\" },\n                                } },\n                            },\n                        },\n                        Time = new Datadog.Inputs.DashboardWidgetDistributionDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    CheckStatusDefinition = new Datadog.Inputs.DashboardWidgetCheckStatusDefinitionArgs\n                    {\n                        Check = \"aws.ecs.agent_connected\",\n                        GroupBy = \n                        {\n                            \"account\",\n                            \"cluster\",\n                        },\n                        Grouping = \"cluster\",\n                        Tags = \n                        {\n                            \"account:demo\",\n                            \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                        },\n                        Time = new Datadog.Inputs.DashboardWidgetCheckStatusDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    HeatmapDefinition = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                                { \"style\", \n                                {\n                                    { \"palette\", \"warm\" },\n                                } },\n                            },\n                        },\n                        Time = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        Yaxis = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionYaxisArgs\n                        {\n                            IncludeZero = true,\n                            Max = \"2\",\n                            Min = \"1\",\n                            Scale = \"sqrt\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    HostmapDefinition = new Datadog.Inputs.DashboardWidgetHostmapDefinitionArgs\n                    {\n                        Group = \n                        {\n                            \"host\",\n                            \"region\",\n                        },\n                        NoGroupHosts = true,\n                        NoMetricHosts = true,\n                        NodeType = \"container\",\n                        Request = new Datadog.Inputs.DashboardWidgetHostmapDefinitionRequestArgs\n                        {\n                            Fill = \n                            {\n                                \n                                {\n                                    { \"q\", \"avg:system.load.1{*} by {host}\" },\n                                },\n                            },\n                            Size = \n                            {\n                                \n                                {\n                                    { \"q\", \"avg:memcache.uptime{*} by {host}\" },\n                                },\n                            },\n                        },\n                        Scope = \n                        {\n                            \"region:us-east-1\",\n                            \"aws_account:727006795293\",\n                        },\n                        Style = new Datadog.Inputs.DashboardWidgetHostmapDefinitionStyleArgs\n                        {\n                            FillMax = \"20\",\n                            FillMin = \"10\",\n                            Palette = \"yellow_to_green\",\n                            PaletteFlip = true,\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    NoteDefinition = new Datadog.Inputs.DashboardWidgetNoteDefinitionArgs\n                    {\n                        BackgroundColor = \"pink\",\n                        Content = \"note text\",\n                        FontSize = \"14\",\n                        ShowTick = true,\n                        TextAlign = \"center\",\n                        TickEdge = \"left\",\n                        TickPos = \"50%\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    QueryValueDefinition = new Datadog.Inputs.DashboardWidgetQueryValueDefinitionArgs\n                    {\n                        Autoscale = true,\n                        CustomUnit = \"xx\",\n                        Precision = 4,\n                        Request = \n                        {\n                            \n                            {\n                                { \"aggregator\", \"sum\" },\n                                { \"conditionalFormats\", \n                                {\n                                    \n                                    {\n                                        { \"comparator\", \"\u003c\" },\n                                        { \"palette\", \"white_on_green\" },\n                                        { \"value\", \"2\" },\n                                    },\n                                    \n                                    {\n                                        { \"comparator\", \"\u003e\" },\n                                        { \"palette\", \"white_on_red\" },\n                                        { \"value\", \"2.2\" },\n                                    },\n                                } },\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                            },\n                        },\n                        TextAlign = \"right\",\n                        Time = new Datadog.Inputs.DashboardWidgetQueryValueDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    QueryTableDefinition = new Datadog.Inputs.DashboardWidgetQueryTableDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"aggregator\", \"sum\" },\n                                { \"conditionalFormats\", \n                                {\n                                    \n                                    {\n                                        { \"comparator\", \"\u003c\" },\n                                        { \"palette\", \"white_on_green\" },\n                                        { \"value\", \"2\" },\n                                    },\n                                    \n                                    {\n                                        { \"comparator\", \"\u003e\" },\n                                        { \"palette\", \"white_on_red\" },\n                                        { \"value\", \"2.2\" },\n                                    },\n                                } },\n                                { \"limit\", \"10\" },\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                            },\n                        },\n                        Time = new Datadog.Inputs.DashboardWidgetQueryTableDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ScatterplotDefinition = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionArgs\n                    {\n                        ColorByGroups = \n                        {\n                            \"account\",\n                            \"apm-role-group\",\n                        },\n                        Request = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionRequestArgs\n                        {\n                            X = \n                            {\n                                \n                                {\n                                    { \"aggregator\", \"max\" },\n                                    { \"q\", \"avg:system.cpu.user{*} by {service, account}\" },\n                                },\n                            },\n                            Y = \n                            {\n                                \n                                {\n                                    { \"aggregator\", \"min\" },\n                                    { \"q\", \"avg:system.mem.used{*} by {service, account}\" },\n                                },\n                            },\n                        },\n                        Time = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        Xaxis = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionXaxisArgs\n                        {\n                            IncludeZero = true,\n                            Label = \"x\",\n                            Max = \"2000\",\n                            Min = \"1\",\n                            Scale = \"pow\",\n                        },\n                        Yaxis = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionYaxisArgs\n                        {\n                            IncludeZero = false,\n                            Label = \"y\",\n                            Max = \"2222\",\n                            Min = \"5\",\n                            Scale = \"log\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 43,\n                        Width = 32,\n                        X = 5,\n                        Y = 5,\n                    },\n                    ServicemapDefinition = new Datadog.Inputs.DashboardWidgetServicemapDefinitionArgs\n                    {\n                        Filters = \n                        {\n                            \"env:prod\",\n                            \"datacenter:us1.prod.dog\",\n                        },\n                        Service = \"master-db\",\n                        Title = \"env: prod, datacenter:us1.prod.dog, service: master-db\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                    {\n                        Event = \n                        {\n                            \n                            {\n                                { \"q\", \"sources:test tags:1\" },\n                            },\n                            \n                            {\n                                { \"q\", \"sources:test tags:2\" },\n                            },\n                        },\n                        LegendSize = \"2\",\n                        Marker = \n                        {\n                            \n                            {\n                                { \"displayType\", \"error dashed\" },\n                                { \"label\", \" z=6 \" },\n                                { \"value\", \"y = 4\" },\n                            },\n                            \n                            {\n                                { \"displayType\", \"ok solid\" },\n                                { \"label\", \" x=8 \" },\n                                { \"value\", \"10 \u003c y \u003c 999\" },\n                            },\n                        },\n                        Request = \n                        {\n                            \n                            {\n                                { \"displayType\", \"line\" },\n                                { \"metadata\", \n                                {\n                                    \n                                    {\n                                        { \"aliasName\", \"Alpha\" },\n                                        { \"expression\", \"avg:system.cpu.user{app:general} by {env}\" },\n                                    },\n                                } },\n                                { \"q\", \"avg:system.cpu.user{app:general} by {env}\" },\n                                { \"style\", \n                                {\n                                    { \"lineType\", \"dashed\" },\n                                    { \"lineWidth\", \"thin\" },\n                                    { \"palette\", \"warm\" },\n                                } },\n                            },\n                            \n                            {\n                                { \"displayType\", \"area\" },\n                                { \"logQuery\", \n                                {\n                                    { \"compute\", \n                                    {\n                                        { \"aggregation\", \"avg\" },\n                                        { \"facet\", \"@duration\" },\n                                        { \"interval\", 5000 },\n                                    } },\n                                    { \"groupBy\", \n                                    {\n                                        \n                                        {\n                                            { \"facet\", \"host\" },\n                                            { \"limit\", 10 },\n                                            { \"sort\", \n                                            {\n                                                { \"aggregation\", \"avg\" },\n                                                { \"facet\", \"@duration\" },\n                                                { \"order\", \"desc\" },\n                                            } },\n                                        },\n                                    } },\n                                    { \"index\", \"mcnulty\" },\n                                    { \"search\", \n                                    {\n                                        { \"query\", \"status:info\" },\n                                    } },\n                                } },\n                            },\n                            \n                            {\n                                { \"apmQuery\", \n                                {\n                                    { \"compute\", \n                                    {\n                                        { \"aggregation\", \"avg\" },\n                                        { \"facet\", \"@duration\" },\n                                        { \"interval\", 5000 },\n                                    } },\n                                    { \"groupBy\", \n                                    {\n                                        \n                                        {\n                                            { \"facet\", \"resource_name\" },\n                                            { \"limit\", 50 },\n                                            { \"sort\", \n                                            {\n                                                { \"aggregation\", \"avg\" },\n                                                { \"facet\", \"@string_query.interval\" },\n                                                { \"order\", \"desc\" },\n                                            } },\n                                        },\n                                    } },\n                                    { \"index\", \"apm-search\" },\n                                    { \"search\", \n                                    {\n                                        { \"query\", \"type:web\" },\n                                    } },\n                                } },\n                                { \"displayType\", \"bars\" },\n                            },\n                            \n                            {\n                                { \"displayType\", \"area\" },\n                                { \"processQuery\", \n                                {\n                                    { \"filterBy\", \n                                    {\n                                        \"active\",\n                                    } },\n                                    { \"limit\", 50 },\n                                    { \"metric\", \"process.stat.cpu.total_pct\" },\n                                    { \"searchBy\", \"error\" },\n                                } },\n                            },\n                        },\n                        ShowLegend = true,\n                        Time = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        Yaxis = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionYaxisArgs\n                        {\n                            IncludeZero = false,\n                            Max = \"100\",\n                            Scale = \"log\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ToplistDefinition = new Datadog.Inputs.DashboardWidgetToplistDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"conditionalFormats\", \n                                {\n                                    \n                                    {\n                                        { \"comparator\", \"\u003c\" },\n                                        { \"palette\", \"white_on_green\" },\n                                        { \"value\", \"2\" },\n                                    },\n                                    \n                                    {\n                                        { \"comparator\", \"\u003e\" },\n                                        { \"palette\", \"white_on_red\" },\n                                        { \"value\", \"2.2\" },\n                                    },\n                                } },\n                                { \"q\", \"avg:system.cpu.user{app:general} by {env}\" },\n                            },\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    GroupDefinition = new Datadog.Inputs.DashboardWidgetGroupDefinitionArgs\n                    {\n                        LayoutType = \"ordered\",\n                        Title = \"Group Widget\",\n                        Widget = \n                        {\n                            \n                            {\n                                { \"noteDefinition\", \n                                {\n                                    { \"backgroundColor\", \"pink\" },\n                                    { \"content\", \"cluster note widget\" },\n                                    { \"fontSize\", \"14\" },\n                                    { \"showTick\", true },\n                                    { \"textAlign\", \"center\" },\n                                    { \"tickEdge\", \"left\" },\n                                    { \"tickPos\", \"50%\" },\n                                } },\n                            },\n                            \n                            {\n                                { \"alertGraphDefinition\", \n                                {\n                                    { \"alertId\", \"123\" },\n                                    { \"time\", \n                                    {\n                                        { \"liveSpan\", \"1h\" },\n                                    } },\n                                    { \"title\", \"Alert Graph\" },\n                                    { \"vizType\", \"toplist\" },\n                                } },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ServiceLevelObjectiveDefinition = new Datadog.Inputs.DashboardWidgetServiceLevelObjectiveDefinitionArgs\n                    {\n                        ShowErrorBudget = true,\n                        SloId = \"56789\",\n                        TimeWindows = \n                        {\n                            \"7d\",\n                            \"previous_week\",\n                        },\n                        Title = \"Widget Title\",\n                        ViewMode = \"overall\",\n                        ViewType = \"detail\",\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDashboard(ctx, \"orderedDashboard\", \u0026datadog.DashboardArgs{\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Terraform\"),\n\t\t\tIsReadOnly:  pulumi.Bool(true),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tTemplateVariables: datadog.DashboardTemplateVariableArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"aws\"),\n\t\t\t\t\tName:    pulumi.String(\"var_1\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"host\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"autoscaling\"),\n\t\t\t\t\tName:    pulumi.String(\"var_2\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"service_name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariablePresets: datadog.DashboardTemplateVariablePresetArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetArgs{\n\t\t\t\t\tName: pulumi.String(\"preset_1\"),\n\t\t\t\t\tTemplateVariables: datadog.DashboardTemplateVariablePresetTemplateVariableArray{\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"host.dc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_2\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"my_service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTitle: pulumi.String(\"Ordered Layout Dashboard\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId: pulumi.String(\"895605\"),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetAlertGraphDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:   pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tVizType: pulumi.String(\"timeseries\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertValueDefinition: \u0026datadog.DashboardWidgetAlertValueDefinitionArgs{\n\t\t\t\t\t\tAlertId:   pulumi.String(\"895605\"),\n\t\t\t\t\t\tPrecision: pulumi.Int(3),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"center\"),\n\t\t\t\t\t\tTitle:     pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tUnit:      pulumi.String(\"b\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertValueDefinition: \u0026datadog.DashboardWidgetAlertValueDefinitionArgs{\n\t\t\t\t\t\tAlertId:   pulumi.String(\"895605\"),\n\t\t\t\t\t\tPrecision: pulumi.Int(3),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"center\"),\n\t\t\t\t\t\tTitle:     pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tUnit:      pulumi.String(\"b\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tChangeDefinition: \u0026datadog.DashboardWidgetChangeDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"changeType\":   pulumi.String(\"absolute\"),\n\t\t\t\t\t\t\t\t\"compareTo\":    pulumi.String(\"week_before\"),\n\t\t\t\t\t\t\t\t\"increaseGood\": pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\"orderBy\":      pulumi.String(\"name\"),\n\t\t\t\t\t\t\t\t\"orderDir\":     pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\"q\":            pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\t\"showPresent\":  pulumi.Bool(true),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetChangeDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tDistributionDefinition: \u0026datadog.DashboardWidgetDistributionDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\t\"style\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"palette\": pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetDistributionDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tCheckStatusDefinition: \u0026datadog.DashboardWidgetCheckStatusDefinitionArgs{\n\t\t\t\t\t\tCheck: pulumi.String(\"aws.ecs.agent_connected\"),\n\t\t\t\t\t\tGroupBy: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account\"),\n\t\t\t\t\t\t\tpulumi.String(\"cluster\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tGrouping: pulumi.String(\"cluster\"),\n\t\t\t\t\t\tTags: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account:demo\"),\n\t\t\t\t\t\t\tpulumi.String(\"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetCheckStatusDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tHeatmapDefinition: \u0026datadog.DashboardWidgetHeatmapDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\t\"style\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"palette\": pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetHeatmapDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetHeatmapDefinitionYaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(true),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"1\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"sqrt\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tHostmapDefinition: \u0026datadog.DashboardWidgetHostmapDefinitionArgs{\n\t\t\t\t\t\tGroup: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t\t\tpulumi.String(\"region\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tNoGroupHosts:  pulumi.Bool(true),\n\t\t\t\t\t\tNoMetricHosts: pulumi.Bool(true),\n\t\t\t\t\t\tNodeType:      pulumi.String(\"container\"),\n\t\t\t\t\t\tRequest: \u0026datadog.DashboardWidgetHostmapDefinitionRequestArgs{\n\t\t\t\t\t\t\tFill: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{*} by {host}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSize: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:memcache.uptime{*} by {host}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tScope: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"region:us-east-1\"),\n\t\t\t\t\t\t\tpulumi.String(\"aws_account:727006795293\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStyle: \u0026datadog.DashboardWidgetHostmapDefinitionStyleArgs{\n\t\t\t\t\t\t\tFillMax:     pulumi.String(\"20\"),\n\t\t\t\t\t\t\tFillMin:     pulumi.String(\"10\"),\n\t\t\t\t\t\t\tPalette:     pulumi.String(\"yellow_to_green\"),\n\t\t\t\t\t\t\tPaletteFlip: pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tNoteDefinition: \u0026datadog.DashboardWidgetNoteDefinitionArgs{\n\t\t\t\t\t\tBackgroundColor: pulumi.String(\"pink\"),\n\t\t\t\t\t\tContent:         pulumi.String(\"note text\"),\n\t\t\t\t\t\tFontSize:        pulumi.String(\"14\"),\n\t\t\t\t\t\tShowTick:        pulumi.Bool(true),\n\t\t\t\t\t\tTextAlign:       pulumi.String(\"center\"),\n\t\t\t\t\t\tTickEdge:        pulumi.String(\"left\"),\n\t\t\t\t\t\tTickPos:         pulumi.String(fmt.Sprintf(\"%v%v\", \"50\", \"%\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tQueryValueDefinition: \u0026datadog.DashboardWidgetQueryValueDefinitionArgs{\n\t\t\t\t\t\tAutoscale:  pulumi.Bool(true),\n\t\t\t\t\t\tCustomUnit: pulumi.String(\"xx\"),\n\t\t\t\t\t\tPrecision:  pulumi.Int(4),\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\"conditionalFormats\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2.2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTextAlign: pulumi.String(\"right\"),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetQueryValueDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tQueryTableDefinition: \u0026datadog.DashboardWidgetQueryTableDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\"conditionalFormats\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2.2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"limit\": pulumi.String(\"10\"),\n\t\t\t\t\t\t\t\t\"q\":     pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetQueryTableDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tScatterplotDefinition: \u0026datadog.DashboardWidgetScatterplotDefinitionArgs{\n\t\t\t\t\t\tColorByGroups: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account\"),\n\t\t\t\t\t\t\tpulumi.String(\"apm-role-group\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tRequest: \u0026datadog.DashboardWidgetScatterplotDefinitionRequestArgs{\n\t\t\t\t\t\t\tX: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"max\"),\n\t\t\t\t\t\t\t\t\t\"q\":          pulumi.String(\"avg:system.cpu.user{*} by {service, account}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tY: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"min\"),\n\t\t\t\t\t\t\t\t\t\"q\":          pulumi.String(\"avg:system.mem.used{*} by {service, account}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetScatterplotDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tXaxis: \u0026datadog.DashboardWidgetScatterplotDefinitionXaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(true),\n\t\t\t\t\t\t\tLabel:       pulumi.String(\"x\"),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2000\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"1\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"pow\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetScatterplotDefinitionYaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(false),\n\t\t\t\t\t\t\tLabel:       pulumi.String(\"y\"),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2222\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"5\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"log\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(43),\n\t\t\t\t\t\tWidth:  pulumi.Float64(32),\n\t\t\t\t\t\tX:      pulumi.Float64(5),\n\t\t\t\t\t\tY:      pulumi.Float64(5),\n\t\t\t\t\t},\n\t\t\t\t\tServicemapDefinition: \u0026datadog.DashboardWidgetServicemapDefinitionArgs{\n\t\t\t\t\t\tFilters: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"env:prod\"),\n\t\t\t\t\t\t\tpulumi.String(\"datacenter:us1.prod.dog\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tService:    pulumi.String(\"master-db\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"env: prod, datacenter:us1.prod.dog, service: master-db\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tEvent: pulumi.StringMapArray{\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"sources:test tags:1\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"sources:test tags:2\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLegendSize: pulumi.String(\"2\"),\n\t\t\t\t\t\tMarker: pulumi.StringMapArray{\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"error dashed\"),\n\t\t\t\t\t\t\t\t\"label\":       pulumi.String(\" z=6 \"),\n\t\t\t\t\t\t\t\t\"value\":       pulumi.String(\"y = 4\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"ok solid\"),\n\t\t\t\t\t\t\t\t\"label\":       pulumi.String(\" x=8 \"),\n\t\t\t\t\t\t\t\t\"value\":       pulumi.String(\"10 \u003c y \u003c 999\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tRequest: pulumi.Array{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"line\"),\n\t\t\t\t\t\t\t\t\"metadata\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"aliasName\":  pulumi.String(\"Alpha\"),\n\t\t\t\t\t\t\t\t\t\t\"expression\": pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\"style\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"lineType\":  pulumi.String(\"dashed\"),\n\t\t\t\t\t\t\t\t\t\"lineWidth\": pulumi.String(\"thin\"),\n\t\t\t\t\t\t\t\t\t\"palette\":   pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"area\"),\n\t\t\t\t\t\t\t\t\"logQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"compute\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\t\"interval\":    pulumi.Float64(5000),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"groupBy\": pulumi.MapArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\"facet\": pulumi.String(\"host\"),\n\t\t\t\t\t\t\t\t\t\t\t\"limit\": pulumi.Float64(10),\n\t\t\t\t\t\t\t\t\t\t\t\"sort\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"order\":       pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"index\": pulumi.String(\"mcnulty\"),\n\t\t\t\t\t\t\t\t\t\"search\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"status:info\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"apmQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"compute\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\t\"interval\":    pulumi.Float64(5000),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"groupBy\": pulumi.MapArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\"facet\": pulumi.String(\"resource_name\"),\n\t\t\t\t\t\t\t\t\t\t\t\"limit\": pulumi.Float64(50),\n\t\t\t\t\t\t\t\t\t\t\t\"sort\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@string_query.interval\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"order\":       pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"index\": pulumi.String(\"apm-search\"),\n\t\t\t\t\t\t\t\t\t\"search\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"type:web\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"bars\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"area\"),\n\t\t\t\t\t\t\t\t\"processQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"filterBy\": pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"active\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"limit\":    pulumi.Float64(50),\n\t\t\t\t\t\t\t\t\t\"metric\":   pulumi.String(\"process.stat.cpu.total_pct\"),\n\t\t\t\t\t\t\t\t\t\"searchBy\": pulumi.String(\"error\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tShowLegend: pulumi.Bool(true),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetTimeseriesDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetTimeseriesDefinitionYaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(false),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"100\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"log\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tToplistDefinition: \u0026datadog.DashboardWidgetToplistDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"conditionalFormats\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2.2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tGroupDefinition: \u0026datadog.DashboardWidgetGroupDefinitionArgs{\n\t\t\t\t\t\tLayoutType: pulumi.String(\"ordered\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Group Widget\"),\n\t\t\t\t\t\tWidget: pulumi.Array{\n\t\t\t\t\t\t\tpulumi.MapMap{\n\t\t\t\t\t\t\t\t\"noteDefinition\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"backgroundColor\": pulumi.String(\"pink\"),\n\t\t\t\t\t\t\t\t\t\"content\":         pulumi.String(\"cluster note widget\"),\n\t\t\t\t\t\t\t\t\t\"fontSize\":        pulumi.String(\"14\"),\n\t\t\t\t\t\t\t\t\t\"showTick\":        pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\t\"textAlign\":       pulumi.String(\"center\"),\n\t\t\t\t\t\t\t\t\t\"tickEdge\":        pulumi.String(\"left\"),\n\t\t\t\t\t\t\t\t\t\"tickPos\":         pulumi.String(fmt.Sprintf(\"%v%v\", \"50\", \"%\")),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.MapMap{\n\t\t\t\t\t\t\t\t\"alertGraphDefinition\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"alertId\": pulumi.String(\"123\"),\n\t\t\t\t\t\t\t\t\t\"time\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"liveSpan\": pulumi.String(\"1h\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"title\":   pulumi.String(\"Alert Graph\"),\n\t\t\t\t\t\t\t\t\t\"vizType\": pulumi.String(\"toplist\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tServiceLevelObjectiveDefinition: \u0026datadog.DashboardWidgetServiceLevelObjectiveDefinitionArgs{\n\t\t\t\t\t\tShowErrorBudget: pulumi.Bool(true),\n\t\t\t\t\t\tSloId:           pulumi.String(\"56789\"),\n\t\t\t\t\t\tTimeWindows: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"7d\"),\n\t\t\t\t\t\t\tpulumi.String(\"previous_week\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tViewMode: pulumi.String(\"overall\"),\n\t\t\t\t\t\tViewType: pulumi.String(\"detail\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### Create A New Datadog Dashboard - Free Layout\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst freeDashboard = new datadog.Dashboard(\"free_dashboard\", {\n    description: \"Created using the Datadog provider in Terraform\",\n    isReadOnly: false,\n    layoutType: \"free\",\n    templateVariables: [\n        {\n            default: \"aws\",\n            name: \"var_1\",\n            prefix: \"host\",\n        },\n        {\n            default: \"autoscaling\",\n            name: \"var_2\",\n            prefix: \"service_name\",\n        },\n    ],\n    templateVariablePresets: [{\n        name: \"preset_1\",\n        templateVariables: [\n            {\n                name: \"var_1\",\n                value: \"host.dc\",\n            },\n            {\n                name: \"var_2\",\n                value: \"my_service\",\n            },\n        ],\n    }],\n    title: \"Free Layout Dashboard\",\n    widgets: [\n        {\n            eventStreamDefinition: {\n                eventSize: \"l\",\n                query: \"*\",\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n            layout: {\n                height: 43,\n                width: 32,\n                x: 5,\n                y: 5,\n            },\n        },\n        {\n            eventTimelineDefinition: {\n                query: \"*\",\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"Widget Title\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n            layout: {\n                height: 9,\n                width: 65,\n                x: 42,\n                y: 73,\n            },\n        },\n        {\n            freeTextDefinition: {\n                color: \"#d00\",\n                fontSize: \"88\",\n                text: \"free text content\",\n                textAlign: \"left\",\n            },\n            layout: {\n                height: 20,\n                width: 30,\n                x: 42,\n                y: 5,\n            },\n        },\n        {\n            iframeDefinition: {\n                url: \"http://google.com\",\n            },\n            layout: {\n                height: 46,\n                width: 39,\n                x: 111,\n                y: 8,\n            },\n        },\n        {\n            imageDefinition: {\n                margin: \"small\",\n                sizing: \"fit\",\n                url: \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n            },\n            layout: {\n                height: 20,\n                width: 30,\n                x: 77,\n                y: 7,\n            },\n        },\n        {\n            layout: {\n                height: 36,\n                width: 32,\n                x: 5,\n                y: 51,\n            },\n            logStreamDefinition: {\n                columns: [\n                    \"core_host\",\n                    \"core_service\",\n                    \"tag_source\",\n                ],\n                indexes: [\"main\"],\n                messageDisplay: \"expanded-md\",\n                query: \"error\",\n                showDateColumn: true,\n                showMessageColumn: true,\n                sort: {\n                    column: \"time\",\n                    order: \"desc\",\n                },\n            },\n        },\n        {\n            layout: {\n                height: 40,\n                width: 30,\n                x: 112,\n                y: 55,\n            },\n            manageStatusDefinition: {\n                colorPreference: \"text\",\n                displayFormat: \"countsAndList\",\n                hideZeroCounts: true,\n                query: \"type:metric\",\n                showLastTriggered: false,\n                sort: \"status,asc\",\n                summaryType: \"monitors\",\n                title: \"Widget Title\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n        },\n        {\n            layout: {\n                height: 38,\n                width: 67,\n                x: 40,\n                y: 28,\n            },\n            traceServiceDefinition: {\n                displayFormat: \"three_column\",\n                env: \"datad0g.com\",\n                service: \"alerting-cassandra\",\n                showBreakdown: true,\n                showDistribution: true,\n                showErrors: true,\n                showHits: true,\n                showLatency: false,\n                showResourceList: false,\n                sizeFormat: \"large\",\n                spanName: \"cassandra.query\",\n                time: {\n                    live_span: \"1h\",\n                },\n                title: \"alerting-cassandra #env:datad0g.com\",\n                titleAlign: \"center\",\n                titleSize: \"13\",\n            },\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nfree_dashboard = datadog.Dashboard(\"freeDashboard\",\n    description=\"Created using the Datadog provider in Terraform\",\n    is_read_only=False,\n    layout_type=\"free\",\n    template_variables=[\n        datadog.DashboardTemplateVariableArgs(\n            default=\"aws\",\n            name=\"var_1\",\n            prefix=\"host\",\n        ),\n        datadog.DashboardTemplateVariableArgs(\n            default=\"autoscaling\",\n            name=\"var_2\",\n            prefix=\"service_name\",\n        ),\n    ],\n    template_variable_presets=[datadog.DashboardTemplateVariablePresetArgs(\n        name=\"preset_1\",\n        template_variables=[\n            {\n                \"name\": \"var_1\",\n                \"value\": \"host.dc\",\n            },\n            {\n                \"name\": \"var_2\",\n                \"value\": \"my_service\",\n            },\n        ],\n    )],\n    title=\"Free Layout Dashboard\",\n    widgets=[\n        datadog.DashboardWidgetArgs(\n            event_stream_definition=datadog.DashboardWidgetEventStreamDefinitionArgs(\n                event_size=\"l\",\n                query=\"*\",\n                time=datadog.DashboardWidgetEventStreamDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=43,\n                width=32,\n                x=5,\n                y=5,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            event_timeline_definition=datadog.DashboardWidgetEventTimelineDefinitionArgs(\n                query=\"*\",\n                time=datadog.DashboardWidgetEventTimelineDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"Widget Title\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=9,\n                width=65,\n                x=42,\n                y=73,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            free_text_definition=datadog.DashboardWidgetFreeTextDefinitionArgs(\n                color=\"#d00\",\n                font_size=\"88\",\n                text=\"free text content\",\n                text_align=\"left\",\n            ),\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=20,\n                width=30,\n                x=42,\n                y=5,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            iframe_definition=datadog.DashboardWidgetIframeDefinitionArgs(\n                url=\"http://google.com\",\n            ),\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=46,\n                width=39,\n                x=111,\n                y=8,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            image_definition=datadog.DashboardWidgetImageDefinitionArgs(\n                margin=\"small\",\n                sizing=\"fit\",\n                url=\"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n            ),\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=20,\n                width=30,\n                x=77,\n                y=7,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=36,\n                width=32,\n                x=5,\n                y=51,\n            ),\n            log_stream_definition=datadog.DashboardWidgetLogStreamDefinitionArgs(\n                columns=[\n                    \"core_host\",\n                    \"core_service\",\n                    \"tag_source\",\n                ],\n                indexes=[\"main\"],\n                message_display=\"expanded-md\",\n                query=\"error\",\n                show_date_column=True,\n                show_message_column=True,\n                sort=datadog.DashboardWidgetLogStreamDefinitionSortArgs(\n                    column=\"time\",\n                    order=\"desc\",\n                ),\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=40,\n                width=30,\n                x=112,\n                y=55,\n            ),\n            manage_status_definition=datadog.DashboardWidgetManageStatusDefinitionArgs(\n                color_preference=\"text\",\n                display_format=\"countsAndList\",\n                hide_zero_counts=True,\n                query=\"type:metric\",\n                show_last_triggered=False,\n                sort=\"status,asc\",\n                summary_type=\"monitors\",\n                title=\"Widget Title\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            layout=datadog.DashboardWidgetLayoutArgs(\n                height=38,\n                width=67,\n                x=40,\n                y=28,\n            ),\n            trace_service_definition=datadog.DashboardWidgetTraceServiceDefinitionArgs(\n                display_format=\"three_column\",\n                env=\"datad0g.com\",\n                service=\"alerting-cassandra\",\n                show_breakdown=True,\n                show_distribution=True,\n                show_errors=True,\n                show_hits=True,\n                show_latency=False,\n                show_resource_list=False,\n                size_format=\"large\",\n                span_name=\"cassandra.query\",\n                time=datadog.DashboardWidgetTraceServiceDefinitionTimeArgs(\n                    live_span=\"1h\",\n                ),\n                title=\"alerting-cassandra #env:datad0g.com\",\n                title_align=\"center\",\n                title_size=\"13\",\n            ),\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var freeDashboard = new Datadog.Dashboard(\"freeDashboard\", new Datadog.DashboardArgs\n        {\n            Description = \"Created using the Datadog provider in Terraform\",\n            IsReadOnly = false,\n            LayoutType = \"free\",\n            TemplateVariables = \n            {\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"aws\",\n                    Name = \"var_1\",\n                    Prefix = \"host\",\n                },\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"autoscaling\",\n                    Name = \"var_2\",\n                    Prefix = \"service_name\",\n                },\n            },\n            TemplateVariablePresets = \n            {\n                new Datadog.Inputs.DashboardTemplateVariablePresetArgs\n                {\n                    Name = \"preset_1\",\n                    TemplateVariables = \n                    {\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_1\",\n                            Value = \"host.dc\",\n                        },\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_2\",\n                            Value = \"my_service\",\n                        },\n                    },\n                },\n            },\n            Title = \"Free Layout Dashboard\",\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    EventStreamDefinition = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionArgs\n                    {\n                        EventSize = \"l\",\n                        Query = \"*\",\n                        Time = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 43,\n                        Width = 32,\n                        X = 5,\n                        Y = 5,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    EventTimelineDefinition = new Datadog.Inputs.DashboardWidgetEventTimelineDefinitionArgs\n                    {\n                        Query = \"*\",\n                        Time = new Datadog.Inputs.DashboardWidgetEventTimelineDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 9,\n                        Width = 65,\n                        X = 42,\n                        Y = 73,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    FreeTextDefinition = new Datadog.Inputs.DashboardWidgetFreeTextDefinitionArgs\n                    {\n                        Color = \"#d00\",\n                        FontSize = \"88\",\n                        Text = \"free text content\",\n                        TextAlign = \"left\",\n                    },\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 20,\n                        Width = 30,\n                        X = 42,\n                        Y = 5,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    IframeDefinition = new Datadog.Inputs.DashboardWidgetIframeDefinitionArgs\n                    {\n                        Url = \"http://google.com\",\n                    },\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 46,\n                        Width = 39,\n                        X = 111,\n                        Y = 8,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ImageDefinition = new Datadog.Inputs.DashboardWidgetImageDefinitionArgs\n                    {\n                        Margin = \"small\",\n                        Sizing = \"fit\",\n                        Url = \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n                    },\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 20,\n                        Width = 30,\n                        X = 77,\n                        Y = 7,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 36,\n                        Width = 32,\n                        X = 5,\n                        Y = 51,\n                    },\n                    LogStreamDefinition = new Datadog.Inputs.DashboardWidgetLogStreamDefinitionArgs\n                    {\n                        Columns = \n                        {\n                            \"core_host\",\n                            \"core_service\",\n                            \"tag_source\",\n                        },\n                        Indexes = \n                        {\n                            \"main\",\n                        },\n                        MessageDisplay = \"expanded-md\",\n                        Query = \"error\",\n                        ShowDateColumn = true,\n                        ShowMessageColumn = true,\n                        Sort = new Datadog.Inputs.DashboardWidgetLogStreamDefinitionSortArgs\n                        {\n                            Column = \"time\",\n                            Order = \"desc\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 40,\n                        Width = 30,\n                        X = 112,\n                        Y = 55,\n                    },\n                    ManageStatusDefinition = new Datadog.Inputs.DashboardWidgetManageStatusDefinitionArgs\n                    {\n                        ColorPreference = \"text\",\n                        DisplayFormat = \"countsAndList\",\n                        HideZeroCounts = true,\n                        Query = \"type:metric\",\n                        ShowLastTriggered = false,\n                        Sort = \"status,asc\",\n                        SummaryType = \"monitors\",\n                        Title = \"Widget Title\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 38,\n                        Width = 67,\n                        X = 40,\n                        Y = 28,\n                    },\n                    TraceServiceDefinition = new Datadog.Inputs.DashboardWidgetTraceServiceDefinitionArgs\n                    {\n                        DisplayFormat = \"three_column\",\n                        Env = \"datad0g.com\",\n                        Service = \"alerting-cassandra\",\n                        ShowBreakdown = true,\n                        ShowDistribution = true,\n                        ShowErrors = true,\n                        ShowHits = true,\n                        ShowLatency = false,\n                        ShowResourceList = false,\n                        SizeFormat = \"large\",\n                        SpanName = \"cassandra.query\",\n                        Time = new Datadog.Inputs.DashboardWidgetTraceServiceDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"alerting-cassandra #env:datad0g.com\",\n                        TitleAlign = \"center\",\n                        TitleSize = \"13\",\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDashboard(ctx, \"freeDashboard\", \u0026datadog.DashboardArgs{\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Terraform\"),\n\t\t\tIsReadOnly:  pulumi.Bool(false),\n\t\t\tLayoutType:  pulumi.String(\"free\"),\n\t\t\tTemplateVariables: datadog.DashboardTemplateVariableArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"aws\"),\n\t\t\t\t\tName:    pulumi.String(\"var_1\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"host\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"autoscaling\"),\n\t\t\t\t\tName:    pulumi.String(\"var_2\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"service_name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariablePresets: datadog.DashboardTemplateVariablePresetArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetArgs{\n\t\t\t\t\tName: pulumi.String(\"preset_1\"),\n\t\t\t\t\tTemplateVariables: datadog.DashboardTemplateVariablePresetTemplateVariableArray{\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"host.dc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_2\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"my_service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTitle: pulumi.String(\"Free Layout Dashboard\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.DashboardWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tEventSize: pulumi.String(\"l\"),\n\t\t\t\t\t\tQuery:     pulumi.String(\"*\"),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetEventStreamDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(43),\n\t\t\t\t\t\tWidth:  pulumi.Float64(32),\n\t\t\t\t\t\tX:      pulumi.Float64(5),\n\t\t\t\t\t\tY:      pulumi.Float64(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventTimelineDefinition: \u0026datadog.DashboardWidgetEventTimelineDefinitionArgs{\n\t\t\t\t\t\tQuery: pulumi.String(\"*\"),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetEventTimelineDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(9),\n\t\t\t\t\t\tWidth:  pulumi.Float64(65),\n\t\t\t\t\t\tX:      pulumi.Float64(42),\n\t\t\t\t\t\tY:      pulumi.Float64(73),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tFreeTextDefinition: \u0026datadog.DashboardWidgetFreeTextDefinitionArgs{\n\t\t\t\t\t\tColor:     pulumi.String(\"#d00\"),\n\t\t\t\t\t\tFontSize:  pulumi.String(\"88\"),\n\t\t\t\t\t\tText:      pulumi.String(\"free text content\"),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"left\"),\n\t\t\t\t\t},\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(20),\n\t\t\t\t\t\tWidth:  pulumi.Float64(30),\n\t\t\t\t\t\tX:      pulumi.Float64(42),\n\t\t\t\t\t\tY:      pulumi.Float64(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tIframeDefinition: \u0026datadog.DashboardWidgetIframeDefinitionArgs{\n\t\t\t\t\t\tUrl: pulumi.String(\"http://google.com\"),\n\t\t\t\t\t},\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(46),\n\t\t\t\t\t\tWidth:  pulumi.Float64(39),\n\t\t\t\t\t\tX:      pulumi.Float64(111),\n\t\t\t\t\t\tY:      pulumi.Float64(8),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tImageDefinition: \u0026datadog.DashboardWidgetImageDefinitionArgs{\n\t\t\t\t\t\tMargin: pulumi.String(\"small\"),\n\t\t\t\t\t\tSizing: pulumi.String(\"fit\"),\n\t\t\t\t\t\tUrl:    pulumi.String(\"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\"),\n\t\t\t\t\t},\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(20),\n\t\t\t\t\t\tWidth:  pulumi.Float64(30),\n\t\t\t\t\t\tX:      pulumi.Float64(77),\n\t\t\t\t\t\tY:      pulumi.Float64(7),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(36),\n\t\t\t\t\t\tWidth:  pulumi.Float64(32),\n\t\t\t\t\t\tX:      pulumi.Float64(5),\n\t\t\t\t\t\tY:      pulumi.Float64(51),\n\t\t\t\t\t},\n\t\t\t\t\tLogStreamDefinition: \u0026datadog.DashboardWidgetLogStreamDefinitionArgs{\n\t\t\t\t\t\tColumns: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"core_host\"),\n\t\t\t\t\t\t\tpulumi.String(\"core_service\"),\n\t\t\t\t\t\t\tpulumi.String(\"tag_source\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"main\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tMessageDisplay:    pulumi.String(\"expanded-md\"),\n\t\t\t\t\t\tQuery:             pulumi.String(\"error\"),\n\t\t\t\t\t\tShowDateColumn:    pulumi.Bool(true),\n\t\t\t\t\t\tShowMessageColumn: pulumi.Bool(true),\n\t\t\t\t\t\tSort: \u0026datadog.DashboardWidgetLogStreamDefinitionSortArgs{\n\t\t\t\t\t\t\tColumn: pulumi.String(\"time\"),\n\t\t\t\t\t\t\tOrder:  pulumi.String(\"desc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(40),\n\t\t\t\t\t\tWidth:  pulumi.Float64(30),\n\t\t\t\t\t\tX:      pulumi.Float64(112),\n\t\t\t\t\t\tY:      pulumi.Float64(55),\n\t\t\t\t\t},\n\t\t\t\t\tManageStatusDefinition: \u0026datadog.DashboardWidgetManageStatusDefinitionArgs{\n\t\t\t\t\t\tColorPreference:   pulumi.String(\"text\"),\n\t\t\t\t\t\tDisplayFormat:     pulumi.String(\"countsAndList\"),\n\t\t\t\t\t\tHideZeroCounts:    pulumi.Bool(true),\n\t\t\t\t\t\tQuery:             pulumi.String(\"type:metric\"),\n\t\t\t\t\t\tShowLastTriggered: pulumi.Bool(false),\n\t\t\t\t\t\tSort:              pulumi.String(\"status,asc\"),\n\t\t\t\t\t\tSummaryType:       pulumi.String(\"monitors\"),\n\t\t\t\t\t\tTitle:             pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleAlign:        pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:         pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(38),\n\t\t\t\t\t\tWidth:  pulumi.Float64(67),\n\t\t\t\t\t\tX:      pulumi.Float64(40),\n\t\t\t\t\t\tY:      pulumi.Float64(28),\n\t\t\t\t\t},\n\t\t\t\t\tTraceServiceDefinition: \u0026datadog.DashboardWidgetTraceServiceDefinitionArgs{\n\t\t\t\t\t\tDisplayFormat:    pulumi.String(\"three_column\"),\n\t\t\t\t\t\tEnv:              pulumi.String(\"datad0g.com\"),\n\t\t\t\t\t\tService:          pulumi.String(\"alerting-cassandra\"),\n\t\t\t\t\t\tShowBreakdown:    pulumi.Bool(true),\n\t\t\t\t\t\tShowDistribution: pulumi.Bool(true),\n\t\t\t\t\t\tShowErrors:       pulumi.Bool(true),\n\t\t\t\t\t\tShowHits:         pulumi.Bool(true),\n\t\t\t\t\t\tShowLatency:      pulumi.Bool(false),\n\t\t\t\t\t\tShowResourceList: pulumi.Bool(false),\n\t\t\t\t\t\tSizeFormat:       pulumi.String(\"large\"),\n\t\t\t\t\t\tSpanName:         pulumi.String(\"cassandra.query\"),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetTraceServiceDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:      pulumi.String(\"alerting-cassandra #env:datad0g.com\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"center\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"13\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard belongs to.\n"
                },
                "dashboardListsRemoveds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "required": [
                "dashboardListsRemoveds",
                "layoutType",
                "title",
                "url",
                "widgets"
            ],
            "inputProperties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard belongs to.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "requiredInputs": [
                "layoutType",
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "dashboardLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard belongs to.\n"
                    },
                    "dashboardListsRemoveds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the dashboard.\n"
                    },
                    "isReadOnly": {
                        "type": "boolean",
                        "description": "Whether this dashboard is read-only.\n"
                    },
                    "layoutType": {
                        "type": "string",
                        "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                    },
                    "notifyLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                    },
                    "templateVariablePresets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                        },
                        "description": "The list of selectable template variable presets for this dashboard.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardTemplateVariable:DashboardTemplateVariable"
                        },
                        "description": "The list of template variables for this dashboard.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the dashboard.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the dashboard.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardWidget:DashboardWidget"
                        },
                        "description": "The list of widgets to display on the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardList:DashboardList": {
            "description": "Provides a Datadog dashboard_list resource. This can be used to create and manage Datadog Dashboard Lists and the individual dashboards within them.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreate a new Dashboard list with two dashboards\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst time = new datadog.Dashboard(\"time\", {\n    description: \"Created using the Datadog provider in TF\",\n    isReadOnly: true,\n    layoutType: \"ordered\",\n    title: \"TF Test Layout Dashboard\",\n    widgets: [{\n        alertGraphDefinition: {\n            alertId: \"1234\",\n            time: {\n                live_span: \"1h\",\n            },\n            title: \"Widget Title\",\n            vizType: \"timeseries\",\n        },\n    }],\n});\nconst screen = new datadog.Dashboard(\"screen\", {\n    description: \"Created using the Datadog provider in TF\",\n    isReadOnly: false,\n    layoutType: \"free\",\n    title: \"TF Test Free Layout Dashboard\",\n    widgets: [{\n        eventStreamDefinition: {\n            eventSize: \"l\",\n            query: \"*\",\n            time: {\n                live_span: \"1h\",\n            },\n            title: \"Widget Title\",\n            titleAlign: \"left\",\n            titleSize: \"16\",\n        },\n        layout: {\n            height: 43,\n            width: 32,\n            x: 5,\n            y: 5,\n        },\n    }],\n});\nconst newList = new datadog.DashboardList(\"new_list\", {\n    dashItems: [\n        {\n            dashId: time.id,\n            type: \"custom_timeboard\",\n        },\n        {\n            dashId: screen.id,\n            type: \"custom_screenboard\",\n        },\n    ],\n    name: \"TF Created List\",\n}, { dependsOn: [screen, time] });\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntime = datadog.Dashboard(\"time\",\n    description=\"Created using the Datadog provider in TF\",\n    is_read_only=True,\n    layout_type=\"ordered\",\n    title=\"TF Test Layout Dashboard\",\n    widgets=[datadog.DashboardWidgetArgs(\n        alert_graph_definition=datadog.DashboardWidgetAlertGraphDefinitionArgs(\n            alert_id=\"1234\",\n            time=datadog.DashboardWidgetAlertGraphDefinitionTimeArgs(\n                live_span=\"1h\",\n            ),\n            title=\"Widget Title\",\n            viz_type=\"timeseries\",\n        ),\n    )])\nscreen = datadog.Dashboard(\"screen\",\n    description=\"Created using the Datadog provider in TF\",\n    is_read_only=False,\n    layout_type=\"free\",\n    title=\"TF Test Free Layout Dashboard\",\n    widgets=[datadog.DashboardWidgetArgs(\n        event_stream_definition=datadog.DashboardWidgetEventStreamDefinitionArgs(\n            event_size=\"l\",\n            query=\"*\",\n            time=datadog.DashboardWidgetEventStreamDefinitionTimeArgs(\n                live_span=\"1h\",\n            ),\n            title=\"Widget Title\",\n            title_align=\"left\",\n            title_size=\"16\",\n        ),\n        layout=datadog.DashboardWidgetLayoutArgs(\n            height=43,\n            width=32,\n            x=5,\n            y=5,\n        ),\n    )])\nnew_list = datadog.DashboardList(\"newList\",\n    dash_items=[\n        datadog.DashboardListDashItemArgs(\n            dash_id=time.id,\n            type=\"custom_timeboard\",\n        ),\n        datadog.DashboardListDashItemArgs(\n            dash_id=screen.id,\n            type=\"custom_screenboard\",\n        ),\n    ],\n    name=\"TF Created List\",\n    opts=ResourceOptions(depends_on=[\n            \"datadog_dashboard.screen\",\n            \"datadog_dashboard.time\",\n        ]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var time = new Datadog.Dashboard(\"time\", new Datadog.DashboardArgs\n        {\n            Description = \"Created using the Datadog provider in TF\",\n            IsReadOnly = true,\n            LayoutType = \"ordered\",\n            Title = \"TF Test Layout Dashboard\",\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                    {\n                        AlertId = \"1234\",\n                        Time = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        VizType = \"timeseries\",\n                    },\n                },\n            },\n        });\n        var screen = new Datadog.Dashboard(\"screen\", new Datadog.DashboardArgs\n        {\n            Description = \"Created using the Datadog provider in TF\",\n            IsReadOnly = false,\n            LayoutType = \"free\",\n            Title = \"TF Test Free Layout Dashboard\",\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    EventStreamDefinition = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionArgs\n                    {\n                        EventSize = \"l\",\n                        Query = \"*\",\n                        Time = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionTimeArgs\n                        {\n                            LiveSpan = \"1h\",\n                        },\n                        Title = \"Widget Title\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                    Layout = new Datadog.Inputs.DashboardWidgetLayoutArgs\n                    {\n                        Height = 43,\n                        Width = 32,\n                        X = 5,\n                        Y = 5,\n                    },\n                },\n            },\n        });\n        var newList = new Datadog.DashboardList(\"newList\", new Datadog.DashboardListArgs\n        {\n            DashItems = \n            {\n                new Datadog.Inputs.DashboardListDashItemArgs\n                {\n                    DashId = time.Id,\n                    Type = \"custom_timeboard\",\n                },\n                new Datadog.Inputs.DashboardListDashItemArgs\n                {\n                    DashId = screen.Id,\n                    Type = \"custom_screenboard\",\n                },\n            },\n            Name = \"TF Created List\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_dashboard.screen\",\n                \"datadog_dashboard.time\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttime, err := datadog.NewDashboard(ctx, \"time\", \u0026datadog.DashboardArgs{\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in TF\"),\n\t\t\tIsReadOnly:  pulumi.Bool(true),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tTitle:       pulumi.String(\"TF Test Layout Dashboard\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId: pulumi.String(\"1234\"),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetAlertGraphDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:   pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tVizType: pulumi.String(\"timeseries\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscreen, err := datadog.NewDashboard(ctx, \"screen\", \u0026datadog.DashboardArgs{\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in TF\"),\n\t\t\tIsReadOnly:  pulumi.Bool(false),\n\t\t\tLayoutType:  pulumi.String(\"free\"),\n\t\t\tTitle:       pulumi.String(\"TF Test Free Layout Dashboard\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.DashboardWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tEventSize: pulumi.String(\"l\"),\n\t\t\t\t\t\tQuery:     pulumi.String(\"*\"),\n\t\t\t\t\t\tTime: \u0026datadog.DashboardWidgetEventStreamDefinitionTimeArgs{\n\t\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t\tLayout: \u0026datadog.DashboardWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Float64(43),\n\t\t\t\t\t\tWidth:  pulumi.Float64(32),\n\t\t\t\t\t\tX:      pulumi.Float64(5),\n\t\t\t\t\t\tY:      pulumi.Float64(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewDashboardList(ctx, \"newList\", \u0026datadog.DashboardListArgs{\n\t\t\tDashItems: datadog.DashboardListDashItemArray{\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tDashId: time.ID(),\n\t\t\t\t\tType:   pulumi.String(\"custom_timeboard\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tDashId: screen.ID(),\n\t\t\t\t\tType:   pulumi.String(\"custom_screenboard\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tName: pulumi.String(\"TF Created List\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_dashboard.screen\",\n\t\t\t\"datadog_dashboard.time\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashbaord items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashbaord items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardList resources.\n",
                "properties": {
                    "dashItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/DashboardListDashItem:DashboardListDashItem"
                        },
                        "description": "A set of dashbaord items that belong to this list\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Dashboard List\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/downtime:Downtime": {
            "description": "Provides a Datadog downtime resource. This can be used to create and manage Datadog downtimes.\n\n## Example: downtime for a specific monitor\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new daily 1700-0900 Datadog downtime for a specific monitor id\nconst foo = new datadog.Downtime(\"foo\", {\n    end: 1483365600,\n    monitorId: 12345,\n    recurrence: {\n        period: 1,\n        type: \"days\",\n    },\n    scopes: [\"*\"],\n    start: 1483308000,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new daily 1700-0900 Datadog downtime for a specific monitor id\nfoo = datadog.Downtime(\"foo\",\n    end=1483365600,\n    monitor_id=12345,\n    recurrence=datadog.DowntimeRecurrenceArgs(\n        period=1,\n        type=\"days\",\n    ),\n    scopes=[\"*\"],\n    start=1483308000)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new daily 1700-0900 Datadog downtime for a specific monitor id\n        var foo = new Datadog.Downtime(\"foo\", new Datadog.DowntimeArgs\n        {\n            End = 1483365600,\n            MonitorId = 12345,\n            Recurrence = new Datadog.Inputs.DowntimeRecurrenceArgs\n            {\n                Period = 1,\n                Type = \"days\",\n            },\n            Scopes = \n            {\n                \"*\",\n            },\n            Start = 1483308000,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDowntime(ctx, \"foo\", \u0026datadog.DowntimeArgs{\n\t\t\tEnd:       pulumi.Int(1483365600),\n\t\t\tMonitorId: pulumi.Int(12345),\n\t\t\tRecurrence: \u0026datadog.DowntimeRecurrenceArgs{\n\t\t\t\tPeriod: pulumi.Int(1),\n\t\t\t\tType:   pulumi.String(\"days\"),\n\t\t\t},\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"*\"),\n\t\t\t},\n\t\t\tStart: pulumi.Int(1483308000),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n## Example: downtime for all monitors\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new daily 1700-0900 Datadog downtime for all monitors\nconst foo = new datadog.Downtime(\"foo\", {\n    end: 1483365600,\n    recurrence: {\n        period: 1,\n        type: \"days\",\n    },\n    scopes: [\"*\"],\n    start: 1483308000,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new daily 1700-0900 Datadog downtime for all monitors\nfoo = datadog.Downtime(\"foo\",\n    end=1483365600,\n    recurrence=datadog.DowntimeRecurrenceArgs(\n        period=1,\n        type=\"days\",\n    ),\n    scopes=[\"*\"],\n    start=1483308000)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new daily 1700-0900 Datadog downtime for all monitors\n        var foo = new Datadog.Downtime(\"foo\", new Datadog.DowntimeArgs\n        {\n            End = 1483365600,\n            Recurrence = new Datadog.Inputs.DowntimeRecurrenceArgs\n            {\n                Period = 1,\n                Type = \"days\",\n            },\n            Scopes = \n            {\n                \"*\",\n            },\n            Start = 1483308000,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDowntime(ctx, \"foo\", \u0026datadog.DowntimeArgs{\n\t\t\tEnd: pulumi.Int(1483365600),\n\t\t\tRecurrence: \u0026datadog.DowntimeRecurrenceArgs{\n\t\t\t\tPeriod: pulumi.Int(1),\n\t\t\t\tType:   pulumi.String(\"days\"),\n\t\t\t},\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"*\"),\n\t\t\t},\n\t\t\tStart: pulumi.Int(1483308000),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is being actively applied\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is not being applied\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire\n"
                },
                "endDate": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start\n"
                },
                "startDate": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC\n"
                }
            },
            "required": [
                "scopes"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is being actively applied\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is not being applied\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire\n"
                },
                "endDate": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start\n"
                },
                "startDate": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Downtime resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is being actively applied\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is not being applied\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Optionally specify an end date when this downtime should expire\n"
                    },
                    "endDate": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string",
                        "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "When specified, this downtime will only apply to this monitor\n"
                    },
                    "monitorTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                    },
                    "recurrence": {
                        "$ref": "#/types/datadog:/DowntimeRecurrence:DowntimeRecurrence",
                        "description": "Optional recurring schedule for this downtime\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "Specify when this downtime should start\n"
                    },
                    "startDate": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone for the downtime, default UTC\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchive:LogsArchive": {
            "description": "Provides a Datadog [Logs Archive API](https://docs.datadoghq.com/api/v2/logs-archives/) resource, which is used to create and manage Datadog logs archives.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreate a Datadog logs archive:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myS3Archive = new datadog.LogsArchive(\"my_s3_archive\", {\n    name: \"my s3 archive\",\n    query: \"service:myservice\",\n    s3: {\n        account_id: \"001234567888\",\n        bucket: \"my-bucket\",\n        path: \"/path/foo\",\n        role_name: \"my-role-name\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_s3_archive = datadog.LogsArchive(\"myS3Archive\",\n    name=\"my s3 archive\",\n    query=\"service:myservice\",\n    s3=datadog.LogsArchiveS3Args(\n        account_id=\"001234567888\",\n        bucket=\"my-bucket\",\n        path=\"/path/foo\",\n        role_name=\"my-role-name\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myS3Archive = new Datadog.LogsArchive(\"myS3Archive\", new Datadog.LogsArchiveArgs\n        {\n            Name = \"my s3 archive\",\n            Query = \"service:myservice\",\n            S3 = new Datadog.Inputs.LogsArchiveS3Args\n            {\n                Account_id = \"001234567888\",\n                Bucket = \"my-bucket\",\n                Path = \"/path/foo\",\n                Role_name = \"my-role-name\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsArchive(ctx, \"myS3Archive\", \u0026datadog.LogsArchiveArgs{\n\t\t\tName:  pulumi.String(\"my s3 archive\"),\n\t\t\tQuery: pulumi.String(\"service:myservice\"),\n\t\t\tS3: \u0026datadog.LogsArchiveS3Args{\n\t\t\t\tAccount_id: pulumi.String(\"001234567888\"),\n\t\t\t\tBucket:     pulumi.String(\"my-bucket\"),\n\t\t\t\tPath:       pulumi.String(\"/path/foo\"),\n\t\t\t\tRole_name:  pulumi.String(\"my-role-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "azure": {
                    "$ref": "#/types/datadog:/LogsArchiveAzure:LogsArchiveAzure"
                },
                "gcs": {
                    "$ref": "#/types/datadog:/LogsArchiveGcs:LogsArchiveGcs"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "s3": {
                    "$ref": "#/types/datadog:/LogsArchiveS3:LogsArchiveS3"
                }
            },
            "required": [
                "name",
                "query"
            ],
            "inputProperties": {
                "azure": {
                    "$ref": "#/types/datadog:/LogsArchiveAzure:LogsArchiveAzure"
                },
                "gcs": {
                    "$ref": "#/types/datadog:/LogsArchiveGcs:LogsArchiveGcs"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "s3": {
                    "$ref": "#/types/datadog:/LogsArchiveS3:LogsArchiveS3"
                }
            },
            "requiredInputs": [
                "name",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchive resources.\n",
                "properties": {
                    "azure": {
                        "$ref": "#/types/datadog:/LogsArchiveAzure:LogsArchiveAzure"
                    },
                    "gcs": {
                        "$ref": "#/types/datadog:/LogsArchiveGcs:LogsArchiveGcs"
                    },
                    "name": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    },
                    "s3": {
                        "$ref": "#/types/datadog:/LogsArchiveS3:LogsArchiveS3"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsCustomPipeline:LogsCustomPipeline": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource, which is used to create and manage Datadog logs custom pipelines.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreate a Datadog logs pipeline:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipeline = new datadog.LogsCustomPipeline(\"sample_pipeline\", {\n    filters: [{\n        query: \"source:foo\",\n    }],\n    isEnabled: true,\n    name: \"sample pipeline\",\n    processors: [\n        {\n            arithmeticProcessor: {\n                expression: \"(time1 - time2)*1000\",\n                isEnabled: true,\n                isReplaceMissing: true,\n                name: \"sample arithmetic processor\",\n                target: \"my_arithmetic\",\n            },\n        },\n        {\n            attributeRemapper: {\n                isEnabled: true,\n                name: \"sample attribute processor\",\n                overrideOnConflict: false,\n                preserveSource: true,\n                sourceType: \"tag\",\n                sources: [\"db.instance\"],\n                target: \"db\",\n                targetType: \"tag\",\n            },\n        },\n        {\n            categoryProcessor: {\n                categories: [\n                    {\n                        filter: {\n                            query: \"@severity: \\\".\\\"\",\n                        },\n                        name: \"debug\",\n                    },\n                    {\n                        filter: {\n                            query: \"@severity: \\\"-\\\"\",\n                        },\n                        name: \"verbose\",\n                    },\n                ],\n                isEnabled: true,\n                name: \"sample category processor\",\n                target: \"foo.severity\",\n            },\n        },\n        {\n            dateRemapper: {\n                isEnabled: true,\n                name: \"sample date remapper\",\n                sources: [\n                    \"_timestamp\",\n                    \"published_date\",\n                ],\n            },\n        },\n        {\n            geoIpParser: {\n                isEnabled: true,\n                name: \"sample geo ip parser\",\n                sources: [\"network.client.ip\"],\n                target: \"network.client.geoip\",\n            },\n        },\n        {\n            grokParser: {\n                grok: {\n                    matchRules: \"Rule %%{word:my_word2} %%{number:my_float2}\",\n                    supportRules: \"\",\n                },\n                isEnabled: true,\n                name: \"sample grok parser\",\n                samples: [\"sample log 1\"],\n                source: \"message\",\n            },\n        },\n        {\n            lookupProcessor: {\n                defaultLookup: \"unknown service\",\n                isEnabled: true,\n                lookupTables: [\"1,my service\"],\n                name: \"sample lookup processor\",\n                source: \"service_id\",\n                target: \"service_name\",\n            },\n        },\n        {\n            messageRemapper: {\n                isEnabled: true,\n                name: \"sample message remapper\",\n                sources: [\"msg\"],\n            },\n        },\n        {\n            pipeline: {\n                filters: [{\n                    query: \"source:foo\",\n                }],\n                isEnabled: true,\n                name: \"nested pipeline\",\n                processors: [{\n                    urlParser: {\n                        name: \"sample url parser\",\n                        normalizeEndingSlashes: true,\n                        sources: [\n                            \"url\",\n                            \"extra\",\n                        ],\n                        target: \"http_url\",\n                    },\n                }],\n            },\n        },\n        {\n            serviceRemapper: {\n                isEnabled: true,\n                name: \"sample service remapper\",\n                sources: [\"service\"],\n            },\n        },\n        {\n            statusRemapper: {\n                isEnabled: true,\n                name: \"sample status remapper\",\n                sources: [\n                    \"info\",\n                    \"trace\",\n                ],\n            },\n        },\n        {\n            stringBuilderProcessor: {\n                isEnabled: true,\n                isReplaceMissing: false,\n                name: \"sample string builder processor\",\n                target: \"user_activity\",\n                template: \"%%{user.name} logged in at %%{timestamp}\",\n            },\n        },\n        {\n            traceIdRemapper: {\n                isEnabled: true,\n                name: \"sample trace id remapper\",\n                sources: [\"dd.trace_id\"],\n            },\n        },\n        {\n            userAgentParser: {\n                isEnabled: true,\n                isEncoded: false,\n                name: \"sample user agent parser\",\n                sources: [\n                    \"user\",\n                    \"agent\",\n                ],\n                target: \"http_agent\",\n            },\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline = datadog.LogsCustomPipeline(\"samplePipeline\",\n    filters=[datadog.LogsCustomPipelineFilterArgs(\n        query=\"source:foo\",\n    )],\n    is_enabled=True,\n    name=\"sample pipeline\",\n    processors=[\n        datadog.LogsCustomPipelineProcessorArgs(\n            arithmetic_processor=datadog.LogsCustomPipelineProcessorArithmeticProcessorArgs(\n                expression=\"(time1 - time2)*1000\",\n                is_enabled=True,\n                is_replace_missing=True,\n                name=\"sample arithmetic processor\",\n                target=\"my_arithmetic\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            attribute_remapper=datadog.LogsCustomPipelineProcessorAttributeRemapperArgs(\n                is_enabled=True,\n                name=\"sample attribute processor\",\n                override_on_conflict=False,\n                preserve_source=True,\n                source_type=\"tag\",\n                sources=[\"db.instance\"],\n                target=\"db\",\n                target_type=\"tag\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            category_processor=datadog.LogsCustomPipelineProcessorCategoryProcessorArgs(\n                category=[\n                    {\n                        \"filter\": {\n                            \"query\": \"@severity: \\\".\\\"\",\n                        },\n                        \"name\": \"debug\",\n                    },\n                    {\n                        \"filter\": {\n                            \"query\": \"@severity: \\\"-\\\"\",\n                        },\n                        \"name\": \"verbose\",\n                    },\n                ],\n                is_enabled=True,\n                name=\"sample category processor\",\n                target=\"foo.severity\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            date_remapper=datadog.LogsCustomPipelineProcessorDateRemapperArgs(\n                is_enabled=True,\n                name=\"sample date remapper\",\n                sources=[\n                    \"_timestamp\",\n                    \"published_date\",\n                ],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            geo_ip_parser=datadog.LogsCustomPipelineProcessorGeoIpParserArgs(\n                is_enabled=True,\n                name=\"sample geo ip parser\",\n                sources=[\"network.client.ip\"],\n                target=\"network.client.geoip\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            grok_parser=datadog.LogsCustomPipelineProcessorGrokParserArgs(\n                grok=datadog.LogsCustomPipelineProcessorGrokParserGrokArgs(\n                    match_rules=\"Rule %{word:my_word2} %{number:my_float2}\",\n                    support_rules=\"\",\n                ),\n                is_enabled=True,\n                name=\"sample grok parser\",\n                samples=[\"sample log 1\"],\n                source=\"message\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            lookup_processor=datadog.LogsCustomPipelineProcessorLookupProcessorArgs(\n                default_lookup=\"unknown service\",\n                is_enabled=True,\n                lookup_table=[\"1,my service\"],\n                name=\"sample lookup processor\",\n                source=\"service_id\",\n                target=\"service_name\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            message_remapper=datadog.LogsCustomPipelineProcessorMessageRemapperArgs(\n                is_enabled=True,\n                name=\"sample message remapper\",\n                sources=[\"msg\"],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            pipeline=datadog.LogsCustomPipelineProcessorPipelineArgs(\n                filter=[{\n                    \"query\": \"source:foo\",\n                }],\n                is_enabled=True,\n                name=\"nested pipeline\",\n                processor=[{\n                    \"urlParser\": {\n                        \"name\": \"sample url parser\",\n                        \"normalizeEndingSlashes\": True,\n                        \"sources\": [\n                            \"url\",\n                            \"extra\",\n                        ],\n                        \"target\": \"http_url\",\n                    },\n                }],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            service_remapper=datadog.LogsCustomPipelineProcessorServiceRemapperArgs(\n                is_enabled=True,\n                name=\"sample service remapper\",\n                sources=[\"service\"],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            status_remapper=datadog.LogsCustomPipelineProcessorStatusRemapperArgs(\n                is_enabled=True,\n                name=\"sample status remapper\",\n                sources=[\n                    \"info\",\n                    \"trace\",\n                ],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            string_builder_processor=datadog.LogsCustomPipelineProcessorStringBuilderProcessorArgs(\n                is_enabled=True,\n                is_replace_missing=False,\n                name=\"sample string builder processor\",\n                target=\"user_activity\",\n                template=\"%{user.name} logged in at %{timestamp}\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            trace_id_remapper=datadog.LogsCustomPipelineProcessorTraceIdRemapperArgs(\n                is_enabled=True,\n                name=\"sample trace id remapper\",\n                sources=[\"dd.trace_id\"],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            user_agent_parser=datadog.LogsCustomPipelineProcessorUserAgentParserArgs(\n                is_enabled=True,\n                is_encoded=False,\n                name=\"sample user agent parser\",\n                sources=[\n                    \"user\",\n                    \"agent\",\n                ],\n                target=\"http_agent\",\n            ),\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var samplePipeline = new Datadog.LogsCustomPipeline(\"samplePipeline\", new Datadog.LogsCustomPipelineArgs\n        {\n            Filters = \n            {\n                new Datadog.Inputs.LogsCustomPipelineFilterArgs\n                {\n                    Query = \"source:foo\",\n                },\n            },\n            IsEnabled = true,\n            Name = \"sample pipeline\",\n            Processors = \n            {\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    ArithmeticProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorArithmeticProcessorArgs\n                    {\n                        Expression = \"(time1 - time2)*1000\",\n                        IsEnabled = true,\n                        IsReplaceMissing = true,\n                        Name = \"sample arithmetic processor\",\n                        Target = \"my_arithmetic\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    AttributeRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorAttributeRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample attribute processor\",\n                        OverrideOnConflict = false,\n                        PreserveSource = true,\n                        SourceType = \"tag\",\n                        Sources = \n                        {\n                            \"db.instance\",\n                        },\n                        Target = \"db\",\n                        TargetType = \"tag\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    CategoryProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorArgs\n                    {\n                        Category = \n                        {\n                            \n                            {\n                                { \"filter\", \n                                {\n                                    { \"query\", \"@severity: \\\".\\\"\" },\n                                } },\n                                { \"name\", \"debug\" },\n                            },\n                            \n                            {\n                                { \"filter\", \n                                {\n                                    { \"query\", \"@severity: \\\"-\\\"\" },\n                                } },\n                                { \"name\", \"verbose\" },\n                            },\n                        },\n                        IsEnabled = true,\n                        Name = \"sample category processor\",\n                        Target = \"foo.severity\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    DateRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorDateRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample date remapper\",\n                        Sources = \n                        {\n                            \"_timestamp\",\n                            \"published_date\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    GeoIpParser = new Datadog.Inputs.LogsCustomPipelineProcessorGeoIpParserArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample geo ip parser\",\n                        Sources = \n                        {\n                            \"network.client.ip\",\n                        },\n                        Target = \"network.client.geoip\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    GrokParser = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserArgs\n                    {\n                        Grok = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserGrokArgs\n                        {\n                            MatchRules = \"Rule %{word:my_word2} %{number:my_float2}\",\n                            SupportRules = \"\",\n                        },\n                        IsEnabled = true,\n                        Name = \"sample grok parser\",\n                        Samples = \n                        {\n                            \"sample log 1\",\n                        },\n                        Source = \"message\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    LookupProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorLookupProcessorArgs\n                    {\n                        DefaultLookup = \"unknown service\",\n                        IsEnabled = true,\n                        LookupTable = \n                        {\n                            \"1,my service\",\n                        },\n                        Name = \"sample lookup processor\",\n                        Source = \"service_id\",\n                        Target = \"service_name\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    MessageRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorMessageRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample message remapper\",\n                        Sources = \n                        {\n                            \"msg\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    Pipeline = new Datadog.Inputs.LogsCustomPipelineProcessorPipelineArgs\n                    {\n                        Filter = \n                        {\n                            \n                            {\n                                { \"query\", \"source:foo\" },\n                            },\n                        },\n                        IsEnabled = true,\n                        Name = \"nested pipeline\",\n                        Processor = \n                        {\n                            \n                            {\n                                { \"urlParser\", \n                                {\n                                    { \"name\", \"sample url parser\" },\n                                    { \"normalizeEndingSlashes\", true },\n                                    { \"sources\", \n                                    {\n                                        \"url\",\n                                        \"extra\",\n                                    } },\n                                    { \"target\", \"http_url\" },\n                                } },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    ServiceRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorServiceRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample service remapper\",\n                        Sources = \n                        {\n                            \"service\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    StatusRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorStatusRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample status remapper\",\n                        Sources = \n                        {\n                            \"info\",\n                            \"trace\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    StringBuilderProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorStringBuilderProcessorArgs\n                    {\n                        IsEnabled = true,\n                        IsReplaceMissing = false,\n                        Name = \"sample string builder processor\",\n                        Target = \"user_activity\",\n                        Template = \"%{user.name} logged in at %{timestamp}\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    TraceIdRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorTraceIdRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample trace id remapper\",\n                        Sources = \n                        {\n                            \"dd.trace_id\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    UserAgentParser = new Datadog.Inputs.LogsCustomPipelineProcessorUserAgentParserArgs\n                    {\n                        IsEnabled = true,\n                        IsEncoded = false,\n                        Name = \"sample user agent parser\",\n                        Sources = \n                        {\n                            \"user\",\n                            \"agent\",\n                        },\n                        Target = \"http_agent\",\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsCustomPipeline(ctx, \"samplePipeline\", \u0026datadog.LogsCustomPipelineArgs{\n\t\t\tFilters: datadog.LogsCustomPipelineFilterArray{\n\t\t\t\t\u0026datadog.LogsCustomPipelineFilterArgs{\n\t\t\t\t\tQuery: pulumi.String(\"source:foo\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tName:      pulumi.String(\"sample pipeline\"),\n\t\t\tProcessors: datadog.LogsCustomPipelineProcessorArray{\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tArithmeticProcessor: \u0026datadog.LogsCustomPipelineProcessorArithmeticProcessorArgs{\n\t\t\t\t\t\tExpression:       pulumi.String(\"(time1 - time2)*1000\"),\n\t\t\t\t\t\tIsEnabled:        pulumi.Bool(true),\n\t\t\t\t\t\tIsReplaceMissing: pulumi.Bool(true),\n\t\t\t\t\t\tName:             pulumi.String(\"sample arithmetic processor\"),\n\t\t\t\t\t\tTarget:           pulumi.String(\"my_arithmetic\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tAttributeRemapper: \u0026datadog.LogsCustomPipelineProcessorAttributeRemapperArgs{\n\t\t\t\t\t\tIsEnabled:          pulumi.Bool(true),\n\t\t\t\t\t\tName:               pulumi.String(\"sample attribute processor\"),\n\t\t\t\t\t\tOverrideOnConflict: pulumi.Bool(false),\n\t\t\t\t\t\tPreserveSource:     pulumi.Bool(true),\n\t\t\t\t\t\tSourceType:         pulumi.String(\"tag\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"db.instance\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget:     pulumi.String(\"db\"),\n\t\t\t\t\t\tTargetType: pulumi.String(\"tag\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tCategoryProcessor: \u0026datadog.LogsCustomPipelineProcessorCategoryProcessorArgs{\n\t\t\t\t\t\tCategory: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"filter\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"@severity: \\\".\\\"\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"name\": pulumi.String(\"debug\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"filter\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"@severity: \\\"-\\\"\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"name\": pulumi.String(\"verbose\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample category processor\"),\n\t\t\t\t\t\tTarget:    pulumi.String(\"foo.severity\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tDateRemapper: \u0026datadog.LogsCustomPipelineProcessorDateRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample date remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"_timestamp\"),\n\t\t\t\t\t\t\tpulumi.String(\"published_date\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tGeoIpParser: \u0026datadog.LogsCustomPipelineProcessorGeoIpParserArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample geo ip parser\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"network.client.ip\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget: pulumi.String(\"network.client.geoip\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tGrokParser: \u0026datadog.LogsCustomPipelineProcessorGrokParserArgs{\n\t\t\t\t\t\tGrok: \u0026datadog.LogsCustomPipelineProcessorGrokParserGrokArgs{\n\t\t\t\t\t\t\tMatchRules:   pulumi.String(fmt.Sprintf(\"%v%v%v%v%v\", \"Rule \", \"%{\", \"word:my_word2} \", \"%{\", \"number:my_float2}\")),\n\t\t\t\t\t\t\tSupportRules: pulumi.String(\"\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample grok parser\"),\n\t\t\t\t\t\tSamples: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"sample log 1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tSource: pulumi.String(\"message\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tLookupProcessor: \u0026datadog.LogsCustomPipelineProcessorLookupProcessorArgs{\n\t\t\t\t\t\tDefaultLookup: pulumi.String(\"unknown service\"),\n\t\t\t\t\t\tIsEnabled:     pulumi.Bool(true),\n\t\t\t\t\t\tLookupTable: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"1,my service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:   pulumi.String(\"sample lookup processor\"),\n\t\t\t\t\t\tSource: pulumi.String(\"service_id\"),\n\t\t\t\t\t\tTarget: pulumi.String(\"service_name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tMessageRemapper: \u0026datadog.LogsCustomPipelineProcessorMessageRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample message remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"msg\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tPipeline: \u0026datadog.LogsCustomPipelineProcessorPipelineArgs{\n\t\t\t\t\t\tFilter: pulumi.StringMapArray{\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"source:foo\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"nested pipeline\"),\n\t\t\t\t\t\tProcessor: pulumi.MapMapArray{\n\t\t\t\t\t\t\tpulumi.MapMap{\n\t\t\t\t\t\t\t\t\"urlParser\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"name\":                   pulumi.String(\"sample url parser\"),\n\t\t\t\t\t\t\t\t\t\"normalizeEndingSlashes\": pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\t\"sources\": pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"url\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"extra\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"target\": pulumi.String(\"http_url\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tServiceRemapper: \u0026datadog.LogsCustomPipelineProcessorServiceRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample service remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tStatusRemapper: \u0026datadog.LogsCustomPipelineProcessorStatusRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample status remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"info\"),\n\t\t\t\t\t\t\tpulumi.String(\"trace\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tStringBuilderProcessor: \u0026datadog.LogsCustomPipelineProcessorStringBuilderProcessorArgs{\n\t\t\t\t\t\tIsEnabled:        pulumi.Bool(true),\n\t\t\t\t\t\tIsReplaceMissing: pulumi.Bool(false),\n\t\t\t\t\t\tName:             pulumi.String(\"sample string builder processor\"),\n\t\t\t\t\t\tTarget:           pulumi.String(\"user_activity\"),\n\t\t\t\t\t\tTemplate:         pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"%{\", \"user.name} logged in at \", \"%{\", \"timestamp}\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tTraceIdRemapper: \u0026datadog.LogsCustomPipelineProcessorTraceIdRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample trace id remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"dd.trace_id\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tUserAgentParser: \u0026datadog.LogsCustomPipelineProcessorUserAgentParserArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tIsEncoded: pulumi.Bool(false),\n\t\t\t\t\t\tName:      pulumi.String(\"sample user agent parser\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"user\"),\n\t\t\t\t\t\t\tpulumi.String(\"agent\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget: pulumi.String(\"http_agent\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Important Notes\n\nEach `datadog.LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in a different resource datadog_logs_pipeline_order. When creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog.LogsPipelineOrder` resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the `datadog.LogsPipelineOrder` resource.\n",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCustomPipeline resources.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                        }
                    },
                    "isEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "processors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                        }
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndex:LogsIndex": {
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexFilter:LogsIndexFilter"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/LogsIndexFilter:LogsIndexFilter"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndex resources.\n",
                "properties": {
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/LogsIndexFilter:LogsIndexFilter"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndexOrder:LogsIndexOrder": {
            "description": "Provides a Datadog [Logs Index API](https://docs.datadoghq.com/api/v1/logs-indexes/) resource. This can be used to manage the order of Datadog logs indexes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleIndexOrder = new datadog.LogsIndexOrder(\"sampleIndexOrder\", {\n    name: \"sample_index_order\",\n    indexes: [datadog_logs_index.sample_index.id],\n}, {\n    dependsOn: [\"datadog_logs_index.sample_index\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_index_order = datadog.LogsIndexOrder(\"sampleIndexOrder\",\n    name=\"sample_index_order\",\n    indexes=[datadog_logs_index[\"sample_index\"][\"id\"]],\n    opts=ResourceOptions(depends_on=[\"datadog_logs_index.sample_index\"]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleIndexOrder = new Datadog.LogsIndexOrder(\"sampleIndexOrder\", new Datadog.LogsIndexOrderArgs\n        {\n            Name = \"sample_index_order\",\n            Indexes = \n            {\n                datadog_logs_index.Sample_index.Id,\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_logs_index.sample_index\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIndexOrder(ctx, \"sampleIndexOrder\", \u0026datadog.LogsIndexOrderArgs{\n\t\t\tName: pulumi.String(\"sample_index_order\"),\n\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\tpulumi.Any(datadog_logs_index.Sample_index.Id),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_logs_index.sample_index\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "indexes",
                "name"
            ],
            "inputProperties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "indexes",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndexOrder resources.\n",
                "properties": {
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource to manage the [integrations](https://docs.datadoghq.com/logs/log_collection/?tab=tcpussite).\n\nIntegration pipelines are the pipelines that are automatically installed for your organization when sending the logs with specific sources. You don't need to maintain or update these types of pipelines. Keeping them as resources, however, allows you to manage the order of your pipelines by referencing them in your datadog.LogsPipelineOrder resource. If you don't need the `pipeline_order` feature, this resource declaration can be omitted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst python = new datadog.LogsIntegrationPipeline(\"python\", {\n    isEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npython = datadog.LogsIntegrationPipeline(\"python\", is_enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var python = new Datadog.LogsIntegrationPipeline(\"python\", new Datadog.LogsIntegrationPipelineArgs\n        {\n            IsEnabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIntegrationPipeline(ctx, \"python\", \u0026datadog.LogsIntegrationPipelineArgs{\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "isEnabled": {
                    "type": "boolean"
                }
            },
            "inputProperties": {
                "isEnabled": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIntegrationPipeline resources.\n",
                "properties": {
                    "isEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsPipelineOrder:LogsPipelineOrder": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource, which is used to manage Datadog log pipelines order.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipelineOrder = new datadog.LogsPipelineOrder(\"samplePipelineOrder\", {\n    name: \"sample_pipeline_order\",\n    pipelines: [\n        datadog_logs_custom_pipeline.sample_pipeline.id,\n        datadog_logs_integration_pipeline.python.id,\n    ],\n}, {\n    dependsOn: [\n        \"datadog_logs_custom_pipeline.sample_pipeline\",\n        \"datadog_logs_integration_pipeline.python\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline_order = datadog.LogsPipelineOrder(\"samplePipelineOrder\",\n    name=\"sample_pipeline_order\",\n    pipelines=[\n        datadog_logs_custom_pipeline[\"sample_pipeline\"][\"id\"],\n        datadog_logs_integration_pipeline[\"python\"][\"id\"],\n    ],\n    opts=ResourceOptions(depends_on=[\n            \"datadog_logs_custom_pipeline.sample_pipeline\",\n            \"datadog_logs_integration_pipeline.python\",\n        ]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var samplePipelineOrder = new Datadog.LogsPipelineOrder(\"samplePipelineOrder\", new Datadog.LogsPipelineOrderArgs\n        {\n            Name = \"sample_pipeline_order\",\n            Pipelines = \n            {\n                datadog_logs_custom_pipeline.Sample_pipeline.Id,\n                datadog_logs_integration_pipeline.Python.Id,\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_logs_custom_pipeline.sample_pipeline\",\n                \"datadog_logs_integration_pipeline.python\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsPipelineOrder(ctx, \"samplePipelineOrder\", \u0026datadog.LogsPipelineOrderArgs{\n\t\t\tName: pulumi.String(\"sample_pipeline_order\"),\n\t\t\tPipelines: pulumi.StringArray{\n\t\t\t\tpulumi.Any(datadog_logs_custom_pipeline.Sample_pipeline.Id),\n\t\t\t\tpulumi.Any(datadog_logs_integration_pipeline.Python.Id),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_logs_custom_pipeline.sample_pipeline\",\n\t\t\t\"datadog_logs_integration_pipeline.python\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "pipelines"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "name",
                "pipelines"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsPipelineOrder resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "pipelines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricMetadata:MetricMetadata": {
            "description": "Provides a Datadog metric_metadata resource. This can be used to manage a metric's metadata.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage a Datadog metric's metadata\nconst requestTime = new datadog.MetricMetadata(\"request_time\", {\n    description: \"99th percentile request time in millseconds\",\n    metric: \"request.time\",\n    shortName: \"Request time\",\n    type: \"gauge\",\n    unit: \"millisecond\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage a Datadog metric's metadata\nrequest_time = datadog.MetricMetadata(\"requestTime\",\n    description=\"99th percentile request time in millseconds\",\n    metric=\"request.time\",\n    short_name=\"Request time\",\n    type=\"gauge\",\n    unit=\"millisecond\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Manage a Datadog metric's metadata\n        var requestTime = new Datadog.MetricMetadata(\"requestTime\", new Datadog.MetricMetadataArgs\n        {\n            Description = \"99th percentile request time in millseconds\",\n            Metric = \"request.time\",\n            ShortName = \"Request time\",\n            Type = \"gauge\",\n            Unit = \"millisecond\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMetricMetadata(ctx, \"requestTime\", \u0026datadog.MetricMetadataArgs{\n\t\t\tDescription: pulumi.String(\"99th percentile request time in millseconds\"),\n\t\t\tMetric:      pulumi.String(\"request.time\"),\n\t\t\tShortName:   pulumi.String(\"Request time\"),\n\t\t\tType:        pulumi.String(\"gauge\"),\n\t\t\tUnit:        pulumi.String(\"millisecond\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "perUnit": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "statsdInterval": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            },
            "required": [
                "metric"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "perUnit": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "statsdInterval": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricMetadata resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "metric": {
                        "type": "string"
                    },
                    "perUnit": {
                        "type": "string"
                    },
                    "shortName": {
                        "type": "string"
                    },
                    "statsdInterval": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitor:Monitor": {
            "description": "Provides a Datadog monitor resource. This can be used to create and manage Datadog monitors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog monitor\nconst foo = new datadog.Monitor(\"foo\", {\n    name: \"Name for monitor foo\",\n    type: \"metric alert\",\n    message: \"Monitor triggered. Notify: @hipchat-channel\",\n    escalationMessage: \"Escalation message @pagerduty\",\n    query: \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    thresholds: {\n        ok: 0,\n        warning: 2,\n        warning_recovery: 1,\n        critical: 4,\n        critical_recovery: 3,\n    },\n    notifyNoData: false,\n    renotifyInterval: 60,\n    notifyAudit: false,\n    timeoutH: 60,\n    includeTags: true,\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog monitor\nfoo = datadog.Monitor(\"foo\",\n    name=\"Name for monitor foo\",\n    type=\"metric alert\",\n    message=\"Monitor triggered. Notify: @hipchat-channel\",\n    escalation_message=\"Escalation message @pagerduty\",\n    query=\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    thresholds=datadog.MonitorThresholdsArgs(\n        ok=0,\n        warning=2,\n        warning_recovery=1,\n        critical=4,\n        critical_recovery=3,\n    ),\n    notify_no_data=False,\n    renotify_interval=60,\n    notify_audit=False,\n    timeout_h=60,\n    include_tags=True,\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog monitor\n        var foo = new Datadog.Monitor(\"foo\", new Datadog.MonitorArgs\n        {\n            Name = \"Name for monitor foo\",\n            Type = \"metric alert\",\n            Message = \"Monitor triggered. Notify: @hipchat-channel\",\n            EscalationMessage = \"Escalation message @pagerduty\",\n            Query = \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n            Thresholds = new Datadog.Inputs.MonitorThresholdsArgs\n            {\n                Ok = 0,\n                Warning = 2,\n                Warning_recovery = 1,\n                Critical = 4,\n                Critical_recovery = 3,\n            },\n            NotifyNoData = false,\n            RenotifyInterval = 60,\n            NotifyAudit = false,\n            TimeoutH = 60,\n            IncludeTags = true,\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitor(ctx, \"foo\", \u0026datadog.MonitorArgs{\n\t\t\tName:              pulumi.String(\"Name for monitor foo\"),\n\t\t\tType:              pulumi.String(\"metric alert\"),\n\t\t\tMessage:           pulumi.String(\"Monitor triggered. Notify: @hipchat-channel\"),\n\t\t\tEscalationMessage: pulumi.String(\"Escalation message @pagerduty\"),\n\t\t\tQuery:             pulumi.String(\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\"),\n\t\t\tThresholds: \u0026datadog.MonitorThresholdsArgs{\n\t\t\t\tOk:                pulumi.Float64(0),\n\t\t\t\tWarning:           pulumi.Float64(2),\n\t\t\t\tWarning_recovery:  pulumi.Float64(1),\n\t\t\t\tCritical:          pulumi.Float64(4),\n\t\t\t\tCritical_recovery: pulumi.Float64(3),\n\t\t\t},\n\t\t\tNotifyNoData:     pulumi.Bool(false),\n\t\t\tRenotifyInterval: pulumi.Int(60),\n\t\t\tNotifyAudit:      pulumi.Bool(false),\n\t\t\tTimeoutH:         pulumi.Int(60),\n\t\t\tIncludeTags:      pulumi.Bool(true),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"baz\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Silencing by Hand and by Downtimes\n\nThere are two ways how to silence a single monitor:\n\n- Mute it by hand\n- Create a Downtime\n\nBoth of these actions add a new value to the `silenced` map. This can be problematic if the `silenced` attribute doesn't contain them in your application, as they would be removed on next `pulumi up` invocation. In order to prevent that from happening, you can add following to your monitor:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\nThe above will make sure that any changes to the `silenced` attribute are ignored.\n\nThis issue doesn't apply to multi-monitor downtimes (those that don't contain `monitor_id` ), as these don't influence contents of the `silenced` attribute.\n\n## Composite Monitors\n\nYou can compose monitors of all types in order to define more specific alert conditions (see the [doc](https://docs.datadoghq.com/monitors/monitor_types/composite/)). You just need to reuse the ID of your `datadog.Monitor` resources. You can also compose any monitor with a `datadog.SyntheticsTest` by passing the computed `monitor_id` attribute in the query.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst bar = new datadog.Monitor(\"bar\", {\n    message: \"This is a message\",\n    name: \"Composite Monitor\",\n    query: pulumi.interpolate`${datadog_monitor_foo.id} || ${datadog_synthetics_test_foo.monitorId}`,\n    type: \"composite\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nbar = datadog.Monitor(\"bar\",\n    message=\"This is a message\",\n    name=\"Composite Monitor\",\n    query=f\"{datadog_monitor['foo']['id']} || {datadog_synthetics_test['foo']['monitor_id']}\",\n    type=\"composite\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = new Datadog.Monitor(\"bar\", new Datadog.MonitorArgs\n        {\n            Message = \"This is a message\",\n            Name = \"Composite Monitor\",\n            Query = $\"{datadog_monitor.Foo.Id} || {datadog_synthetics_test.Foo.Monitor_id}\",\n            Type = \"composite\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitor(ctx, \"bar\", \u0026datadog.MonitorArgs{\n\t\t\tMessage: pulumi.String(\"This is a message\"),\n\t\t\tName:    pulumi.String(\"Composite Monitor\"),\n\t\t\tQuery:   pulumi.String(fmt.Sprintf(\"%v%v%v\", datadog_monitor.Foo.Id, \" || \", datadog_synthetics_test.Foo.Monitor_id)),\n\t\t\tType:    pulumi.String(\"composite\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n",
            "properties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. Defaults to false. This is only used by log monitors.\n"
                },
                "escalationMessage": {
                    "type": "string"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to delay evaluation, as a non-negative integer.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO, composite monitor).\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title. Defaults to true.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.\n"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults\n"
                },
                "query": {
                    "type": "string"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated.\n"
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is 0. Use `-1` if you want to unmute the scope. **Deprecated** The `silenced` parameter is being deprecated in favor of the downtime resource.\n",
                    "deprecationMessage": "use Downtime Resource instead"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are required for, anomaly monitors.\n"
                },
                "thresholds": {
                    "$ref": "#/types/datadog:/MonitorThresholds:MonitorThresholds"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve\n"
                },
                "type": {
                    "type": "string"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to false, skip the validation call done during `plan` .\n"
                }
            },
            "required": [
                "evaluationDelay",
                "message",
                "name",
                "query",
                "type"
            ],
            "inputProperties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. Defaults to false. This is only used by log monitors.\n"
                },
                "escalationMessage": {
                    "type": "string"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to delay evaluation, as a non-negative integer.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO, composite monitor).\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title. Defaults to true.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.\n"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults\n"
                },
                "query": {
                    "type": "string"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated.\n"
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is 0. Use `-1` if you want to unmute the scope. **Deprecated** The `silenced` parameter is being deprecated in favor of the downtime resource.\n",
                    "deprecationMessage": "use Downtime Resource instead"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are required for, anomaly monitors.\n"
                },
                "thresholds": {
                    "$ref": "#/types/datadog:/MonitorThresholds:MonitorThresholds"
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve\n"
                },
                "type": {
                    "type": "string"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to false, skip the validation call done during `plan` .\n"
                }
            },
            "requiredInputs": [
                "message",
                "name",
                "query",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. Defaults to false. This is only used by log monitors.\n"
                    },
                    "escalationMessage": {
                        "type": "string"
                    },
                    "evaluationDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) to delay evaluation, as a non-negative integer.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO, composite monitor).\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title. Defaults to true.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to False.\n"
                    },
                    "message": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "newHostDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) to allow a host to boot and\n"
                    },
                    "noDataTimeframe": {
                        "type": "integer",
                        "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes.\n"
                    },
                    "notifyAudit": {
                        "type": "boolean",
                        "description": "A boolean indicating whether tagged users will be notified on changes to this monitor.\n"
                    },
                    "notifyNoData": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults\n"
                    },
                    "query": {
                        "type": "string"
                    },
                    "renotifyInterval": {
                        "type": "integer",
                        "description": "The number of minutes after the last notification before a monitor will re-notify\n"
                    },
                    "requireFullWindow": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated.\n"
                    },
                    "silenced": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is 0. Use `-1` if you want to unmute the scope. **Deprecated** The `silenced` parameter is being deprecated in favor of the downtime resource.\n",
                        "deprecationMessage": "use Downtime Resource instead"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "thresholdWindows": {
                        "$ref": "#/types/datadog:/MonitorThresholdWindows:MonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are required for, anomaly monitors.\n"
                    },
                    "thresholds": {
                        "$ref": "#/types/datadog:/MonitorThresholds:MonitorThresholds"
                    },
                    "timeoutH": {
                        "type": "integer",
                        "description": "The number of hours of the monitor not reporting data before it will automatically resolve\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "If set to false, skip the validation call done during `plan` .\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/screenBoard:ScreenBoard": {
            "description": "Provides a Datadog screenboard resource. This can be used to create and manage Datadog screenboards.\n\n\u003e **Note:** This resource is outdated. Use the new `datadog.Dashboard` resource instead.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog screenboard\nconst acceptanceTest = new datadog.ScreenBoard(\"acceptanceTest\", {\n    title: \"Test Screenboard\",\n    readOnly: true,\n    templateVariables: [\n        {\n            name: \"varname 1\",\n            prefix: \"pod_name\",\n            \"default\": \"*\",\n        },\n        {\n            name: \"varname 2\",\n            prefix: \"service_name\",\n            \"default\": \"autoscaling\",\n        },\n    ],\n    widgets: [\n        {\n            type: \"free_text\",\n            x: 5,\n            y: 5,\n            text: \"test text\",\n            textAlign: \"right\",\n            fontSize: \"36\",\n            color: \"#ffc0cb\",\n        },\n        {\n            type: \"timeseries\",\n            x: 25,\n            y: 5,\n            title: \"graph title terraform\",\n            titleSize: 16,\n            titleAlign: \"right\",\n            legend: true,\n            legendSize: 16,\n            time: {\n                live_span: \"1d\",\n            },\n            tileDeves: [{\n                viz: \"timeseries\",\n                requests: [\n                    {\n                        q: \"avg:system.cpu.user{*}\",\n                        type: \"line\",\n                        style: {\n                            palette: \"purple\",\n                            type: \"dashed\",\n                            width: \"thin\",\n                        },\n                        metadataJson: JSON.stringify({\n                            \"avg:system.cpu.user{*}\": {\n                                alias: \"CPU Usage\",\n                            },\n                        }),\n                    },\n                    {\n                        logQuery: {\n                            index: \"mcnulty\",\n                            compute: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            search: {\n                                query: \"status:info\",\n                            },\n                            groupBies: [{\n                                facet: \"host\",\n                                limit: 10,\n                                sort: {\n                                    aggregation: \"avg\",\n                                    order: \"desc\",\n                                    facet: \"@duration\",\n                                },\n                            }],\n                        },\n                        type: \"area\",\n                    },\n                    {\n                        apmQuery: {\n                            index: \"apm-search\",\n                            compute: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            search: {\n                                query: \"type:web\",\n                            },\n                            groupBies: [{\n                                facet: \"resource_name\",\n                                limit: 50,\n                                sort: {\n                                    aggregation: \"avg\",\n                                    order: \"desc\",\n                                    facet: \"@string_query.interval\",\n                                },\n                            }],\n                        },\n                        type: \"bars\",\n                    },\n                    {\n                        processQuery: {\n                            metric: \"process.stat.cpu.total_pct\",\n                            searchBy: \"error\",\n                            filterBies: [\"active\"],\n                            limit: 50,\n                        },\n                        type: \"area\",\n                    },\n                ],\n                markers: [{\n                    label: \"test marker\",\n                    type: \"error dashed\",\n                    value: \"y \u003c 6\",\n                }],\n                events: [{\n                    q: \"test event\",\n                }],\n            }],\n        },\n        {\n            type: \"query_value\",\n            x: 45,\n            y: 25,\n            title: \"query value title terraform\",\n            titleSize: 20,\n            titleAlign: \"center\",\n            legend: true,\n            legendSize: 16,\n            tileDeves: [{\n                viz: \"query_value\",\n                requests: [{\n                    q: \"avg:system.cpu.user{*}\",\n                    type: \"line\",\n                    style: {\n                        palette: \"purple\",\n                        type: \"dashed\",\n                        width: \"thin\",\n                    },\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003e\",\n                            value: \"1\",\n                            palette: \"white_on_red\",\n                        },\n                        {\n                            comparator: \"\u003e=\",\n                            value: \"2\",\n                            palette: \"white_on_yellow\",\n                        },\n                    ],\n                    aggregator: \"max\",\n                }],\n                customUnit: \"%\",\n                autoscale: false,\n                precision: \"6\",\n                textAlign: \"right\",\n            }],\n        },\n        {\n            type: \"toplist\",\n            x: 65,\n            y: 5,\n            title: \"toplist title terraform\",\n            legend: true,\n            legendSize: \"auto\",\n            time: {\n                live_span: \"1d\",\n            },\n            tileDeves: [{\n                viz: \"toplist\",\n                requests: [{\n                    q: \"top(avg:system.load.1{*} by {host}, 10, 'mean', 'desc')\",\n                    style: {\n                        palette: \"purple\",\n                        type: \"dashed\",\n                        width: \"thin\",\n                    },\n                    conditionalFormats: [{\n                        comparator: \"\u003e\",\n                        value: \"4\",\n                        palette: \"white_on_green\",\n                    }],\n                }],\n            }],\n        },\n        {\n            type: \"change\",\n            x: 85,\n            y: 5,\n            title: \"change title terraform\",\n            tileDeves: [{\n                viz: \"change\",\n                requests: [{\n                    q: \"min:system.load.1{*} by {host}\",\n                    compareTo: \"week_before\",\n                    changeType: \"relative\",\n                    orderBy: \"present\",\n                    orderDir: \"asc\",\n                    extraCol: \"\",\n                    increaseGood: false,\n                }],\n            }],\n        },\n        {\n            type: \"event_timeline\",\n            x: 105,\n            y: 5,\n            title: \"event_timeline title terraform\",\n            query: \"status:error\",\n            time: {\n                live_span: \"1d\",\n            },\n        },\n        {\n            type: \"event_stream\",\n            x: 115,\n            y: 5,\n            title: \"event_stream title terraform\",\n            query: \"*\",\n            eventSize: \"l\",\n            time: {\n                live_span: \"4h\",\n            },\n        },\n        {\n            type: \"image\",\n            x: 145,\n            y: 5,\n            title: \"image title terraform\",\n            sizing: \"fit\",\n            margin: \"large\",\n            url: \"https://datadog-prod.imgix.net/img/dd_logo_70x75.png\",\n        },\n        {\n            type: \"note\",\n            x: 165,\n            y: 5,\n            bgcolor: \"pink\",\n            textAlign: \"right\",\n            fontSize: \"36\",\n            tick: true,\n            tickEdge: \"bottom\",\n            tickPos: `50%`,\n            html: \"\u003cb\u003etest note\u003c/b\u003e\",\n        },\n        {\n            type: \"alert_graph\",\n            x: 185,\n            y: 5,\n            title: \"alert graph title terraform\",\n            alertId: \"123456\",\n            vizType: \"toplist\",\n            time: {\n                live_span: \"15m\",\n            },\n        },\n        {\n            type: \"alert_value\",\n            x: 205,\n            y: 5,\n            title: \"alert value title terraform\",\n            alertId: \"123456\",\n            textSize: \"fill_height\",\n            textAlign: \"right\",\n            precision: \"*\",\n            unit: \"b\",\n        },\n        {\n            type: \"iframe\",\n            x: 225,\n            y: 5,\n            url: \"https://www.datadoghq.org\",\n        },\n        {\n            type: \"check_status\",\n            x: 245,\n            y: 5,\n            title: \"test title\",\n            titleAlign: \"left\",\n            grouping: \"check\",\n            check: \"aws.ecs.agent_connected\",\n            tags: [\"*\"],\n            group: \"cluster:test\",\n            time: {\n                live_span: \"30m\",\n            },\n        },\n        {\n            type: \"trace_service\",\n            x: 265,\n            y: 5,\n            env: \"testEnv\",\n            serviceService: \"\",\n            serviceName: \"\",\n            sizeVersion: \"large\",\n            layoutVersion: \"three_column\",\n            mustShowHits: true,\n            mustShowErrors: true,\n            mustShowLatency: true,\n            mustShowBreakdown: true,\n            mustShowDistribution: true,\n            mustShowResourceList: true,\n            time: {\n                live_span: \"30m\",\n            },\n        },\n        {\n            type: \"hostmap\",\n            x: 285,\n            y: 5,\n            query: \"avg:system.load.1{*} by {host}\",\n            tileDeves: [{\n                viz: \"hostmap\",\n                nodeType: \"container\",\n                scopes: [\"datacenter:test\"],\n                groups: [\"pod_name\"],\n                noGroupHosts: false,\n                noMetricHosts: false,\n                requests: [{\n                    q: \"max:process.stat.container.io.wbps{datacenter:test} by {host}\",\n                    type: \"fill\",\n                }],\n                style: {\n                    palette: \"hostmap_blues\",\n                    palette_flip: true,\n                    fill_min: 20,\n                    fill_max: 300,\n                },\n            }],\n        },\n        {\n            type: \"manage_status\",\n            x: 305,\n            y: 5,\n            summaryType: \"monitors\",\n            displayFormat: \"countsAndList\",\n            colorPreference: \"background\",\n            hideZeroCounts: true,\n            showLastTriggered: false,\n            manageStatusShowTitle: false,\n            manageStatusTitleText: \"test title\",\n            manageStatusTitleSize: \"20\",\n            manageStatusTitleAlign: \"right\",\n            params: {\n                sort: \"status,asc\",\n                text: \"status:alert\",\n            },\n        },\n        {\n            type: \"log_stream\",\n            x: 325,\n            y: 5,\n            query: \"source:kubernetes\",\n            columns: \"[\\\"column1\\\",\\\"column2\\\",\\\"column3\\\"]\",\n            logset: \"1234\",\n            time: {\n                live_span: \"1h\",\n            },\n        },\n        {\n            type: \"process\",\n            x: 365,\n            y: 5,\n            tileDeves: [{\n                viz: \"process\",\n                requests: [{\n                    queryType: \"process\",\n                    metric: \"process.stat.cpu.total_pct\",\n                    textFilter: \"\",\n                    tagFilters: [],\n                    limit: 200,\n                    style: {\n                        palette: \"dog_classic_area\",\n                    },\n                }],\n            }],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_datadog as datadog\n\n# Create a new Datadog screenboard\nacceptance_test = datadog.ScreenBoard(\"acceptanceTest\",\n    title=\"Test Screenboard\",\n    read_only=True,\n    template_variables=[\n        datadog.ScreenBoardTemplateVariableArgs(\n            name=\"varname 1\",\n            prefix=\"pod_name\",\n            default=\"*\",\n        ),\n        datadog.ScreenBoardTemplateVariableArgs(\n            name=\"varname 2\",\n            prefix=\"service_name\",\n            default=\"autoscaling\",\n        ),\n    ],\n    widgets=[\n        datadog.ScreenBoardWidgetArgs(\n            type=\"free_text\",\n            x=5,\n            y=5,\n            text=\"test text\",\n            text_align=\"right\",\n            font_size=\"36\",\n            color=\"#ffc0cb\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"timeseries\",\n            x=25,\n            y=5,\n            title=\"graph title terraform\",\n            title_size=16,\n            title_align=\"right\",\n            legend=True,\n            legend_size=\"16\",\n            time={\n                \"live_span\": \"1d\",\n            },\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"timeseries\",\n                requests=[\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        q=\"avg:system.cpu.user{*}\",\n                        type=\"line\",\n                        style={\n                            \"palette\": \"purple\",\n                            \"type\": \"dashed\",\n                            \"width\": \"thin\",\n                        },\n                        metadata_json=json.dumps({\n                            \"avg:system.cpu.user{*}\": {\n                                \"alias\": \"CPU Usage\",\n                            },\n                        }),\n                    ),\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        log_query=datadog.ScreenBoardWidgetTileDefRequestLogQueryArgs(\n                            index=\"mcnulty\",\n                            compute=datadog.ScreenBoardWidgetTileDefRequestLogQueryComputeArgs(\n                                aggregation=\"avg\",\n                                facet=\"@duration\",\n                                interval=\"5000\",\n                            ),\n                            search=datadog.ScreenBoardWidgetTileDefRequestLogQuerySearchArgs(\n                                query=\"status:info\",\n                            ),\n                            group_bies=[datadog.ScreenBoardWidgetTileDefRequestLogQueryGroupByArgs(\n                                facet=\"host\",\n                                limit=10,\n                                sort=datadog.ScreenBoardWidgetTileDefRequestLogQueryGroupBySortArgs(\n                                    aggregation=\"avg\",\n                                    order=\"desc\",\n                                    facet=\"@duration\",\n                                ),\n                            )],\n                        ),\n                        type=\"area\",\n                    ),\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        apm_query=datadog.ScreenBoardWidgetTileDefRequestApmQueryArgs(\n                            index=\"apm-search\",\n                            compute=datadog.ScreenBoardWidgetTileDefRequestApmQueryComputeArgs(\n                                aggregation=\"avg\",\n                                facet=\"@duration\",\n                                interval=\"5000\",\n                            ),\n                            search=datadog.ScreenBoardWidgetTileDefRequestApmQuerySearchArgs(\n                                query=\"type:web\",\n                            ),\n                            group_bies=[datadog.ScreenBoardWidgetTileDefRequestApmQueryGroupByArgs(\n                                facet=\"resource_name\",\n                                limit=50,\n                                sort=datadog.ScreenBoardWidgetTileDefRequestApmQueryGroupBySortArgs(\n                                    aggregation=\"avg\",\n                                    order=\"desc\",\n                                    facet=\"@string_query.interval\",\n                                ),\n                            )],\n                        ),\n                        type=\"bars\",\n                    ),\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        process_query=datadog.ScreenBoardWidgetTileDefRequestProcessQueryArgs(\n                            metric=\"process.stat.cpu.total_pct\",\n                            search_by=\"error\",\n                            filter_bies=[\"active\"],\n                            limit=50,\n                        ),\n                        type=\"area\",\n                    ),\n                ],\n                markers=[datadog.ScreenBoardWidgetTileDefMarkerArgs(\n                    label=\"test marker\",\n                    type=\"error dashed\",\n                    value=\"y \u003c 6\",\n                )],\n                events=[datadog.ScreenBoardWidgetTileDefEventArgs(\n                    q=\"test event\",\n                )],\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"query_value\",\n            x=45,\n            y=25,\n            title=\"query value title terraform\",\n            title_size=20,\n            title_align=\"center\",\n            legend=True,\n            legend_size=\"16\",\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"query_value\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"avg:system.cpu.user{*}\",\n                    type=\"line\",\n                    style={\n                        \"palette\": \"purple\",\n                        \"type\": \"dashed\",\n                        \"width\": \"thin\",\n                    },\n                    conditional_formats=[\n                        datadog.ScreenBoardWidgetTileDefRequestConditionalFormatArgs(\n                            comparator=\"\u003e\",\n                            value=\"1\",\n                            palette=\"white_on_red\",\n                        ),\n                        datadog.ScreenBoardWidgetTileDefRequestConditionalFormatArgs(\n                            comparator=\"\u003e=\",\n                            value=\"2\",\n                            palette=\"white_on_yellow\",\n                        ),\n                    ],\n                    aggregator=\"max\",\n                )],\n                custom_unit=\"%\",\n                autoscale=False,\n                precision=\"6\",\n                text_align=\"right\",\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"toplist\",\n            x=65,\n            y=5,\n            title=\"toplist title terraform\",\n            legend=True,\n            legend_size=\"auto\",\n            time={\n                \"live_span\": \"1d\",\n            },\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"toplist\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"top(avg:system.load.1{*} by {host}, 10, 'mean', 'desc')\",\n                    style={\n                        \"palette\": \"purple\",\n                        \"type\": \"dashed\",\n                        \"width\": \"thin\",\n                    },\n                    conditional_formats=[datadog.ScreenBoardWidgetTileDefRequestConditionalFormatArgs(\n                        comparator=\"\u003e\",\n                        value=\"4\",\n                        palette=\"white_on_green\",\n                    )],\n                )],\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"change\",\n            x=85,\n            y=5,\n            title=\"change title terraform\",\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"change\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"min:system.load.1{*} by {host}\",\n                    compare_to=\"week_before\",\n                    change_type=\"relative\",\n                    order_by=\"present\",\n                    order_dir=\"asc\",\n                    extra_col=\"\",\n                    increase_good=False,\n                )],\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"event_timeline\",\n            x=105,\n            y=5,\n            title=\"event_timeline title terraform\",\n            query=\"status:error\",\n            time={\n                \"live_span\": \"1d\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"event_stream\",\n            x=115,\n            y=5,\n            title=\"event_stream title terraform\",\n            query=\"*\",\n            event_size=\"l\",\n            time={\n                \"live_span\": \"4h\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"image\",\n            x=145,\n            y=5,\n            title=\"image title terraform\",\n            sizing=\"fit\",\n            margin=\"large\",\n            url=\"https://datadog-prod.imgix.net/img/dd_logo_70x75.png\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"note\",\n            x=165,\n            y=5,\n            bgcolor=\"pink\",\n            text_align=\"right\",\n            font_size=\"36\",\n            tick=True,\n            tick_edge=\"bottom\",\n            tick_pos=\"50%\",\n            html=\"\u003cb\u003etest note\u003c/b\u003e\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"alert_graph\",\n            x=185,\n            y=5,\n            title=\"alert graph title terraform\",\n            alert_id=123456,\n            viz_type=\"toplist\",\n            time={\n                \"live_span\": \"15m\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"alert_value\",\n            x=205,\n            y=5,\n            title=\"alert value title terraform\",\n            alert_id=123456,\n            text_size=\"fill_height\",\n            text_align=\"right\",\n            precision=\"*\",\n            unit=\"b\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"iframe\",\n            x=225,\n            y=5,\n            url=\"https://www.datadoghq.org\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"check_status\",\n            x=245,\n            y=5,\n            title=\"test title\",\n            title_align=\"left\",\n            grouping=\"check\",\n            check=\"aws.ecs.agent_connected\",\n            tags=[\"*\"],\n            group=\"cluster:test\",\n            time={\n                \"live_span\": \"30m\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"trace_service\",\n            x=265,\n            y=5,\n            env=\"testEnv\",\n            service_service=\"\",\n            service_name=\"\",\n            size_version=\"large\",\n            layout_version=\"three_column\",\n            must_show_hits=True,\n            must_show_errors=True,\n            must_show_latency=True,\n            must_show_breakdown=True,\n            must_show_distribution=True,\n            must_show_resource_list=True,\n            time={\n                \"live_span\": \"30m\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"hostmap\",\n            x=285,\n            y=5,\n            query=\"avg:system.load.1{*} by {host}\",\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"hostmap\",\n                node_type=\"container\",\n                scopes=[\"datacenter:test\"],\n                groups=[\"pod_name\"],\n                no_group_hosts=False,\n                no_metric_hosts=False,\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"max:process.stat.container.io.wbps{datacenter:test} by {host}\",\n                    type=\"fill\",\n                )],\n                style={\n                    \"palette\": \"hostmap_blues\",\n                    \"palette_flip\": True,\n                    \"fill_min\": 20,\n                    \"fill_max\": 300,\n                },\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"manage_status\",\n            x=305,\n            y=5,\n            summary_type=\"monitors\",\n            display_format=\"countsAndList\",\n            color_preference=\"background\",\n            hide_zero_counts=True,\n            show_last_triggered=False,\n            manage_status_show_title=False,\n            manage_status_title_text=\"test title\",\n            manage_status_title_size=\"20\",\n            manage_status_title_align=\"right\",\n            params={\n                \"sort\": \"status,asc\",\n                \"text\": \"status:alert\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"log_stream\",\n            x=325,\n            y=5,\n            query=\"source:kubernetes\",\n            columns=\"[\\\"column1\\\",\\\"column2\\\",\\\"column3\\\"]\",\n            logset=\"1234\",\n            time={\n                \"live_span\": \"1h\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"process\",\n            x=365,\n            y=5,\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"process\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    query_type=\"process\",\n                    metric=\"process.stat.cpu.total_pct\",\n                    text_filter=\"\",\n                    tag_filters=[],\n                    limit=200,\n                    style={\n                        \"palette\": \"dog_classic_area\",\n                    },\n                )],\n            )],\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Text.Json;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog screenboard\n        var acceptanceTest = new Datadog.ScreenBoard(\"acceptanceTest\", new Datadog.ScreenBoardArgs\n        {\n            Title = \"Test Screenboard\",\n            ReadOnly = true,\n            TemplateVariables = \n            {\n                new Datadog.Inputs.ScreenBoardTemplateVariableArgs\n                {\n                    Name = \"varname 1\",\n                    Prefix = \"pod_name\",\n                    Default = \"*\",\n                },\n                new Datadog.Inputs.ScreenBoardTemplateVariableArgs\n                {\n                    Name = \"varname 2\",\n                    Prefix = \"service_name\",\n                    Default = \"autoscaling\",\n                },\n            },\n            Widgets = \n            {\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"free_text\",\n                    X = 5,\n                    Y = 5,\n                    Text = \"test text\",\n                    TextAlign = \"right\",\n                    FontSize = \"36\",\n                    Color = \"#ffc0cb\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"timeseries\",\n                    X = 25,\n                    Y = 5,\n                    Title = \"graph title terraform\",\n                    TitleSize = 16,\n                    TitleAlign = \"right\",\n                    Legend = true,\n                    LegendSize = \"16\",\n                    Time = \n                    {\n                        { \"live_span\", \"1d\" },\n                    },\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"timeseries\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"avg:system.cpu.user{*}\",\n                                    Type = \"line\",\n                                    Style = \n                                    {\n                                        { \"palette\", \"purple\" },\n                                        { \"type\", \"dashed\" },\n                                        { \"width\", \"thin\" },\n                                    },\n                                    MetadataJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                                    {\n                                        { \"avg:system.cpu.user{*}\", new Dictionary\u003cstring, object?\u003e\n                                        {\n                                            { \"alias\", \"CPU Usage\" },\n                                        } },\n                                    }),\n                                },\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    LogQuery = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryArgs\n                                    {\n                                        Index = \"mcnulty\",\n                                        Compute = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryComputeArgs\n                                        {\n                                            Aggregation = \"avg\",\n                                            Facet = \"@duration\",\n                                            Interval = \"5000\",\n                                        },\n                                        Search = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQuerySearchArgs\n                                        {\n                                            Query = \"status:info\",\n                                        },\n                                        GroupBies = \n                                        {\n                                            new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryGroupByArgs\n                                            {\n                                                Facet = \"host\",\n                                                Limit = 10,\n                                                Sort = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryGroupBySortArgs\n                                                {\n                                                    Aggregation = \"avg\",\n                                                    Order = \"desc\",\n                                                    Facet = \"@duration\",\n                                                },\n                                            },\n                                        },\n                                    },\n                                    Type = \"area\",\n                                },\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    ApmQuery = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryArgs\n                                    {\n                                        Index = \"apm-search\",\n                                        Compute = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryComputeArgs\n                                        {\n                                            Aggregation = \"avg\",\n                                            Facet = \"@duration\",\n                                            Interval = \"5000\",\n                                        },\n                                        Search = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQuerySearchArgs\n                                        {\n                                            Query = \"type:web\",\n                                        },\n                                        GroupBies = \n                                        {\n                                            new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryGroupByArgs\n                                            {\n                                                Facet = \"resource_name\",\n                                                Limit = 50,\n                                                Sort = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryGroupBySortArgs\n                                                {\n                                                    Aggregation = \"avg\",\n                                                    Order = \"desc\",\n                                                    Facet = \"@string_query.interval\",\n                                                },\n                                            },\n                                        },\n                                    },\n                                    Type = \"bars\",\n                                },\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    ProcessQuery = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestProcessQueryArgs\n                                    {\n                                        Metric = \"process.stat.cpu.total_pct\",\n                                        SearchBy = \"error\",\n                                        FilterBies = \n                                        {\n                                            \"active\",\n                                        },\n                                        Limit = 50,\n                                    },\n                                    Type = \"area\",\n                                },\n                            },\n                            Markers = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefMarkerArgs\n                                {\n                                    Label = \"test marker\",\n                                    Type = \"error dashed\",\n                                    Value = \"y \u003c 6\",\n                                },\n                            },\n                            Events = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefEventArgs\n                                {\n                                    Q = \"test event\",\n                                },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"query_value\",\n                    X = 45,\n                    Y = 25,\n                    Title = \"query value title terraform\",\n                    TitleSize = 20,\n                    TitleAlign = \"center\",\n                    Legend = true,\n                    LegendSize = \"16\",\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"query_value\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"avg:system.cpu.user{*}\",\n                                    Type = \"line\",\n                                    Style = \n                                    {\n                                        { \"palette\", \"purple\" },\n                                        { \"type\", \"dashed\" },\n                                        { \"width\", \"thin\" },\n                                    },\n                                    ConditionalFormats = \n                                    {\n                                        new Datadog.Inputs.ScreenBoardWidgetTileDefRequestConditionalFormatArgs\n                                        {\n                                            Comparator = \"\u003e\",\n                                            Value = \"1\",\n                                            Palette = \"white_on_red\",\n                                        },\n                                        new Datadog.Inputs.ScreenBoardWidgetTileDefRequestConditionalFormatArgs\n                                        {\n                                            Comparator = \"\u003e=\",\n                                            Value = \"2\",\n                                            Palette = \"white_on_yellow\",\n                                        },\n                                    },\n                                    Aggregator = \"max\",\n                                },\n                            },\n                            CustomUnit = \"%\",\n                            Autoscale = false,\n                            Precision = \"6\",\n                            TextAlign = \"right\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"toplist\",\n                    X = 65,\n                    Y = 5,\n                    Title = \"toplist title terraform\",\n                    Legend = true,\n                    LegendSize = \"auto\",\n                    Time = \n                    {\n                        { \"live_span\", \"1d\" },\n                    },\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"toplist\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"top(avg:system.load.1{*} by {host}, 10, 'mean', 'desc')\",\n                                    Style = \n                                    {\n                                        { \"palette\", \"purple\" },\n                                        { \"type\", \"dashed\" },\n                                        { \"width\", \"thin\" },\n                                    },\n                                    ConditionalFormats = \n                                    {\n                                        new Datadog.Inputs.ScreenBoardWidgetTileDefRequestConditionalFormatArgs\n                                        {\n                                            Comparator = \"\u003e\",\n                                            Value = \"4\",\n                                            Palette = \"white_on_green\",\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"change\",\n                    X = 85,\n                    Y = 5,\n                    Title = \"change title terraform\",\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"change\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"min:system.load.1{*} by {host}\",\n                                    CompareTo = \"week_before\",\n                                    ChangeType = \"relative\",\n                                    OrderBy = \"present\",\n                                    OrderDir = \"asc\",\n                                    ExtraCol = \"\",\n                                    IncreaseGood = false,\n                                },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"event_timeline\",\n                    X = 105,\n                    Y = 5,\n                    Title = \"event_timeline title terraform\",\n                    Query = \"status:error\",\n                    Time = \n                    {\n                        { \"live_span\", \"1d\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"event_stream\",\n                    X = 115,\n                    Y = 5,\n                    Title = \"event_stream title terraform\",\n                    Query = \"*\",\n                    EventSize = \"l\",\n                    Time = \n                    {\n                        { \"live_span\", \"4h\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"image\",\n                    X = 145,\n                    Y = 5,\n                    Title = \"image title terraform\",\n                    Sizing = \"fit\",\n                    Margin = \"large\",\n                    Url = \"https://datadog-prod.imgix.net/img/dd_logo_70x75.png\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"note\",\n                    X = 165,\n                    Y = 5,\n                    Bgcolor = \"pink\",\n                    TextAlign = \"right\",\n                    FontSize = \"36\",\n                    Tick = true,\n                    TickEdge = \"bottom\",\n                    TickPos = \"50%\",\n                    Html = \"\u003cb\u003etest note\u003c/b\u003e\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"alert_graph\",\n                    X = 185,\n                    Y = 5,\n                    Title = \"alert graph title terraform\",\n                    AlertId = 123456,\n                    VizType = \"toplist\",\n                    Time = \n                    {\n                        { \"live_span\", \"15m\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"alert_value\",\n                    X = 205,\n                    Y = 5,\n                    Title = \"alert value title terraform\",\n                    AlertId = 123456,\n                    TextSize = \"fill_height\",\n                    TextAlign = \"right\",\n                    Precision = \"*\",\n                    Unit = \"b\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"iframe\",\n                    X = 225,\n                    Y = 5,\n                    Url = \"https://www.datadoghq.org\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"check_status\",\n                    X = 245,\n                    Y = 5,\n                    Title = \"test title\",\n                    TitleAlign = \"left\",\n                    Grouping = \"check\",\n                    Check = \"aws.ecs.agent_connected\",\n                    Tags = \n                    {\n                        \"*\",\n                    },\n                    Group = \"cluster:test\",\n                    Time = \n                    {\n                        { \"live_span\", \"30m\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"trace_service\",\n                    X = 265,\n                    Y = 5,\n                    Env = \"testEnv\",\n                    ServiceService = \"\",\n                    ServiceName = \"\",\n                    SizeVersion = \"large\",\n                    LayoutVersion = \"three_column\",\n                    MustShowHits = true,\n                    MustShowErrors = true,\n                    MustShowLatency = true,\n                    MustShowBreakdown = true,\n                    MustShowDistribution = true,\n                    MustShowResourceList = true,\n                    Time = \n                    {\n                        { \"live_span\", \"30m\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"hostmap\",\n                    X = 285,\n                    Y = 5,\n                    Query = \"avg:system.load.1{*} by {host}\",\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"hostmap\",\n                            NodeType = \"container\",\n                            Scopes = \n                            {\n                                \"datacenter:test\",\n                            },\n                            Groups = \n                            {\n                                \"pod_name\",\n                            },\n                            NoGroupHosts = false,\n                            NoMetricHosts = false,\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"max:process.stat.container.io.wbps{datacenter:test} by {host}\",\n                                    Type = \"fill\",\n                                },\n                            },\n                            Style = \n                            {\n                                { \"palette\", \"hostmap_blues\" },\n                                { \"palette_flip\", true },\n                                { \"fill_min\", 20 },\n                                { \"fill_max\", 300 },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"manage_status\",\n                    X = 305,\n                    Y = 5,\n                    SummaryType = \"monitors\",\n                    DisplayFormat = \"countsAndList\",\n                    ColorPreference = \"background\",\n                    HideZeroCounts = true,\n                    ShowLastTriggered = false,\n                    ManageStatusShowTitle = false,\n                    ManageStatusTitleText = \"test title\",\n                    ManageStatusTitleSize = \"20\",\n                    ManageStatusTitleAlign = \"right\",\n                    Params = \n                    {\n                        { \"sort\", \"status,asc\" },\n                        { \"text\", \"status:alert\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"log_stream\",\n                    X = 325,\n                    Y = 5,\n                    Query = \"source:kubernetes\",\n                    Columns = \"[\\\"column1\\\",\\\"column2\\\",\\\"column3\\\"]\",\n                    Logset = \"1234\",\n                    Time = \n                    {\n                        { \"live_span\", \"1h\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"process\",\n                    X = 365,\n                    Y = 5,\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"process\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    QueryType = \"process\",\n                                    Metric = \"process.stat.cpu.total_pct\",\n                                    TextFilter = \"\",\n                                    TagFilters = {},\n                                    Limit = 200,\n                                    Style = \n                                    {\n                                        { \"palette\", \"dog_classic_area\" },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "required": [
                "title",
                "widgets"
            ],
            "inputProperties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "requiredInputs": [
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScreenBoard resources.\n",
                "properties": {
                    "height": {
                        "type": "string",
                        "description": "Height of the screenboard\n"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "shared": {
                        "type": "boolean",
                        "description": "Whether the screenboard is shared or not\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Name of the screenboard\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/ScreenBoardWidget:ScreenBoardWidget"
                        },
                        "description": "A list of widget definitions.\n"
                    },
                    "width": {
                        "type": "string",
                        "description": "Width of the screenboard\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceLevelObjective:ServiceLevelObjective": {
            "description": "Provides a Datadog service level objective resource. This can be used to create and manage Datadog service level objectives.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Metric-Based SLO\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog service level objective\nconst foo = new datadog.ServiceLevelObjective(\"foo\", {\n    description: \"My custom metric SLO\",\n    name: \"Example Metric SLO\",\n    query: {\n        denominator: \"sum:my.custom.count.metric{*}.as_count()\",\n        numerator: \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    },\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds: [\n        {\n            target: 99.9,\n            targetDisplay: \"99.900\",\n            timeframe: \"7d\",\n            warning: 99.99,\n            warningDisplay: \"99.990\",\n        },\n        {\n            target: 99.9,\n            targetDisplay: \"99.900\",\n            timeframe: \"30d\",\n            warning: 99.99,\n            warningDisplay: \"99.990\",\n        },\n    ],\n    type: \"metric\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog service level objective\nfoo = datadog.ServiceLevelObjective(\"foo\",\n    description=\"My custom metric SLO\",\n    name=\"Example Metric SLO\",\n    query=datadog.ServiceLevelObjectiveQueryArgs(\n        denominator=\"sum:my.custom.count.metric{*}.as_count()\",\n        numerator=\"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    ),\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds=[\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            target_display=\"99.900\",\n            timeframe=\"7d\",\n            warning=99.99,\n            warning_display=\"99.990\",\n        ),\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            target_display=\"99.900\",\n            timeframe=\"30d\",\n            warning=99.99,\n            warning_display=\"99.990\",\n        ),\n    ],\n    type=\"metric\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog service level objective\n        var foo = new Datadog.ServiceLevelObjective(\"foo\", new Datadog.ServiceLevelObjectiveArgs\n        {\n            Description = \"My custom metric SLO\",\n            Name = \"Example Metric SLO\",\n            Query = new Datadog.Inputs.ServiceLevelObjectiveQueryArgs\n            {\n                Denominator = \"sum:my.custom.count.metric{*}.as_count()\",\n                Numerator = \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n            },\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n            Thresholds = \n            {\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    TargetDisplay = \"99.900\",\n                    Timeframe = \"7d\",\n                    Warning = 99.99,\n                    WarningDisplay = \"99.990\",\n                },\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    TargetDisplay = \"99.900\",\n                    Timeframe = \"30d\",\n                    Warning = 99.99,\n                    WarningDisplay = \"99.990\",\n                },\n            },\n            Type = \"metric\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewServiceLevelObjective(ctx, \"foo\", \u0026datadog.ServiceLevelObjectiveArgs{\n\t\t\tDescription: pulumi.String(\"My custom metric SLO\"),\n\t\t\tName:        pulumi.String(\"Example Metric SLO\"),\n\t\t\tQuery: \u0026datadog.ServiceLevelObjectiveQueryArgs{\n\t\t\t\tDenominator: pulumi.String(\"sum:my.custom.count.metric{*}.as_count()\"),\n\t\t\t\tNumerator:   pulumi.String(\"sum:my.custom.count.metric{type:good_events}.as_count()\"),\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"baz\"),\n\t\t\t},\n\t\t\tThresholds: datadog.ServiceLevelObjectiveThresholdArray{\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTarget:         pulumi.Float64(99.9),\n\t\t\t\t\tTargetDisplay:  pulumi.String(\"99.900\"),\n\t\t\t\t\tTimeframe:      pulumi.String(\"7d\"),\n\t\t\t\t\tWarning:        pulumi.Float64(99.99),\n\t\t\t\t\tWarningDisplay: pulumi.String(\"99.990\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.ServiceLevelObjectiveThresholdArgs{\n\t\t\t\t\tTarget:         pulumi.Float64(99.9),\n\t\t\t\t\tTargetDisplay:  pulumi.String(\"99.900\"),\n\t\t\t\t\tTimeframe:      pulumi.String(\"30d\"),\n\t\t\t\t\tWarning:        pulumi.Float64(99.99),\n\t\t\t\t\tWarningDisplay: pulumi.String(\"99.990\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"metric\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### Monitor-Based SLO\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog service level objective\nconst bar = new datadog.ServiceLevelObjective(\"bar\", {\n    description: \"My custom monitor SLO\",\n    monitorIds: [\n        1,\n        2,\n        3,\n    ],\n    name: \"Example Monitor SLO\",\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds: [\n        {\n            target: 99.9,\n            timeframe: \"7d\",\n            warning: 99.99,\n        },\n        {\n            target: 99.9,\n            timeframe: \"30d\",\n            warning: 99.99,\n        },\n    ],\n    type: \"monitor\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog service level objective\nbar = datadog.ServiceLevelObjective(\"bar\",\n    description=\"My custom monitor SLO\",\n    monitor_ids=[\n        1,\n        2,\n        3,\n    ],\n    name=\"Example Monitor SLO\",\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds=[\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"7d\",\n            warning=99.99,\n        ),\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"30d\",\n            warning=99.99,\n        ),\n    ],\n    type=\"monitor\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog service level objective\n        var bar = new Datadog.ServiceLevelObjective(\"bar\", new Datadog.ServiceLevelObjectiveArgs\n        {\n            Description = \"My custom monitor SLO\",\n            MonitorIds = \n            {\n                1,\n                2,\n                3,\n            },\n            Name = \"Example Monitor SLO\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n            Thresholds = \n            {\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    Timeframe = \"7d\",\n                    Warning = 99.99,\n                },\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    Timeframe = \"30d\",\n                    Warning = 99.99,\n                },\n            },\n            Type = \"monitor\",\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "$ref": "#/types/datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n- `thresholds`: (Required) - A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "thresholds",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "$ref": "#/types/datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n- `thresholds`: (Required) - A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "name",
                "thresholds",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceLevelObjective resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A static set of groups to filter monitor-based SLOs\n"
                    },
                    "monitorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A static set of monitor IDs to use as part of the SLO\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "query": {
                        "$ref": "#/types/datadog:/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                        "description": "The metric query of good / total events\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n- `thresholds`: (Required) - A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                    },
                    "thresholds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsTest:SyntheticsTest": {
            "properties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "deprecationMessage": "Use assertion instead"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "monitorId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptions:SyntheticsTestOptions",
                    "deprecationMessage": "This parameter is deprecated, please use `options_list`"
                },
                "optionsList": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "request": {
                    "$ref": "#/types/datadog:/SyntheticsTestRequest:SyntheticsTestRequest"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "status": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/SyntheticsTestStep:SyntheticsTestStep"
                    }
                },
                "subtype": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "locations",
                "monitorId",
                "name",
                "request",
                "status",
                "tags",
                "type"
            ],
            "inputProperties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "deprecationMessage": "Use assertion instead"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptions:SyntheticsTestOptions",
                    "deprecationMessage": "This parameter is deprecated, please use `options_list`"
                },
                "optionsList": {
                    "$ref": "#/types/datadog:/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "request": {
                    "$ref": "#/types/datadog:/SyntheticsTestRequest:SyntheticsTestRequest"
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "status": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/SyntheticsTestStep:SyntheticsTestStep"
                    }
                },
                "subtype": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "locations",
                "name",
                "request",
                "status",
                "tags",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsTest resources.\n",
                "properties": {
                    "assertions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "pulumi.json#/Any"
                            }
                        },
                        "deprecationMessage": "Use assertion instead"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "type": "string"
                    },
                    "monitorId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "$ref": "#/types/datadog:/SyntheticsTestOptions:SyntheticsTestOptions",
                        "deprecationMessage": "This parameter is deprecated, please use `options_list`"
                    },
                    "optionsList": {
                        "$ref": "#/types/datadog:/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                    },
                    "request": {
                        "$ref": "#/types/datadog:/SyntheticsTestRequest:SyntheticsTestRequest"
                    },
                    "requestBasicauth": {
                        "$ref": "#/types/datadog:/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth"
                    },
                    "requestHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "requestQuery": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/SyntheticsTestStep:SyntheticsTestStep"
                        }
                    },
                    "subtype": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/timeBoard:TimeBoard": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "required": [
                "description",
                "graphs",
                "title"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "requiredInputs": [
                "description",
                "graphs",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TimeBoard resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the dashboard's content.\n"
                    },
                    "graphs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/TimeBoardGraph:TimeBoardGraph"
                        },
                        "description": "A list of graph definitions.\n"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/user:User": {
            "description": "Provides a Datadog user resource. This can be used to create and manage Datadog users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog user\nconst foo = new datadog.User(\"foo\", {\n    email: \"new@example.com\",\n    handle: \"new@example.com\",\n    name: \"New User\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog user\nfoo = datadog.User(\"foo\",\n    email=\"new@example.com\",\n    handle=\"new@example.com\",\n    name=\"New User\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog user\n        var foo = new Datadog.User(\"foo\", new Datadog.UserArgs\n        {\n            Email = \"new@example.com\",\n            Handle = \"new@example.com\",\n            Name = \"New User\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewUser(ctx, \"foo\", \u0026datadog.UserArgs{\n\t\t\tEmail:  pulumi.String(\"new@example.com\"),\n\t\t\tHandle: pulumi.String(\"new@example.com\"),\n\t\t\tName:   pulumi.String(\"New User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessRole": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "handle": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean",
                    "deprecationMessage": "This parameter will be replaced by `access_role` and will be removed from the next Major version"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "deprecationMessage": "This parameter was removed from the API and has no effect"
                },
                "verified": {
                    "type": "boolean"
                }
            },
            "required": [
                "email",
                "handle",
                "isAdmin",
                "name",
                "verified"
            ],
            "inputProperties": {
                "accessRole": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "handle": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean",
                    "deprecationMessage": "This parameter will be replaced by `access_role` and will be removed from the next Major version"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "deprecationMessage": "This parameter was removed from the API and has no effect"
                }
            },
            "requiredInputs": [
                "email",
                "handle",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "accessRole": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "handle": {
                        "type": "string"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "deprecationMessage": "This parameter will be replaced by `access_role` and will be removed from the next Major version"
                    },
                    "name": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "deprecationMessage": "This parameter was removed from the API and has no effect"
                    },
                    "verified": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/integration:Integration": {
            "description": "Provides a Datadog - PagerDuty resource. This can be used to create and manage Datadog - PagerDuty integration. This resource is deprecated and should only be used for legacy purposes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Services as Individual Resources\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    apiToken: \"38457822378273432587234242874\",\n    individualServices: true,\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n});\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testing_foo\", {\n    serviceKey: \"9876543210123456789\",\n    serviceName: \"testing_foo\",\n}, { dependsOn: [pd] });\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testing_bar\", {\n    serviceKey: \"54321098765432109876\",\n    serviceName: \"testing_bar\",\n}, { dependsOn: [pd] });\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npd = datadog.pagerduty.Integration(\"pd\",\n    api_token=\"38457822378273432587234242874\",\n    individual_services=True,\n    schedules=[\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain=\"ddog\")\ntesting_foo = datadog.pagerduty.ServiceObject(\"testingFoo\",\n    service_key=\"9876543210123456789\",\n    service_name=\"testing_foo\",\n    opts=ResourceOptions(depends_on=[\"datadog_integration_pagerduty.pd\"]))\ntesting_bar = datadog.pagerduty.ServiceObject(\"testingBar\",\n    service_key=\"54321098765432109876\",\n    service_name=\"testing_bar\",\n    opts=ResourceOptions(depends_on=[\"datadog_integration_pagerduty.pd\"]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pd = new Datadog.PagerDuty.Integration(\"pd\", new Datadog.PagerDuty.IntegrationArgs\n        {\n            ApiToken = \"38457822378273432587234242874\",\n            IndividualServices = true,\n            Schedules = \n            {\n                \"https://ddog.pagerduty.com/schedules/X123VF\",\n                \"https://ddog.pagerduty.com/schedules/X321XX\",\n            },\n            Subdomain = \"ddog\",\n        });\n        var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testingFoo\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"9876543210123456789\",\n            ServiceName = \"testing_foo\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_integration_pagerduty.pd\",\n            },\n        });\n        var testingBar = new Datadog.PagerDuty.ServiceObject(\"testingBar\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"54321098765432109876\",\n            ServiceName = \"testing_bar\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_integration_pagerduty.pd\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewIntegration(ctx, \"pd\", \u0026pagerduty.IntegrationArgs{\n\t\t\tApiToken:           pulumi.String(\"38457822378273432587234242874\"),\n\t\t\tIndividualServices: pulumi.Bool(true),\n\t\t\tSchedules: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X123VF\"),\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X321XX\"),\n\t\t\t},\n\t\t\tSubdomain: pulumi.String(\"ddog\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingFoo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_integration_pagerduty.pd\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingBar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_integration_pagerduty.pd\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### Inline Services\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst pdServices = {\n    testing_foo: \"9876543210123456789\",\n    testing_bar: \"54321098765432109876\",\n};\n// Create a new Datadog - PagerDuty integration\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    dynamic: [{\n        forEach: pdServices,\n        content: [{\n            serviceName: services.key,\n            serviceKey: services.value,\n        }],\n    }],\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\n```\n{{% /example %}}\n{{% example %}}\n### Migrating from Inline Services to Individual Resources\n\nMigrating from usage of inline services to individual resources is very simple. The following example shows how to convert an existing inline services configuration to configuration using individual resources. Doing analogous change and running `pulumi up` after every step is all that's necessary to migrate.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst pdServices = {\n    testing_foo: \"9876543210123456789\",\n    testing_bar: \"54321098765432109876\",\n};\n// Create a new Datadog - PagerDuty integration\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    dynamic: [{\n        forEach: pdServices,\n        content: [{\n            serviceName: services.key,\n            serviceKey: services.value,\n        }],\n    }],\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Second step - this will remove the inline-defined service objects\n// Note that during this step, `individual_services` must not be defined\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    apiToken: \"38457822378273432587234242874\",\n    // `services` was removed\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Second step - this will remove the inline-defined service objects\n# Note that during this step, `individual_services` must not be defined\npd = datadog.pagerduty.Integration(\"pd\",\n    api_token=\"38457822378273432587234242874\",\n    schedules=[\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain=\"ddog\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Second step - this will remove the inline-defined service objects\n        // Note that during this step, `individual_services` must not be defined\n        var pd = new Datadog.PagerDuty.Integration(\"pd\", new Datadog.PagerDuty.IntegrationArgs\n        {\n            ApiToken = \"38457822378273432587234242874\",\n            Schedules = \n            {\n                \"https://ddog.pagerduty.com/schedules/X123VF\",\n                \"https://ddog.pagerduty.com/schedules/X321XX\",\n            },\n            Subdomain = \"ddog\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewIntegration(ctx, \"pd\", \u0026pagerduty.IntegrationArgs{\n\t\t\tApiToken: pulumi.String(\"38457822378273432587234242874\"),\n\t\t\tSchedules: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X123VF\"),\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X321XX\"),\n\t\t\t},\n\t\t\tSubdomain: pulumi.String(\"ddog\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst pd = new datadog.pagerduty.Integration(\"pd\", {\n    apiToken: \"38457822378273432587234242874\",\n    // `individual_services = true` was added\n    individualServices: true,\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n});\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testing_foo\", {\n    serviceKey: \"9876543210123456789\",\n    serviceName: \"testing_foo\",\n}, { dependsOn: [pd] });\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testing_bar\", {\n    serviceKey: \"54321098765432109876\",\n    serviceName: \"testing_bar\",\n}, { dependsOn: [pd] });\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npd = datadog.pagerduty.Integration(\"pd\",\n    api_token=\"38457822378273432587234242874\",\n    individual_services=True,\n    schedules=[\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain=\"ddog\")\ntesting_foo = datadog.pagerduty.ServiceObject(\"testingFoo\",\n    service_key=\"9876543210123456789\",\n    service_name=\"testing_foo\",\n    opts=ResourceOptions(depends_on=[\"datadog_integration_pagerduty.pd\"]))\ntesting_bar = datadog.pagerduty.ServiceObject(\"testingBar\",\n    service_key=\"54321098765432109876\",\n    service_name=\"testing_bar\",\n    opts=ResourceOptions(depends_on=[\"datadog_integration_pagerduty.pd\"]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pd = new Datadog.PagerDuty.Integration(\"pd\", new Datadog.PagerDuty.IntegrationArgs\n        {\n            ApiToken = \"38457822378273432587234242874\",\n            IndividualServices = true,\n            Schedules = \n            {\n                \"https://ddog.pagerduty.com/schedules/X123VF\",\n                \"https://ddog.pagerduty.com/schedules/X321XX\",\n            },\n            Subdomain = \"ddog\",\n        });\n        var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testingFoo\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"9876543210123456789\",\n            ServiceName = \"testing_foo\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_integration_pagerduty.pd\",\n            },\n        });\n        var testingBar = new Datadog.PagerDuty.ServiceObject(\"testingBar\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"54321098765432109876\",\n            ServiceName = \"testing_bar\",\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_integration_pagerduty.pd\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewIntegration(ctx, \"pd\", \u0026pagerduty.IntegrationArgs{\n\t\t\tApiToken:           pulumi.String(\"38457822378273432587234242874\"),\n\t\t\tIndividualServices: pulumi.Bool(true),\n\t\t\tSchedules: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X123VF\"),\n\t\t\t\tpulumi.String(\"https://ddog.pagerduty.com/schedules/X321XX\"),\n\t\t\t},\n\t\t\tSubdomain: pulumi.String(\"ddog\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingFoo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_integration_pagerduty.pd\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingBar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_integration_pagerduty.pd\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n=======\n- `individual_services`: (Optional) Boolean to specify whether or not individual service objects specified by [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource are to be used. Mutually exclusive with `services` key.\n- `services`: (Optional) Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n- `service_name`: (Required) Your Service name in PagerDuty.\n- `service_key`: (Required) Your Service name associated service key in Pagerduty.\n- `schedules`: (Optional) Array of your schedule URLs.\n- `subdomain`: (Required) Your PagerDuty account’s personalized subdomain name.\n- `api_token`: (Optional) Your PagerDuty API token.\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e v2.13.0:docs/resources/integration_pagerduty.md\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Boolean to specify whether or not individual service objects specified by `datadog.pagerduty.ServiceObject` resource are to be used. Mutually exclusive with `services` key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of `datadog.pagerduty.ServiceObject` resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "required": [
                "subdomain"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n=======\n- `individual_services`: (Optional) Boolean to specify whether or not individual service objects specified by [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource are to be used. Mutually exclusive with `services` key.\n- `services`: (Optional) Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n- `service_name`: (Required) Your Service name in PagerDuty.\n- `service_key`: (Required) Your Service name associated service key in Pagerduty.\n- `schedules`: (Optional) Array of your schedule URLs.\n- `subdomain`: (Required) Your PagerDuty account’s personalized subdomain name.\n- `api_token`: (Optional) Your PagerDuty API token.\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e v2.13.0:docs/resources/integration_pagerduty.md\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Boolean to specify whether or not individual service objects specified by `datadog.pagerduty.ServiceObject` resource are to be used. Mutually exclusive with `services` key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of `datadog.pagerduty.ServiceObject` resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "requiredInputs": [
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "Your PagerDuty API token.\n=======\n- `individual_services`: (Optional) Boolean to specify whether or not individual service objects specified by [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource are to be used. Mutually exclusive with `services` key.\n- `services`: (Optional) Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of [datadog.pagerduty.ServiceObject](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty_service_object.html) resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n- `service_name`: (Required) Your Service name in PagerDuty.\n- `service_key`: (Required) Your Service name associated service key in Pagerduty.\n- `schedules`: (Optional) Array of your schedule URLs.\n- `subdomain`: (Required) Your PagerDuty account’s personalized subdomain name.\n- `api_token`: (Optional) Your PagerDuty API token.\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e v2.13.0:docs/resources/integration_pagerduty.md\n"
                    },
                    "individualServices": {
                        "type": "boolean",
                        "description": "Boolean to specify whether or not individual service objects specified by `datadog.pagerduty.ServiceObject` resource are to be used. Mutually exclusive with `services` key.\n"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of your schedule URLs.\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                        },
                        "description": "Array of PagerDuty service objects. **Deprecated** The `services` list is now deprecated in favour of `datadog.pagerduty.ServiceObject` resource. Note that `individual_services` must be set to `true` to ignore the `service` attribute and use individual services properly.\n",
                        "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Your PagerDuty account’s personalized subdomain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/serviceObject:ServiceObject": {
            "description": "Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated in the Datadog UI in order for this resource to be usable.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testing_foo\", {\n    serviceKey: \"9876543210123456789\",\n    serviceName: \"testing_foo\",\n});\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testing_bar\", {\n    serviceKey: \"54321098765432109876\",\n    serviceName: \"testing_bar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntesting_foo = datadog.pagerduty.ServiceObject(\"testingFoo\",\n    service_key=\"9876543210123456789\",\n    service_name=\"testing_foo\")\ntesting_bar = datadog.pagerduty.ServiceObject(\"testingBar\",\n    service_key=\"54321098765432109876\",\n    service_name=\"testing_bar\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testingFoo\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"9876543210123456789\",\n            ServiceName = \"testing_foo\",\n        });\n        var testingBar = new Datadog.PagerDuty.ServiceObject(\"testingBar\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"54321098765432109876\",\n            ServiceName = \"testing_bar\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewServiceObject(ctx, \"testingFoo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingBar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "serviceKey": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "serviceKey",
                "serviceName"
            ],
            "inputProperties": {
                "serviceKey": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "serviceKey",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "serviceKey": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "datadog:index/getDashboardList:getDashboardList": {
            "description": "Use this data source to retrieve information about an existing dashboard list, for use in other resources. In particular, it can be used in a dashboard to register it in the list.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getDashboardList({\n    name: \"My super list\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_dashboard_list(name=\"My super list\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetDashboardList.InvokeAsync(new Datadog.GetDashboardListArgs\n        {\n            Name = \"My super list\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupDashboardList(ctx, \u0026datadog.LookupDashboardListArgs{\n\t\t\tName: \"My super list\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboardList.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboardList.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "datadog:index/getIpRanges:getIpRanges": {
            "description": "Use this data source to retrieve information about Datadog's IP addresses.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getIpRanges({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_ip_ranges()\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetIpRanges.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetIpRanges(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIpRanges.\n",
                "properties": {
                    "agentsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "agentsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apmIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apmIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "logsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "syntheticsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "syntheticsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhooksIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhooksIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "agentsIpv4s",
                    "agentsIpv6s",
                    "apiIpv4s",
                    "apiIpv6s",
                    "apmIpv4s",
                    "apmIpv6s",
                    "logsIpv4s",
                    "logsIpv6s",
                    "processIpv4s",
                    "processIpv6s",
                    "syntheticsIpv4s",
                    "syntheticsIpv6s",
                    "webhooksIpv4s",
                    "webhooksIpv6s",
                    "id"
                ]
            }
        },
        "datadog:index/getMonitor:getMonitor": {
            "description": "Use this data source to retrieve information about an existing monitor for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getMonitor({\n    monitorTagsFilters: [\"foo:bar\"],\n    nameFilter: \"My awesome monitor\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_monitor(monitor_tags_filters=[\"foo:bar\"],\n    name_filter=\"My awesome monitor\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetMonitor.InvokeAsync(new Datadog.GetMonitorArgs\n        {\n            MonitorTagsFilters = \n            {\n                \"foo:bar\",\n            },\n            NameFilter = \"My awesome monitor\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"My awesome monitor\"\n\t\t_, err := datadog.LookupMonitor(ctx, \u0026datadog.LookupMonitorArgs{\n\t\t\tMonitorTagsFilters: []string{\n\t\t\t\t\"foo:bar\",\n\t\t\t},\n\t\t\tNameFilter: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitor.\n",
                "properties": {
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nameFilter": {
                        "type": "string"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitor.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean"
                    },
                    "escalationMessage": {
                        "type": "string"
                    },
                    "evaluationDelay": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeTags": {
                        "type": "boolean"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameFilter": {
                        "type": "string"
                    },
                    "newHostDelay": {
                        "type": "integer"
                    },
                    "noDataTimeframe": {
                        "type": "integer"
                    },
                    "notifyAudit": {
                        "type": "boolean"
                    },
                    "notifyNoData": {
                        "type": "boolean"
                    },
                    "query": {
                        "type": "string"
                    },
                    "renotifyInterval": {
                        "type": "integer"
                    },
                    "requireFullWindow": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thresholdWindows": {
                        "$ref": "#/types/datadog:/getMonitorThresholdWindows:getMonitorThresholdWindows"
                    },
                    "thresholds": {
                        "$ref": "#/types/datadog:/getMonitorThresholds:getMonitorThresholds"
                    },
                    "timeoutH": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enableLogsSample",
                    "escalationMessage",
                    "evaluationDelay",
                    "includeTags",
                    "locked",
                    "message",
                    "name",
                    "newHostDelay",
                    "noDataTimeframe",
                    "notifyAudit",
                    "notifyNoData",
                    "query",
                    "renotifyInterval",
                    "requireFullWindow",
                    "tags",
                    "thresholdWindows",
                    "thresholds",
                    "timeoutH",
                    "type",
                    "id"
                ]
            }
        },
        "datadog:index/getSyntheticsLocations:getSyntheticsLocations": {
            "description": "Use this data source to retrieve Datadog's Synthetics Locations (to be used in Synthetics tests).\n",
            "outputs": {
                "description": "A collection of values returned by getSyntheticsLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "locations": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "locations",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "aws": "Aws",
                "azure": "Azure",
                "datadog": "Datadog",
                "gcp": "Gcp",
                "index": "index",
                "pagerduty": "PagerDuty"
            },
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.0.0"
            },
            "devDependencies": {
                "@types/node": "^8.0.25"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Datadog resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "requires": {
                "pulumi": "\u003e=2.9.0,\u003c3.0.0"
            },
            "usesIOClasses": true
        }
    }
}