// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidget;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinition {
    private @Nullable String backgroundColor;
    private @Nullable String bannerImg;
    /**
     * @return The layout type of the dashboard. Valid values are `ordered`, `free`.
     * 
     */
    private String layoutType;
    private @Nullable Boolean showTitle;
    /**
     * @return The title of the dashboard.
     * 
     */
    private @Nullable String title;
    /**
     * @return The list of widgets to display on the dashboard.
     * 
     */
    private @Nullable List<DashboardWidgetGroupDefinitionWidget> widgets;

    private DashboardWidgetGroupDefinition() {}
    public Optional<String> backgroundColor() {
        return Optional.ofNullable(this.backgroundColor);
    }
    public Optional<String> bannerImg() {
        return Optional.ofNullable(this.bannerImg);
    }
    /**
     * @return The layout type of the dashboard. Valid values are `ordered`, `free`.
     * 
     */
    public String layoutType() {
        return this.layoutType;
    }
    public Optional<Boolean> showTitle() {
        return Optional.ofNullable(this.showTitle);
    }
    /**
     * @return The title of the dashboard.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    /**
     * @return The list of widgets to display on the dashboard.
     * 
     */
    public List<DashboardWidgetGroupDefinitionWidget> widgets() {
        return this.widgets == null ? List.of() : this.widgets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backgroundColor;
        private @Nullable String bannerImg;
        private String layoutType;
        private @Nullable Boolean showTitle;
        private @Nullable String title;
        private @Nullable List<DashboardWidgetGroupDefinitionWidget> widgets;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backgroundColor = defaults.backgroundColor;
    	      this.bannerImg = defaults.bannerImg;
    	      this.layoutType = defaults.layoutType;
    	      this.showTitle = defaults.showTitle;
    	      this.title = defaults.title;
    	      this.widgets = defaults.widgets;
        }

        @CustomType.Setter
        public Builder backgroundColor(@Nullable String backgroundColor) {
            this.backgroundColor = backgroundColor;
            return this;
        }
        @CustomType.Setter
        public Builder bannerImg(@Nullable String bannerImg) {
            this.bannerImg = bannerImg;
            return this;
        }
        @CustomType.Setter
        public Builder layoutType(String layoutType) {
            this.layoutType = Objects.requireNonNull(layoutType);
            return this;
        }
        @CustomType.Setter
        public Builder showTitle(@Nullable Boolean showTitle) {
            this.showTitle = showTitle;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder widgets(@Nullable List<DashboardWidgetGroupDefinitionWidget> widgets) {
            this.widgets = widgets;
            return this;
        }
        public Builder widgets(DashboardWidgetGroupDefinitionWidget... widgets) {
            return widgets(List.of(widgets));
        }
        public DashboardWidgetGroupDefinition build() {
            final var o = new DashboardWidgetGroupDefinition();
            o.backgroundColor = backgroundColor;
            o.bannerImg = bannerImg;
            o.layoutType = layoutType;
            o.showTitle = showTitle;
            o.title = title;
            o.widgets = widgets;
            return o;
        }
    }
}
