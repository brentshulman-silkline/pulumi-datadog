// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorMonitorThresholdsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorMonitorThresholdsArgs Empty = new MonitorMonitorThresholdsArgs();

    @Import(name="critical")
    private @Nullable Output<String> critical;

    public Optional<Output<String>> critical() {
        return Optional.ofNullable(this.critical);
    }

    @Import(name="criticalRecovery")
    private @Nullable Output<String> criticalRecovery;

    public Optional<Output<String>> criticalRecovery() {
        return Optional.ofNullable(this.criticalRecovery);
    }

    @Import(name="ok")
    private @Nullable Output<String> ok;

    public Optional<Output<String>> ok() {
        return Optional.ofNullable(this.ok);
    }

    @Import(name="unknown")
    private @Nullable Output<String> unknown;

    public Optional<Output<String>> unknown() {
        return Optional.ofNullable(this.unknown);
    }

    @Import(name="warning")
    private @Nullable Output<String> warning;

    public Optional<Output<String>> warning() {
        return Optional.ofNullable(this.warning);
    }

    @Import(name="warningRecovery")
    private @Nullable Output<String> warningRecovery;

    public Optional<Output<String>> warningRecovery() {
        return Optional.ofNullable(this.warningRecovery);
    }

    private MonitorMonitorThresholdsArgs() {}

    private MonitorMonitorThresholdsArgs(MonitorMonitorThresholdsArgs $) {
        this.critical = $.critical;
        this.criticalRecovery = $.criticalRecovery;
        this.ok = $.ok;
        this.unknown = $.unknown;
        this.warning = $.warning;
        this.warningRecovery = $.warningRecovery;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorMonitorThresholdsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorMonitorThresholdsArgs $;

        public Builder() {
            $ = new MonitorMonitorThresholdsArgs();
        }

        public Builder(MonitorMonitorThresholdsArgs defaults) {
            $ = new MonitorMonitorThresholdsArgs(Objects.requireNonNull(defaults));
        }

        public Builder critical(@Nullable Output<String> critical) {
            $.critical = critical;
            return this;
        }

        public Builder critical(String critical) {
            return critical(Output.of(critical));
        }

        public Builder criticalRecovery(@Nullable Output<String> criticalRecovery) {
            $.criticalRecovery = criticalRecovery;
            return this;
        }

        public Builder criticalRecovery(String criticalRecovery) {
            return criticalRecovery(Output.of(criticalRecovery));
        }

        public Builder ok(@Nullable Output<String> ok) {
            $.ok = ok;
            return this;
        }

        public Builder ok(String ok) {
            return ok(Output.of(ok));
        }

        public Builder unknown(@Nullable Output<String> unknown) {
            $.unknown = unknown;
            return this;
        }

        public Builder unknown(String unknown) {
            return unknown(Output.of(unknown));
        }

        public Builder warning(@Nullable Output<String> warning) {
            $.warning = warning;
            return this;
        }

        public Builder warning(String warning) {
            return warning(Output.of(warning));
        }

        public Builder warningRecovery(@Nullable Output<String> warningRecovery) {
            $.warningRecovery = warningRecovery;
            return this;
        }

        public Builder warningRecovery(String warningRecovery) {
            return warningRecovery(Output.of(warningRecovery));
        }

        public MonitorMonitorThresholdsArgs build() {
            return $;
        }
    }

}
