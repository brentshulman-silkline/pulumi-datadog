// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsMetricComputeArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsMetricComputeArgs Empty = new LogsMetricComputeArgs();

    @Import(name="aggregationType", required=true)
    private Output<String> aggregationType;

    public Output<String> aggregationType() {
        return this.aggregationType;
    }

    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private LogsMetricComputeArgs() {}

    private LogsMetricComputeArgs(LogsMetricComputeArgs $) {
        this.aggregationType = $.aggregationType;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsMetricComputeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsMetricComputeArgs $;

        public Builder() {
            $ = new LogsMetricComputeArgs();
        }

        public Builder(LogsMetricComputeArgs defaults) {
            $ = new LogsMetricComputeArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregationType(Output<String> aggregationType) {
            $.aggregationType = aggregationType;
            return this;
        }

        public Builder aggregationType(String aggregationType) {
            return aggregationType(Output.of(aggregationType));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public LogsMetricComputeArgs build() {
            $.aggregationType = Objects.requireNonNull($.aggregationType, "expected parameter 'aggregationType' to be non-null");
            return $;
        }
    }

}
