// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogsArchiveAzureArchive {
    private String clientId;
    private String container;
    private @Nullable String path;
    private String storageAccount;
    private String tenantId;

    private LogsArchiveAzureArchive() {}
    public String clientId() {
        return this.clientId;
    }
    public String container() {
        return this.container;
    }
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    public String storageAccount() {
        return this.storageAccount;
    }
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsArchiveAzureArchive defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String container;
        private @Nullable String path;
        private String storageAccount;
        private String tenantId;
        public Builder() {}
        public Builder(LogsArchiveAzureArchive defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.container = defaults.container;
    	      this.path = defaults.path;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        @CustomType.Setter
        public Builder container(String container) {
            this.container = Objects.requireNonNull(container);
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccount(String storageAccount) {
            this.storageAccount = Objects.requireNonNull(storageAccount);
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public LogsArchiveAzureArchive build() {
            final var o = new LogsArchiveAzureArchive();
            o.clientId = clientId;
            o.container = container;
            o.path = path;
            o.storageAccount = storageAccount;
            o.tenantId = tenantId;
            return o;
        }
    }
}
