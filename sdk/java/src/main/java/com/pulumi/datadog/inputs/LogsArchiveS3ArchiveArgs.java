// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LogsArchiveS3ArchiveArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsArchiveS3ArchiveArgs Empty = new LogsArchiveS3ArchiveArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    @Import(name="roleName", required=true)
    private Output<String> roleName;

    public Output<String> roleName() {
        return this.roleName;
    }

    private LogsArchiveS3ArchiveArgs() {}

    private LogsArchiveS3ArchiveArgs(LogsArchiveS3ArchiveArgs $) {
        this.accountId = $.accountId;
        this.bucket = $.bucket;
        this.path = $.path;
        this.roleName = $.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsArchiveS3ArchiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsArchiveS3ArchiveArgs $;

        public Builder() {
            $ = new LogsArchiveS3ArchiveArgs();
        }

        public Builder(LogsArchiveS3ArchiveArgs defaults) {
            $ = new LogsArchiveS3ArchiveArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder roleName(Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public LogsArchiveS3ArchiveArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.roleName = Objects.requireNonNull($.roleName, "expected parameter 'roleName' to be non-null");
            return $;
        }
    }

}
