// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs Empty = new DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs();

    @Import(name="alias")
    private @Nullable Output<String> alias;

    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    @Import(name="dimension", required=true)
    private Output<String> dimension;

    public Output<String> dimension() {
        return this.dimension;
    }

    @Import(name="formulaExpression", required=true)
    private Output<String> formulaExpression;

    public Output<String> formulaExpression() {
        return this.formulaExpression;
    }

    private DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs() {}

    private DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs(DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs $) {
        this.alias = $.alias;
        this.dimension = $.dimension;
        this.formulaExpression = $.formulaExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs $;

        public Builder() {
            $ = new DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs();
        }

        public Builder(DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs defaults) {
            $ = new DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs(Objects.requireNonNull(defaults));
        }

        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        public Builder dimension(Output<String> dimension) {
            $.dimension = dimension;
            return this;
        }

        public Builder dimension(String dimension) {
            return dimension(Output.of(dimension));
        }

        public Builder formulaExpression(Output<String> formulaExpression) {
            $.formulaExpression = formulaExpression;
            return this;
        }

        public Builder formulaExpression(String formulaExpression) {
            return formulaExpression(Output.of(formulaExpression));
        }

        public DashboardWidgetScatterplotDefinitionRequestScatterplotTableFormulaArgs build() {
            $.dimension = Objects.requireNonNull($.dimension, "expected parameter 'dimension' to be non-null");
            $.formulaExpression = Objects.requireNonNull($.formulaExpression, "expected parameter 'formulaExpression' to be non-null");
            return $;
        }
    }

}
