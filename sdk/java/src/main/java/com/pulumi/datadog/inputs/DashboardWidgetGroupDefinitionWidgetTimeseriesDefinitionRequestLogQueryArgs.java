// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupByArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiComputeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs Empty = new DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs();

    @Import(name="computeQuery")
    private @Nullable Output<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQueryArgs> computeQuery;

    public Optional<Output<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQueryArgs>> computeQuery() {
        return Optional.ofNullable(this.computeQuery);
    }

    @Import(name="groupBies")
    private @Nullable Output<List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupByArgs>> groupBies;

    public Optional<Output<List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupByArgs>>> groupBies() {
        return Optional.ofNullable(this.groupBies);
    }

    @Import(name="index", required=true)
    private Output<String> index;

    public Output<String> index() {
        return this.index;
    }

    @Import(name="multiComputes")
    private @Nullable Output<List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiComputeArgs>> multiComputes;

    public Optional<Output<List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiComputeArgs>>> multiComputes() {
        return Optional.ofNullable(this.multiComputes);
    }

    @Import(name="searchQuery")
    private @Nullable Output<String> searchQuery;

    public Optional<Output<String>> searchQuery() {
        return Optional.ofNullable(this.searchQuery);
    }

    private DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs() {}

    private DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs $) {
        this.computeQuery = $.computeQuery;
        this.groupBies = $.groupBies;
        this.index = $.index;
        this.multiComputes = $.multiComputes;
        this.searchQuery = $.searchQuery;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs(Objects.requireNonNull(defaults));
        }

        public Builder computeQuery(@Nullable Output<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQueryArgs> computeQuery) {
            $.computeQuery = computeQuery;
            return this;
        }

        public Builder computeQuery(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQueryArgs computeQuery) {
            return computeQuery(Output.of(computeQuery));
        }

        public Builder groupBies(@Nullable Output<List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupByArgs>> groupBies) {
            $.groupBies = groupBies;
            return this;
        }

        public Builder groupBies(List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupByArgs> groupBies) {
            return groupBies(Output.of(groupBies));
        }

        public Builder groupBies(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupByArgs... groupBies) {
            return groupBies(List.of(groupBies));
        }

        public Builder index(Output<String> index) {
            $.index = index;
            return this;
        }

        public Builder index(String index) {
            return index(Output.of(index));
        }

        public Builder multiComputes(@Nullable Output<List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiComputeArgs>> multiComputes) {
            $.multiComputes = multiComputes;
            return this;
        }

        public Builder multiComputes(List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiComputeArgs> multiComputes) {
            return multiComputes(Output.of(multiComputes));
        }

        public Builder multiComputes(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiComputeArgs... multiComputes) {
            return multiComputes(List.of(multiComputes));
        }

        public Builder searchQuery(@Nullable Output<String> searchQuery) {
            $.searchQuery = searchQuery;
            return this;
        }

        public Builder searchQuery(String searchQuery) {
            return searchQuery(Output.of(searchQuery));
        }

        public DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryArgs build() {
            $.index = Objects.requireNonNull($.index, "expected parameter 'index' to be non-null");
            return $;
        }
    }

}
