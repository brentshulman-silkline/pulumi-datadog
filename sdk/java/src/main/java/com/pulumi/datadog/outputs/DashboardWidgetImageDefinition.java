// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetImageDefinition {
    private @Nullable Boolean hasBackground;
    private @Nullable Boolean hasBorder;
    private @Nullable String horizontalAlign;
    private @Nullable String margin;
    private @Nullable String sizing;
    /**
     * @return The URL of the dashboard.
     * 
     */
    private String url;
    private @Nullable String urlDarkTheme;
    private @Nullable String verticalAlign;

    private DashboardWidgetImageDefinition() {}
    public Optional<Boolean> hasBackground() {
        return Optional.ofNullable(this.hasBackground);
    }
    public Optional<Boolean> hasBorder() {
        return Optional.ofNullable(this.hasBorder);
    }
    public Optional<String> horizontalAlign() {
        return Optional.ofNullable(this.horizontalAlign);
    }
    public Optional<String> margin() {
        return Optional.ofNullable(this.margin);
    }
    public Optional<String> sizing() {
        return Optional.ofNullable(this.sizing);
    }
    /**
     * @return The URL of the dashboard.
     * 
     */
    public String url() {
        return this.url;
    }
    public Optional<String> urlDarkTheme() {
        return Optional.ofNullable(this.urlDarkTheme);
    }
    public Optional<String> verticalAlign() {
        return Optional.ofNullable(this.verticalAlign);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetImageDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean hasBackground;
        private @Nullable Boolean hasBorder;
        private @Nullable String horizontalAlign;
        private @Nullable String margin;
        private @Nullable String sizing;
        private String url;
        private @Nullable String urlDarkTheme;
        private @Nullable String verticalAlign;
        public Builder() {}
        public Builder(DashboardWidgetImageDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hasBackground = defaults.hasBackground;
    	      this.hasBorder = defaults.hasBorder;
    	      this.horizontalAlign = defaults.horizontalAlign;
    	      this.margin = defaults.margin;
    	      this.sizing = defaults.sizing;
    	      this.url = defaults.url;
    	      this.urlDarkTheme = defaults.urlDarkTheme;
    	      this.verticalAlign = defaults.verticalAlign;
        }

        @CustomType.Setter
        public Builder hasBackground(@Nullable Boolean hasBackground) {
            this.hasBackground = hasBackground;
            return this;
        }
        @CustomType.Setter
        public Builder hasBorder(@Nullable Boolean hasBorder) {
            this.hasBorder = hasBorder;
            return this;
        }
        @CustomType.Setter
        public Builder horizontalAlign(@Nullable String horizontalAlign) {
            this.horizontalAlign = horizontalAlign;
            return this;
        }
        @CustomType.Setter
        public Builder margin(@Nullable String margin) {
            this.margin = margin;
            return this;
        }
        @CustomType.Setter
        public Builder sizing(@Nullable String sizing) {
            this.sizing = sizing;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder urlDarkTheme(@Nullable String urlDarkTheme) {
            this.urlDarkTheme = urlDarkTheme;
            return this;
        }
        @CustomType.Setter
        public Builder verticalAlign(@Nullable String verticalAlign) {
            this.verticalAlign = verticalAlign;
            return this;
        }
        public DashboardWidgetImageDefinition build() {
            final var o = new DashboardWidgetImageDefinition();
            o.hasBackground = hasBackground;
            o.hasBorder = hasBorder;
            o.horizontalAlign = horizontalAlign;
            o.margin = margin;
            o.sizing = sizing;
            o.url = url;
            o.urlDarkTheme = urlDarkTheme;
            o.verticalAlign = verticalAlign;
            return o;
        }
    }
}
