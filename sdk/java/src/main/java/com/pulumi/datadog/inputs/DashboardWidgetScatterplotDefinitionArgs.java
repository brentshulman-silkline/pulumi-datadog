// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionCustomLinkArgs;
import com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionRequestArgs;
import com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionXaxisArgs;
import com.pulumi.datadog.inputs.DashboardWidgetScatterplotDefinitionYaxisArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetScatterplotDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetScatterplotDefinitionArgs Empty = new DashboardWidgetScatterplotDefinitionArgs();

    @Import(name="colorByGroups")
    private @Nullable Output<List<String>> colorByGroups;

    public Optional<Output<List<String>>> colorByGroups() {
        return Optional.ofNullable(this.colorByGroups);
    }

    @Import(name="customLinks")
    private @Nullable Output<List<DashboardWidgetScatterplotDefinitionCustomLinkArgs>> customLinks;

    public Optional<Output<List<DashboardWidgetScatterplotDefinitionCustomLinkArgs>>> customLinks() {
        return Optional.ofNullable(this.customLinks);
    }

    @Import(name="liveSpan")
    private @Nullable Output<String> liveSpan;

    public Optional<Output<String>> liveSpan() {
        return Optional.ofNullable(this.liveSpan);
    }

    @Import(name="request")
    private @Nullable Output<DashboardWidgetScatterplotDefinitionRequestArgs> request;

    public Optional<Output<DashboardWidgetScatterplotDefinitionRequestArgs>> request() {
        return Optional.ofNullable(this.request);
    }

    /**
     * The title of the dashboard.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return The title of the dashboard.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    @Import(name="titleAlign")
    private @Nullable Output<String> titleAlign;

    public Optional<Output<String>> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }

    @Import(name="titleSize")
    private @Nullable Output<String> titleSize;

    public Optional<Output<String>> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }

    @Import(name="xaxis")
    private @Nullable Output<DashboardWidgetScatterplotDefinitionXaxisArgs> xaxis;

    public Optional<Output<DashboardWidgetScatterplotDefinitionXaxisArgs>> xaxis() {
        return Optional.ofNullable(this.xaxis);
    }

    @Import(name="yaxis")
    private @Nullable Output<DashboardWidgetScatterplotDefinitionYaxisArgs> yaxis;

    public Optional<Output<DashboardWidgetScatterplotDefinitionYaxisArgs>> yaxis() {
        return Optional.ofNullable(this.yaxis);
    }

    private DashboardWidgetScatterplotDefinitionArgs() {}

    private DashboardWidgetScatterplotDefinitionArgs(DashboardWidgetScatterplotDefinitionArgs $) {
        this.colorByGroups = $.colorByGroups;
        this.customLinks = $.customLinks;
        this.liveSpan = $.liveSpan;
        this.request = $.request;
        this.title = $.title;
        this.titleAlign = $.titleAlign;
        this.titleSize = $.titleSize;
        this.xaxis = $.xaxis;
        this.yaxis = $.yaxis;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetScatterplotDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetScatterplotDefinitionArgs $;

        public Builder() {
            $ = new DashboardWidgetScatterplotDefinitionArgs();
        }

        public Builder(DashboardWidgetScatterplotDefinitionArgs defaults) {
            $ = new DashboardWidgetScatterplotDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder colorByGroups(@Nullable Output<List<String>> colorByGroups) {
            $.colorByGroups = colorByGroups;
            return this;
        }

        public Builder colorByGroups(List<String> colorByGroups) {
            return colorByGroups(Output.of(colorByGroups));
        }

        public Builder colorByGroups(String... colorByGroups) {
            return colorByGroups(List.of(colorByGroups));
        }

        public Builder customLinks(@Nullable Output<List<DashboardWidgetScatterplotDefinitionCustomLinkArgs>> customLinks) {
            $.customLinks = customLinks;
            return this;
        }

        public Builder customLinks(List<DashboardWidgetScatterplotDefinitionCustomLinkArgs> customLinks) {
            return customLinks(Output.of(customLinks));
        }

        public Builder customLinks(DashboardWidgetScatterplotDefinitionCustomLinkArgs... customLinks) {
            return customLinks(List.of(customLinks));
        }

        public Builder liveSpan(@Nullable Output<String> liveSpan) {
            $.liveSpan = liveSpan;
            return this;
        }

        public Builder liveSpan(String liveSpan) {
            return liveSpan(Output.of(liveSpan));
        }

        public Builder request(@Nullable Output<DashboardWidgetScatterplotDefinitionRequestArgs> request) {
            $.request = request;
            return this;
        }

        public Builder request(DashboardWidgetScatterplotDefinitionRequestArgs request) {
            return request(Output.of(request));
        }

        /**
         * @param title The title of the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title The title of the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public Builder titleAlign(@Nullable Output<String> titleAlign) {
            $.titleAlign = titleAlign;
            return this;
        }

        public Builder titleAlign(String titleAlign) {
            return titleAlign(Output.of(titleAlign));
        }

        public Builder titleSize(@Nullable Output<String> titleSize) {
            $.titleSize = titleSize;
            return this;
        }

        public Builder titleSize(String titleSize) {
            return titleSize(Output.of(titleSize));
        }

        public Builder xaxis(@Nullable Output<DashboardWidgetScatterplotDefinitionXaxisArgs> xaxis) {
            $.xaxis = xaxis;
            return this;
        }

        public Builder xaxis(DashboardWidgetScatterplotDefinitionXaxisArgs xaxis) {
            return xaxis(Output.of(xaxis));
        }

        public Builder yaxis(@Nullable Output<DashboardWidgetScatterplotDefinitionYaxisArgs> yaxis) {
            $.yaxis = yaxis;
            return this;
        }

        public Builder yaxis(DashboardWidgetScatterplotDefinitionYaxisArgs yaxis) {
            return yaxis(Output.of(yaxis));
        }

        public DashboardWidgetScatterplotDefinitionArgs build() {
            return $;
        }
    }

}
