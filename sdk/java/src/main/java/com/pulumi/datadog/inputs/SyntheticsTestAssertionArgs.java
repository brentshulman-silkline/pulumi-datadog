// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SyntheticsTestAssertionTargetjsonpathArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestAssertionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestAssertionArgs Empty = new SyntheticsTestAssertionArgs();

    @Import(name="operator", required=true)
    private Output<String> operator;

    public Output<String> operator() {
        return this.operator;
    }

    @Import(name="property")
    private @Nullable Output<String> property;

    public Optional<Output<String>> property() {
        return Optional.ofNullable(this.property);
    }

    @Import(name="target")
    private @Nullable Output<String> target;

    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="targetjsonpath")
    private @Nullable Output<SyntheticsTestAssertionTargetjsonpathArgs> targetjsonpath;

    public Optional<Output<SyntheticsTestAssertionTargetjsonpathArgs>> targetjsonpath() {
        return Optional.ofNullable(this.targetjsonpath);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private SyntheticsTestAssertionArgs() {}

    private SyntheticsTestAssertionArgs(SyntheticsTestAssertionArgs $) {
        this.operator = $.operator;
        this.property = $.property;
        this.target = $.target;
        this.targetjsonpath = $.targetjsonpath;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestAssertionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestAssertionArgs $;

        public Builder() {
            $ = new SyntheticsTestAssertionArgs();
        }

        public Builder(SyntheticsTestAssertionArgs defaults) {
            $ = new SyntheticsTestAssertionArgs(Objects.requireNonNull(defaults));
        }

        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public Builder property(@Nullable Output<String> property) {
            $.property = property;
            return this;
        }

        public Builder property(String property) {
            return property(Output.of(property));
        }

        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public Builder targetjsonpath(@Nullable Output<SyntheticsTestAssertionTargetjsonpathArgs> targetjsonpath) {
            $.targetjsonpath = targetjsonpath;
            return this;
        }

        public Builder targetjsonpath(SyntheticsTestAssertionTargetjsonpathArgs targetjsonpath) {
            return targetjsonpath(Output.of(targetjsonpath));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SyntheticsTestAssertionArgs build() {
            $.operator = Objects.requireNonNull($.operator, "expected parameter 'operator' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
