// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinitionWidgetServicemapDefinition {
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink> customLinks;
    private List<String> filters;
    private String service;
    /**
     * @return The title of the dashboard.
     * 
     */
    private @Nullable String title;
    private @Nullable String titleAlign;
    private @Nullable String titleSize;

    private DashboardWidgetGroupDefinitionWidgetServicemapDefinition() {}
    public List<DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink> customLinks() {
        return this.customLinks == null ? List.of() : this.customLinks;
    }
    public List<String> filters() {
        return this.filters;
    }
    public String service() {
        return this.service;
    }
    /**
     * @return The title of the dashboard.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public Optional<String> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }
    public Optional<String> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidgetServicemapDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink> customLinks;
        private List<String> filters;
        private String service;
        private @Nullable String title;
        private @Nullable String titleAlign;
        private @Nullable String titleSize;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidgetServicemapDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customLinks = defaults.customLinks;
    	      this.filters = defaults.filters;
    	      this.service = defaults.service;
    	      this.title = defaults.title;
    	      this.titleAlign = defaults.titleAlign;
    	      this.titleSize = defaults.titleSize;
        }

        @CustomType.Setter
        public Builder customLinks(@Nullable List<DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink> customLinks) {
            this.customLinks = customLinks;
            return this;
        }
        public Builder customLinks(DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink... customLinks) {
            return customLinks(List.of(customLinks));
        }
        @CustomType.Setter
        public Builder filters(List<String> filters) {
            this.filters = Objects.requireNonNull(filters);
            return this;
        }
        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder service(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder titleAlign(@Nullable String titleAlign) {
            this.titleAlign = titleAlign;
            return this;
        }
        @CustomType.Setter
        public Builder titleSize(@Nullable String titleSize) {
            this.titleSize = titleSize;
            return this;
        }
        public DashboardWidgetGroupDefinitionWidgetServicemapDefinition build() {
            final var o = new DashboardWidgetGroupDefinitionWidgetServicemapDefinition();
            o.customLinks = customLinks;
            o.filters = filters;
            o.service = service;
            o.title = title;
            o.titleAlign = titleAlign;
            o.titleSize = titleSize;
            return o;
        }
    }
}
