// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetNoteDefinition {
    private @Nullable String backgroundColor;
    private String content;
    private @Nullable String fontSize;
    private @Nullable Boolean hasPadding;
    private @Nullable Boolean showTick;
    private @Nullable String textAlign;
    private @Nullable String tickEdge;
    private @Nullable String tickPos;
    private @Nullable String verticalAlign;

    private DashboardWidgetNoteDefinition() {}
    public Optional<String> backgroundColor() {
        return Optional.ofNullable(this.backgroundColor);
    }
    public String content() {
        return this.content;
    }
    public Optional<String> fontSize() {
        return Optional.ofNullable(this.fontSize);
    }
    public Optional<Boolean> hasPadding() {
        return Optional.ofNullable(this.hasPadding);
    }
    public Optional<Boolean> showTick() {
        return Optional.ofNullable(this.showTick);
    }
    public Optional<String> textAlign() {
        return Optional.ofNullable(this.textAlign);
    }
    public Optional<String> tickEdge() {
        return Optional.ofNullable(this.tickEdge);
    }
    public Optional<String> tickPos() {
        return Optional.ofNullable(this.tickPos);
    }
    public Optional<String> verticalAlign() {
        return Optional.ofNullable(this.verticalAlign);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetNoteDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backgroundColor;
        private String content;
        private @Nullable String fontSize;
        private @Nullable Boolean hasPadding;
        private @Nullable Boolean showTick;
        private @Nullable String textAlign;
        private @Nullable String tickEdge;
        private @Nullable String tickPos;
        private @Nullable String verticalAlign;
        public Builder() {}
        public Builder(DashboardWidgetNoteDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backgroundColor = defaults.backgroundColor;
    	      this.content = defaults.content;
    	      this.fontSize = defaults.fontSize;
    	      this.hasPadding = defaults.hasPadding;
    	      this.showTick = defaults.showTick;
    	      this.textAlign = defaults.textAlign;
    	      this.tickEdge = defaults.tickEdge;
    	      this.tickPos = defaults.tickPos;
    	      this.verticalAlign = defaults.verticalAlign;
        }

        @CustomType.Setter
        public Builder backgroundColor(@Nullable String backgroundColor) {
            this.backgroundColor = backgroundColor;
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        @CustomType.Setter
        public Builder fontSize(@Nullable String fontSize) {
            this.fontSize = fontSize;
            return this;
        }
        @CustomType.Setter
        public Builder hasPadding(@Nullable Boolean hasPadding) {
            this.hasPadding = hasPadding;
            return this;
        }
        @CustomType.Setter
        public Builder showTick(@Nullable Boolean showTick) {
            this.showTick = showTick;
            return this;
        }
        @CustomType.Setter
        public Builder textAlign(@Nullable String textAlign) {
            this.textAlign = textAlign;
            return this;
        }
        @CustomType.Setter
        public Builder tickEdge(@Nullable String tickEdge) {
            this.tickEdge = tickEdge;
            return this;
        }
        @CustomType.Setter
        public Builder tickPos(@Nullable String tickPos) {
            this.tickPos = tickPos;
            return this;
        }
        @CustomType.Setter
        public Builder verticalAlign(@Nullable String verticalAlign) {
            this.verticalAlign = verticalAlign;
            return this;
        }
        public DashboardWidgetNoteDefinition build() {
            final var o = new DashboardWidgetNoteDefinition();
            o.backgroundColor = backgroundColor;
            o.content = content;
            o.fontSize = fontSize;
            o.hasPadding = hasPadding;
            o.showTick = showTick;
            o.textAlign = textAlign;
            o.tickEdge = tickEdge;
            o.tickPos = tickPos;
            o.verticalAlign = verticalAlign;
            return o;
        }
    }
}
