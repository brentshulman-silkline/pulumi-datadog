// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition {
    private @Nullable String liveSpan;
    private String query;
    private @Nullable String tagsExecution;
    private @Nullable String title;
    private @Nullable String titleAlign;
    private @Nullable String titleSize;

    private DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition() {}
    public Optional<String> liveSpan() {
        return Optional.ofNullable(this.liveSpan);
    }
    public String query() {
        return this.query;
    }
    public Optional<String> tagsExecution() {
        return Optional.ofNullable(this.tagsExecution);
    }
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public Optional<String> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }
    public Optional<String> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String liveSpan;
        private String query;
        private @Nullable String tagsExecution;
        private @Nullable String title;
        private @Nullable String titleAlign;
        private @Nullable String titleSize;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.liveSpan = defaults.liveSpan;
    	      this.query = defaults.query;
    	      this.tagsExecution = defaults.tagsExecution;
    	      this.title = defaults.title;
    	      this.titleAlign = defaults.titleAlign;
    	      this.titleSize = defaults.titleSize;
        }

        @CustomType.Setter
        public Builder liveSpan(@Nullable String liveSpan) {
            this.liveSpan = liveSpan;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        @CustomType.Setter
        public Builder tagsExecution(@Nullable String tagsExecution) {
            this.tagsExecution = tagsExecution;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder titleAlign(@Nullable String titleAlign) {
            this.titleAlign = titleAlign;
            return this;
        }
        @CustomType.Setter
        public Builder titleSize(@Nullable String titleSize) {
            this.titleSize = titleSize;
            return this;
        }
        public DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition build() {
            final var o = new DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition();
            o.liveSpan = liveSpan;
            o.query = query;
            o.tagsExecution = tagsExecution;
            o.title = title;
            o.titleAlign = titleAlign;
            o.titleSize = titleSize;
            return o;
        }
    }
}
