// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestApmQuery;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestApmStatsQuery;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestConditionalFormat;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestFormula;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestLogQuery;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestProcessQuery;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestQuery;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestRumQuery;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinitionRequestSecurityQuery;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetQueryTableDefinitionRequest {
    private @Nullable String aggregator;
    private @Nullable String alias;
    private @Nullable DashboardWidgetQueryTableDefinitionRequestApmQuery apmQuery;
    private @Nullable DashboardWidgetQueryTableDefinitionRequestApmStatsQuery apmStatsQuery;
    private @Nullable List<String> cellDisplayModes;
    private @Nullable List<DashboardWidgetQueryTableDefinitionRequestConditionalFormat> conditionalFormats;
    private @Nullable List<DashboardWidgetQueryTableDefinitionRequestFormula> formulas;
    private @Nullable Integer limit;
    private @Nullable DashboardWidgetQueryTableDefinitionRequestLogQuery logQuery;
    private @Nullable String order;
    private @Nullable DashboardWidgetQueryTableDefinitionRequestProcessQuery processQuery;
    private @Nullable String q;
    private @Nullable List<DashboardWidgetQueryTableDefinitionRequestQuery> queries;
    private @Nullable DashboardWidgetQueryTableDefinitionRequestRumQuery rumQuery;
    private @Nullable DashboardWidgetQueryTableDefinitionRequestSecurityQuery securityQuery;

    private DashboardWidgetQueryTableDefinitionRequest() {}
    public Optional<String> aggregator() {
        return Optional.ofNullable(this.aggregator);
    }
    public Optional<String> alias() {
        return Optional.ofNullable(this.alias);
    }
    public Optional<DashboardWidgetQueryTableDefinitionRequestApmQuery> apmQuery() {
        return Optional.ofNullable(this.apmQuery);
    }
    public Optional<DashboardWidgetQueryTableDefinitionRequestApmStatsQuery> apmStatsQuery() {
        return Optional.ofNullable(this.apmStatsQuery);
    }
    public List<String> cellDisplayModes() {
        return this.cellDisplayModes == null ? List.of() : this.cellDisplayModes;
    }
    public List<DashboardWidgetQueryTableDefinitionRequestConditionalFormat> conditionalFormats() {
        return this.conditionalFormats == null ? List.of() : this.conditionalFormats;
    }
    public List<DashboardWidgetQueryTableDefinitionRequestFormula> formulas() {
        return this.formulas == null ? List.of() : this.formulas;
    }
    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }
    public Optional<DashboardWidgetQueryTableDefinitionRequestLogQuery> logQuery() {
        return Optional.ofNullable(this.logQuery);
    }
    public Optional<String> order() {
        return Optional.ofNullable(this.order);
    }
    public Optional<DashboardWidgetQueryTableDefinitionRequestProcessQuery> processQuery() {
        return Optional.ofNullable(this.processQuery);
    }
    public Optional<String> q() {
        return Optional.ofNullable(this.q);
    }
    public List<DashboardWidgetQueryTableDefinitionRequestQuery> queries() {
        return this.queries == null ? List.of() : this.queries;
    }
    public Optional<DashboardWidgetQueryTableDefinitionRequestRumQuery> rumQuery() {
        return Optional.ofNullable(this.rumQuery);
    }
    public Optional<DashboardWidgetQueryTableDefinitionRequestSecurityQuery> securityQuery() {
        return Optional.ofNullable(this.securityQuery);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetQueryTableDefinitionRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregator;
        private @Nullable String alias;
        private @Nullable DashboardWidgetQueryTableDefinitionRequestApmQuery apmQuery;
        private @Nullable DashboardWidgetQueryTableDefinitionRequestApmStatsQuery apmStatsQuery;
        private @Nullable List<String> cellDisplayModes;
        private @Nullable List<DashboardWidgetQueryTableDefinitionRequestConditionalFormat> conditionalFormats;
        private @Nullable List<DashboardWidgetQueryTableDefinitionRequestFormula> formulas;
        private @Nullable Integer limit;
        private @Nullable DashboardWidgetQueryTableDefinitionRequestLogQuery logQuery;
        private @Nullable String order;
        private @Nullable DashboardWidgetQueryTableDefinitionRequestProcessQuery processQuery;
        private @Nullable String q;
        private @Nullable List<DashboardWidgetQueryTableDefinitionRequestQuery> queries;
        private @Nullable DashboardWidgetQueryTableDefinitionRequestRumQuery rumQuery;
        private @Nullable DashboardWidgetQueryTableDefinitionRequestSecurityQuery securityQuery;
        public Builder() {}
        public Builder(DashboardWidgetQueryTableDefinitionRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregator = defaults.aggregator;
    	      this.alias = defaults.alias;
    	      this.apmQuery = defaults.apmQuery;
    	      this.apmStatsQuery = defaults.apmStatsQuery;
    	      this.cellDisplayModes = defaults.cellDisplayModes;
    	      this.conditionalFormats = defaults.conditionalFormats;
    	      this.formulas = defaults.formulas;
    	      this.limit = defaults.limit;
    	      this.logQuery = defaults.logQuery;
    	      this.order = defaults.order;
    	      this.processQuery = defaults.processQuery;
    	      this.q = defaults.q;
    	      this.queries = defaults.queries;
    	      this.rumQuery = defaults.rumQuery;
    	      this.securityQuery = defaults.securityQuery;
        }

        @CustomType.Setter
        public Builder aggregator(@Nullable String aggregator) {
            this.aggregator = aggregator;
            return this;
        }
        @CustomType.Setter
        public Builder alias(@Nullable String alias) {
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder apmQuery(@Nullable DashboardWidgetQueryTableDefinitionRequestApmQuery apmQuery) {
            this.apmQuery = apmQuery;
            return this;
        }
        @CustomType.Setter
        public Builder apmStatsQuery(@Nullable DashboardWidgetQueryTableDefinitionRequestApmStatsQuery apmStatsQuery) {
            this.apmStatsQuery = apmStatsQuery;
            return this;
        }
        @CustomType.Setter
        public Builder cellDisplayModes(@Nullable List<String> cellDisplayModes) {
            this.cellDisplayModes = cellDisplayModes;
            return this;
        }
        public Builder cellDisplayModes(String... cellDisplayModes) {
            return cellDisplayModes(List.of(cellDisplayModes));
        }
        @CustomType.Setter
        public Builder conditionalFormats(@Nullable List<DashboardWidgetQueryTableDefinitionRequestConditionalFormat> conditionalFormats) {
            this.conditionalFormats = conditionalFormats;
            return this;
        }
        public Builder conditionalFormats(DashboardWidgetQueryTableDefinitionRequestConditionalFormat... conditionalFormats) {
            return conditionalFormats(List.of(conditionalFormats));
        }
        @CustomType.Setter
        public Builder formulas(@Nullable List<DashboardWidgetQueryTableDefinitionRequestFormula> formulas) {
            this.formulas = formulas;
            return this;
        }
        public Builder formulas(DashboardWidgetQueryTableDefinitionRequestFormula... formulas) {
            return formulas(List.of(formulas));
        }
        @CustomType.Setter
        public Builder limit(@Nullable Integer limit) {
            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder logQuery(@Nullable DashboardWidgetQueryTableDefinitionRequestLogQuery logQuery) {
            this.logQuery = logQuery;
            return this;
        }
        @CustomType.Setter
        public Builder order(@Nullable String order) {
            this.order = order;
            return this;
        }
        @CustomType.Setter
        public Builder processQuery(@Nullable DashboardWidgetQueryTableDefinitionRequestProcessQuery processQuery) {
            this.processQuery = processQuery;
            return this;
        }
        @CustomType.Setter
        public Builder q(@Nullable String q) {
            this.q = q;
            return this;
        }
        @CustomType.Setter
        public Builder queries(@Nullable List<DashboardWidgetQueryTableDefinitionRequestQuery> queries) {
            this.queries = queries;
            return this;
        }
        public Builder queries(DashboardWidgetQueryTableDefinitionRequestQuery... queries) {
            return queries(List.of(queries));
        }
        @CustomType.Setter
        public Builder rumQuery(@Nullable DashboardWidgetQueryTableDefinitionRequestRumQuery rumQuery) {
            this.rumQuery = rumQuery;
            return this;
        }
        @CustomType.Setter
        public Builder securityQuery(@Nullable DashboardWidgetQueryTableDefinitionRequestSecurityQuery securityQuery) {
            this.securityQuery = securityQuery;
            return this;
        }
        public DashboardWidgetQueryTableDefinitionRequest build() {
            final var o = new DashboardWidgetQueryTableDefinitionRequest();
            o.aggregator = aggregator;
            o.alias = alias;
            o.apmQuery = apmQuery;
            o.apmStatsQuery = apmStatsQuery;
            o.cellDisplayModes = cellDisplayModes;
            o.conditionalFormats = conditionalFormats;
            o.formulas = formulas;
            o.limit = limit;
            o.logQuery = logQuery;
            o.order = order;
            o.processQuery = processQuery;
            o.q = q;
            o.queries = queries;
            o.rumQuery = rumQuery;
            o.securityQuery = securityQuery;
            return o;
        }
    }
}
