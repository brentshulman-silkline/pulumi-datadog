// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs Empty = new DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs();

    @Import(name="dataSource", required=true)
    private Output<String> dataSource;

    public Output<String> dataSource() {
        return this.dataSource;
    }

    @Import(name="env", required=true)
    private Output<String> env;

    public Output<String> env() {
        return this.env;
    }

    @Import(name="groupBies")
    private @Nullable Output<List<String>> groupBies;

    public Optional<Output<List<String>>> groupBies() {
        return Optional.ofNullable(this.groupBies);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="operationName")
    private @Nullable Output<String> operationName;

    public Optional<Output<String>> operationName() {
        return Optional.ofNullable(this.operationName);
    }

    @Import(name="primaryTagName")
    private @Nullable Output<String> primaryTagName;

    public Optional<Output<String>> primaryTagName() {
        return Optional.ofNullable(this.primaryTagName);
    }

    @Import(name="primaryTagValue")
    private @Nullable Output<String> primaryTagValue;

    public Optional<Output<String>> primaryTagValue() {
        return Optional.ofNullable(this.primaryTagValue);
    }

    @Import(name="resourceName")
    private @Nullable Output<String> resourceName;

    public Optional<Output<String>> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    @Import(name="service", required=true)
    private Output<String> service;

    public Output<String> service() {
        return this.service;
    }

    @Import(name="stat", required=true)
    private Output<String> stat;

    public Output<String> stat() {
        return this.stat;
    }

    private DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs() {}

    private DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs(DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs $) {
        this.dataSource = $.dataSource;
        this.env = $.env;
        this.groupBies = $.groupBies;
        this.name = $.name;
        this.operationName = $.operationName;
        this.primaryTagName = $.primaryTagName;
        this.primaryTagValue = $.primaryTagValue;
        this.resourceName = $.resourceName;
        this.service = $.service;
        this.stat = $.stat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs $;

        public Builder() {
            $ = new DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs();
        }

        public Builder(DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs defaults) {
            $ = new DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataSource(Output<String> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        public Builder dataSource(String dataSource) {
            return dataSource(Output.of(dataSource));
        }

        public Builder env(Output<String> env) {
            $.env = env;
            return this;
        }

        public Builder env(String env) {
            return env(Output.of(env));
        }

        public Builder groupBies(@Nullable Output<List<String>> groupBies) {
            $.groupBies = groupBies;
            return this;
        }

        public Builder groupBies(List<String> groupBies) {
            return groupBies(Output.of(groupBies));
        }

        public Builder groupBies(String... groupBies) {
            return groupBies(List.of(groupBies));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder operationName(@Nullable Output<String> operationName) {
            $.operationName = operationName;
            return this;
        }

        public Builder operationName(String operationName) {
            return operationName(Output.of(operationName));
        }

        public Builder primaryTagName(@Nullable Output<String> primaryTagName) {
            $.primaryTagName = primaryTagName;
            return this;
        }

        public Builder primaryTagName(String primaryTagName) {
            return primaryTagName(Output.of(primaryTagName));
        }

        public Builder primaryTagValue(@Nullable Output<String> primaryTagValue) {
            $.primaryTagValue = primaryTagValue;
            return this;
        }

        public Builder primaryTagValue(String primaryTagValue) {
            return primaryTagValue(Output.of(primaryTagValue));
        }

        public Builder resourceName(@Nullable Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public Builder stat(Output<String> stat) {
            $.stat = stat;
            return this;
        }

        public Builder stat(String stat) {
            return stat(Output.of(stat));
        }

        public DashboardWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs build() {
            $.dataSource = Objects.requireNonNull($.dataSource, "expected parameter 'dataSource' to be non-null");
            $.env = Objects.requireNonNull($.env, "expected parameter 'env' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            $.stat = Objects.requireNonNull($.stat, "expected parameter 'stat' to be non-null");
            return $;
        }
    }

}
