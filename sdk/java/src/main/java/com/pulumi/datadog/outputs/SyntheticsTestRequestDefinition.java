// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SyntheticsTestRequestDefinition {
    private @Nullable String body;
    private @Nullable List<String> certificateDomains;
    private @Nullable String dnsServer;
    private @Nullable Integer dnsServerPort;
    private @Nullable String host;
    private @Nullable String message;
    private @Nullable String method;
    private @Nullable Boolean noSavingResponseBody;
    private @Nullable Integer numberOfPackets;
    private @Nullable Integer port;
    private @Nullable String servername;
    private @Nullable String service;
    private @Nullable Boolean shouldTrackHops;
    private @Nullable Integer timeout;
    private @Nullable String url;

    private SyntheticsTestRequestDefinition() {}
    public Optional<String> body() {
        return Optional.ofNullable(this.body);
    }
    public List<String> certificateDomains() {
        return this.certificateDomains == null ? List.of() : this.certificateDomains;
    }
    public Optional<String> dnsServer() {
        return Optional.ofNullable(this.dnsServer);
    }
    public Optional<Integer> dnsServerPort() {
        return Optional.ofNullable(this.dnsServerPort);
    }
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    public Optional<Boolean> noSavingResponseBody() {
        return Optional.ofNullable(this.noSavingResponseBody);
    }
    public Optional<Integer> numberOfPackets() {
        return Optional.ofNullable(this.numberOfPackets);
    }
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    public Optional<String> servername() {
        return Optional.ofNullable(this.servername);
    }
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }
    public Optional<Boolean> shouldTrackHops() {
        return Optional.ofNullable(this.shouldTrackHops);
    }
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SyntheticsTestRequestDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String body;
        private @Nullable List<String> certificateDomains;
        private @Nullable String dnsServer;
        private @Nullable Integer dnsServerPort;
        private @Nullable String host;
        private @Nullable String message;
        private @Nullable String method;
        private @Nullable Boolean noSavingResponseBody;
        private @Nullable Integer numberOfPackets;
        private @Nullable Integer port;
        private @Nullable String servername;
        private @Nullable String service;
        private @Nullable Boolean shouldTrackHops;
        private @Nullable Integer timeout;
        private @Nullable String url;
        public Builder() {}
        public Builder(SyntheticsTestRequestDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.body = defaults.body;
    	      this.certificateDomains = defaults.certificateDomains;
    	      this.dnsServer = defaults.dnsServer;
    	      this.dnsServerPort = defaults.dnsServerPort;
    	      this.host = defaults.host;
    	      this.message = defaults.message;
    	      this.method = defaults.method;
    	      this.noSavingResponseBody = defaults.noSavingResponseBody;
    	      this.numberOfPackets = defaults.numberOfPackets;
    	      this.port = defaults.port;
    	      this.servername = defaults.servername;
    	      this.service = defaults.service;
    	      this.shouldTrackHops = defaults.shouldTrackHops;
    	      this.timeout = defaults.timeout;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder body(@Nullable String body) {
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder certificateDomains(@Nullable List<String> certificateDomains) {
            this.certificateDomains = certificateDomains;
            return this;
        }
        public Builder certificateDomains(String... certificateDomains) {
            return certificateDomains(List.of(certificateDomains));
        }
        @CustomType.Setter
        public Builder dnsServer(@Nullable String dnsServer) {
            this.dnsServer = dnsServer;
            return this;
        }
        @CustomType.Setter
        public Builder dnsServerPort(@Nullable Integer dnsServerPort) {
            this.dnsServerPort = dnsServerPort;
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder message(@Nullable String message) {
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder method(@Nullable String method) {
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder noSavingResponseBody(@Nullable Boolean noSavingResponseBody) {
            this.noSavingResponseBody = noSavingResponseBody;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfPackets(@Nullable Integer numberOfPackets) {
            this.numberOfPackets = numberOfPackets;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder servername(@Nullable String servername) {
            this.servername = servername;
            return this;
        }
        @CustomType.Setter
        public Builder service(@Nullable String service) {
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder shouldTrackHops(@Nullable Boolean shouldTrackHops) {
            this.shouldTrackHops = shouldTrackHops;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public SyntheticsTestRequestDefinition build() {
            final var o = new SyntheticsTestRequestDefinition();
            o.body = body;
            o.certificateDomains = certificateDomains;
            o.dnsServer = dnsServer;
            o.dnsServerPort = dnsServerPort;
            o.host = host;
            o.message = message;
            o.method = method;
            o.noSavingResponseBody = noSavingResponseBody;
            o.numberOfPackets = numberOfPackets;
            o.port = port;
            o.servername = servername;
            o.service = service;
            o.shouldTrackHops = shouldTrackHops;
            o.timeout = timeout;
            o.url = url;
            return o;
        }
    }
}
