// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinitionWidgetGeomapDefinition {
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink> customLinks;
    private @Nullable String liveSpan;
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest> requests;
    private @Nullable DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle style;
    private @Nullable String title;
    private @Nullable String titleAlign;
    private @Nullable String titleSize;
    private DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView view;

    private DashboardWidgetGroupDefinitionWidgetGeomapDefinition() {}
    public List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink> customLinks() {
        return this.customLinks == null ? List.of() : this.customLinks;
    }
    public Optional<String> liveSpan() {
        return Optional.ofNullable(this.liveSpan);
    }
    public List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest> requests() {
        return this.requests == null ? List.of() : this.requests;
    }
    public Optional<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle> style() {
        return Optional.ofNullable(this.style);
    }
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public Optional<String> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }
    public Optional<String> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }
    public DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView view() {
        return this.view;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidgetGeomapDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink> customLinks;
        private @Nullable String liveSpan;
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest> requests;
        private @Nullable DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle style;
        private @Nullable String title;
        private @Nullable String titleAlign;
        private @Nullable String titleSize;
        private DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView view;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidgetGeomapDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customLinks = defaults.customLinks;
    	      this.liveSpan = defaults.liveSpan;
    	      this.requests = defaults.requests;
    	      this.style = defaults.style;
    	      this.title = defaults.title;
    	      this.titleAlign = defaults.titleAlign;
    	      this.titleSize = defaults.titleSize;
    	      this.view = defaults.view;
        }

        @CustomType.Setter
        public Builder customLinks(@Nullable List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink> customLinks) {
            this.customLinks = customLinks;
            return this;
        }
        public Builder customLinks(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink... customLinks) {
            return customLinks(List.of(customLinks));
        }
        @CustomType.Setter
        public Builder liveSpan(@Nullable String liveSpan) {
            this.liveSpan = liveSpan;
            return this;
        }
        @CustomType.Setter
        public Builder requests(@Nullable List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest> requests) {
            this.requests = requests;
            return this;
        }
        public Builder requests(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest... requests) {
            return requests(List.of(requests));
        }
        @CustomType.Setter
        public Builder style(@Nullable DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle style) {
            this.style = style;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder titleAlign(@Nullable String titleAlign) {
            this.titleAlign = titleAlign;
            return this;
        }
        @CustomType.Setter
        public Builder titleSize(@Nullable String titleSize) {
            this.titleSize = titleSize;
            return this;
        }
        @CustomType.Setter
        public Builder view(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView view) {
            this.view = Objects.requireNonNull(view);
            return this;
        }
        public DashboardWidgetGroupDefinitionWidgetGeomapDefinition build() {
            final var o = new DashboardWidgetGroupDefinitionWidgetGeomapDefinition();
            o.customLinks = customLinks;
            o.liveSpan = liveSpan;
            o.requests = requests;
            o.style = style;
            o.title = title;
            o.titleAlign = titleAlign;
            o.titleSize = titleSize;
            o.view = view;
            return o;
        }
    }
}
