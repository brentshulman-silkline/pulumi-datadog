// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetWidgetLayoutArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetWidgetLayoutArgs Empty = new DashboardWidgetWidgetLayoutArgs();

    @Import(name="height", required=true)
    private Output<Integer> height;

    public Output<Integer> height() {
        return this.height;
    }

    @Import(name="isColumnBreak")
    private @Nullable Output<Boolean> isColumnBreak;

    public Optional<Output<Boolean>> isColumnBreak() {
        return Optional.ofNullable(this.isColumnBreak);
    }

    @Import(name="width", required=true)
    private Output<Integer> width;

    public Output<Integer> width() {
        return this.width;
    }

    @Import(name="x", required=true)
    private Output<Integer> x;

    public Output<Integer> x() {
        return this.x;
    }

    @Import(name="y", required=true)
    private Output<Integer> y;

    public Output<Integer> y() {
        return this.y;
    }

    private DashboardWidgetWidgetLayoutArgs() {}

    private DashboardWidgetWidgetLayoutArgs(DashboardWidgetWidgetLayoutArgs $) {
        this.height = $.height;
        this.isColumnBreak = $.isColumnBreak;
        this.width = $.width;
        this.x = $.x;
        this.y = $.y;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetWidgetLayoutArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetWidgetLayoutArgs $;

        public Builder() {
            $ = new DashboardWidgetWidgetLayoutArgs();
        }

        public Builder(DashboardWidgetWidgetLayoutArgs defaults) {
            $ = new DashboardWidgetWidgetLayoutArgs(Objects.requireNonNull(defaults));
        }

        public Builder height(Output<Integer> height) {
            $.height = height;
            return this;
        }

        public Builder height(Integer height) {
            return height(Output.of(height));
        }

        public Builder isColumnBreak(@Nullable Output<Boolean> isColumnBreak) {
            $.isColumnBreak = isColumnBreak;
            return this;
        }

        public Builder isColumnBreak(Boolean isColumnBreak) {
            return isColumnBreak(Output.of(isColumnBreak));
        }

        public Builder width(Output<Integer> width) {
            $.width = width;
            return this;
        }

        public Builder width(Integer width) {
            return width(Output.of(width));
        }

        public Builder x(Output<Integer> x) {
            $.x = x;
            return this;
        }

        public Builder x(Integer x) {
            return x(Output.of(x));
        }

        public Builder y(Output<Integer> y) {
            $.y = y;
            return this;
        }

        public Builder y(Integer y) {
            return y(Output.of(y));
        }

        public DashboardWidgetWidgetLayoutArgs build() {
            $.height = Objects.requireNonNull($.height, "expected parameter 'height' to be non-null");
            $.width = Objects.requireNonNull($.width, "expected parameter 'width' to be non-null");
            $.x = Objects.requireNonNull($.x, "expected parameter 'x' to be non-null");
            $.y = Objects.requireNonNull($.y, "expected parameter 'y' to be non-null");
            return $;
        }
    }

}
