// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LogsArchiveGcsArchiveArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsArchiveGcsArchiveArgs Empty = new LogsArchiveGcsArchiveArgs();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="clientEmail", required=true)
    private Output<String> clientEmail;

    public Output<String> clientEmail() {
        return this.clientEmail;
    }

    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    @Import(name="projectId", required=true)
    private Output<String> projectId;

    public Output<String> projectId() {
        return this.projectId;
    }

    private LogsArchiveGcsArchiveArgs() {}

    private LogsArchiveGcsArchiveArgs(LogsArchiveGcsArchiveArgs $) {
        this.bucket = $.bucket;
        this.clientEmail = $.clientEmail;
        this.path = $.path;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsArchiveGcsArchiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsArchiveGcsArchiveArgs $;

        public Builder() {
            $ = new LogsArchiveGcsArchiveArgs();
        }

        public Builder(LogsArchiveGcsArchiveArgs defaults) {
            $ = new LogsArchiveGcsArchiveArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder clientEmail(Output<String> clientEmail) {
            $.clientEmail = clientEmail;
            return this;
        }

        public Builder clientEmail(String clientEmail) {
            return clientEmail(Output.of(clientEmail));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public LogsArchiveGcsArchiveArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.clientEmail = Objects.requireNonNull($.clientEmail, "expected parameter 'clientEmail' to be non-null");
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            return $;
        }
    }

}
