// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityMonitoringRuleOptionsNewValueOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityMonitoringRuleOptionsNewValueOptionsArgs Empty = new SecurityMonitoringRuleOptionsNewValueOptionsArgs();

    @Import(name="forgetAfter", required=true)
    private Output<Integer> forgetAfter;

    public Output<Integer> forgetAfter() {
        return this.forgetAfter;
    }

    @Import(name="learningDuration")
    private @Nullable Output<Integer> learningDuration;

    public Optional<Output<Integer>> learningDuration() {
        return Optional.ofNullable(this.learningDuration);
    }

    @Import(name="learningMethod")
    private @Nullable Output<String> learningMethod;

    public Optional<Output<String>> learningMethod() {
        return Optional.ofNullable(this.learningMethod);
    }

    @Import(name="learningThreshold")
    private @Nullable Output<Integer> learningThreshold;

    public Optional<Output<Integer>> learningThreshold() {
        return Optional.ofNullable(this.learningThreshold);
    }

    private SecurityMonitoringRuleOptionsNewValueOptionsArgs() {}

    private SecurityMonitoringRuleOptionsNewValueOptionsArgs(SecurityMonitoringRuleOptionsNewValueOptionsArgs $) {
        this.forgetAfter = $.forgetAfter;
        this.learningDuration = $.learningDuration;
        this.learningMethod = $.learningMethod;
        this.learningThreshold = $.learningThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityMonitoringRuleOptionsNewValueOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityMonitoringRuleOptionsNewValueOptionsArgs $;

        public Builder() {
            $ = new SecurityMonitoringRuleOptionsNewValueOptionsArgs();
        }

        public Builder(SecurityMonitoringRuleOptionsNewValueOptionsArgs defaults) {
            $ = new SecurityMonitoringRuleOptionsNewValueOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder forgetAfter(Output<Integer> forgetAfter) {
            $.forgetAfter = forgetAfter;
            return this;
        }

        public Builder forgetAfter(Integer forgetAfter) {
            return forgetAfter(Output.of(forgetAfter));
        }

        public Builder learningDuration(@Nullable Output<Integer> learningDuration) {
            $.learningDuration = learningDuration;
            return this;
        }

        public Builder learningDuration(Integer learningDuration) {
            return learningDuration(Output.of(learningDuration));
        }

        public Builder learningMethod(@Nullable Output<String> learningMethod) {
            $.learningMethod = learningMethod;
            return this;
        }

        public Builder learningMethod(String learningMethod) {
            return learningMethod(Output.of(learningMethod));
        }

        public Builder learningThreshold(@Nullable Output<Integer> learningThreshold) {
            $.learningThreshold = learningThreshold;
            return this;
        }

        public Builder learningThreshold(Integer learningThreshold) {
            return learningThreshold(Output.of(learningThreshold));
        }

        public SecurityMonitoringRuleOptionsNewValueOptionsArgs build() {
            $.forgetAfter = Objects.requireNonNull($.forgetAfter, "expected parameter 'forgetAfter' to be non-null");
            return $;
        }
    }

}
