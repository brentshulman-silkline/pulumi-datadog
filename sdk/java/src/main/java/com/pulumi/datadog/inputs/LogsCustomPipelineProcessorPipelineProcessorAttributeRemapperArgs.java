// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs Empty = new LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs();

    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="overrideOnConflict")
    private @Nullable Output<Boolean> overrideOnConflict;

    public Optional<Output<Boolean>> overrideOnConflict() {
        return Optional.ofNullable(this.overrideOnConflict);
    }

    @Import(name="preserveSource")
    private @Nullable Output<Boolean> preserveSource;

    public Optional<Output<Boolean>> preserveSource() {
        return Optional.ofNullable(this.preserveSource);
    }

    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    public Output<String> sourceType() {
        return this.sourceType;
    }

    @Import(name="sources", required=true)
    private Output<List<String>> sources;

    public Output<List<String>> sources() {
        return this.sources;
    }

    @Import(name="target", required=true)
    private Output<String> target;

    public Output<String> target() {
        return this.target;
    }

    @Import(name="targetFormat")
    private @Nullable Output<String> targetFormat;

    public Optional<Output<String>> targetFormat() {
        return Optional.ofNullable(this.targetFormat);
    }

    @Import(name="targetType", required=true)
    private Output<String> targetType;

    public Output<String> targetType() {
        return this.targetType;
    }

    private LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs() {}

    private LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs(LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs $) {
        this.isEnabled = $.isEnabled;
        this.name = $.name;
        this.overrideOnConflict = $.overrideOnConflict;
        this.preserveSource = $.preserveSource;
        this.sourceType = $.sourceType;
        this.sources = $.sources;
        this.target = $.target;
        this.targetFormat = $.targetFormat;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs $;

        public Builder() {
            $ = new LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs();
        }

        public Builder(LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs defaults) {
            $ = new LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs(Objects.requireNonNull(defaults));
        }

        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder overrideOnConflict(@Nullable Output<Boolean> overrideOnConflict) {
            $.overrideOnConflict = overrideOnConflict;
            return this;
        }

        public Builder overrideOnConflict(Boolean overrideOnConflict) {
            return overrideOnConflict(Output.of(overrideOnConflict));
        }

        public Builder preserveSource(@Nullable Output<Boolean> preserveSource) {
            $.preserveSource = preserveSource;
            return this;
        }

        public Builder preserveSource(Boolean preserveSource) {
            return preserveSource(Output.of(preserveSource));
        }

        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public Builder sources(Output<List<String>> sources) {
            $.sources = sources;
            return this;
        }

        public Builder sources(List<String> sources) {
            return sources(Output.of(sources));
        }

        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }

        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public Builder targetFormat(@Nullable Output<String> targetFormat) {
            $.targetFormat = targetFormat;
            return this;
        }

        public Builder targetFormat(String targetFormat) {
            return targetFormat(Output.of(targetFormat));
        }

        public Builder targetType(Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public LogsCustomPipelineProcessorPipelineProcessorAttributeRemapperArgs build() {
            $.sourceType = Objects.requireNonNull($.sourceType, "expected parameter 'sourceType' to be non-null");
            $.sources = Objects.requireNonNull($.sources, "expected parameter 'sources' to be non-null");
            $.target = Objects.requireNonNull($.target, "expected parameter 'target' to be non-null");
            $.targetType = Objects.requireNonNull($.targetType, "expected parameter 'targetType' to be non-null");
            return $;
        }
    }

}
