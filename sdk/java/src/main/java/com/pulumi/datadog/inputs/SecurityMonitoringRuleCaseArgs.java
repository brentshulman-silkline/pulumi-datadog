// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityMonitoringRuleCaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityMonitoringRuleCaseArgs Empty = new SecurityMonitoringRuleCaseArgs();

    @Import(name="condition")
    private @Nullable Output<String> condition;

    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notifications")
    private @Nullable Output<List<String>> notifications;

    public Optional<Output<List<String>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    @Import(name="status", required=true)
    private Output<String> status;

    public Output<String> status() {
        return this.status;
    }

    private SecurityMonitoringRuleCaseArgs() {}

    private SecurityMonitoringRuleCaseArgs(SecurityMonitoringRuleCaseArgs $) {
        this.condition = $.condition;
        this.name = $.name;
        this.notifications = $.notifications;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityMonitoringRuleCaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityMonitoringRuleCaseArgs $;

        public Builder() {
            $ = new SecurityMonitoringRuleCaseArgs();
        }

        public Builder(SecurityMonitoringRuleCaseArgs defaults) {
            $ = new SecurityMonitoringRuleCaseArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notifications(@Nullable Output<List<String>> notifications) {
            $.notifications = notifications;
            return this;
        }

        public Builder notifications(List<String> notifications) {
            return notifications(Output.of(notifications));
        }

        public Builder notifications(String... notifications) {
            return notifications(List.of(notifications));
        }

        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        public Builder status(String status) {
            return status(Output.of(status));
        }

        public SecurityMonitoringRuleCaseArgs build() {
            $.status = Objects.requireNonNull($.status, "expected parameter 'status' to be non-null");
            return $;
        }
    }

}
