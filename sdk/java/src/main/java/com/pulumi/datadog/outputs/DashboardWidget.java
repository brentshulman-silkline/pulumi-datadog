// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetAlertGraphDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetAlertValueDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetChangeDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetCheckStatusDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetDistributionDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetEventStreamDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetEventTimelineDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetFreeTextDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGeomapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetHeatmapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetHostmapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetIframeDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetImageDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetListStreamDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetLogStreamDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetManageStatusDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetNoteDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetQueryTableDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetQueryValueDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetScatterplotDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetServiceLevelObjectiveDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetServicemapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetTimeseriesDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetToplistDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetTopologyMapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetTraceServiceDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetTreemapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetWidgetLayout;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidget {
    private @Nullable DashboardWidgetAlertGraphDefinition alertGraphDefinition;
    private @Nullable DashboardWidgetAlertValueDefinition alertValueDefinition;
    private @Nullable DashboardWidgetChangeDefinition changeDefinition;
    private @Nullable DashboardWidgetCheckStatusDefinition checkStatusDefinition;
    private @Nullable DashboardWidgetDistributionDefinition distributionDefinition;
    private @Nullable DashboardWidgetEventStreamDefinition eventStreamDefinition;
    private @Nullable DashboardWidgetEventTimelineDefinition eventTimelineDefinition;
    private @Nullable DashboardWidgetFreeTextDefinition freeTextDefinition;
    private @Nullable DashboardWidgetGeomapDefinition geomapDefinition;
    private @Nullable DashboardWidgetGroupDefinition groupDefinition;
    private @Nullable DashboardWidgetHeatmapDefinition heatmapDefinition;
    private @Nullable DashboardWidgetHostmapDefinition hostmapDefinition;
    private @Nullable Integer id;
    private @Nullable DashboardWidgetIframeDefinition iframeDefinition;
    private @Nullable DashboardWidgetImageDefinition imageDefinition;
    private @Nullable DashboardWidgetListStreamDefinition listStreamDefinition;
    private @Nullable DashboardWidgetLogStreamDefinition logStreamDefinition;
    private @Nullable DashboardWidgetManageStatusDefinition manageStatusDefinition;
    private @Nullable DashboardWidgetNoteDefinition noteDefinition;
    private @Nullable DashboardWidgetQueryTableDefinition queryTableDefinition;
    private @Nullable DashboardWidgetQueryValueDefinition queryValueDefinition;
    private @Nullable DashboardWidgetScatterplotDefinition scatterplotDefinition;
    private @Nullable DashboardWidgetServiceLevelObjectiveDefinition serviceLevelObjectiveDefinition;
    private @Nullable DashboardWidgetServicemapDefinition servicemapDefinition;
    private @Nullable DashboardWidgetSunburstDefinition sunburstDefinition;
    private @Nullable DashboardWidgetTimeseriesDefinition timeseriesDefinition;
    private @Nullable DashboardWidgetToplistDefinition toplistDefinition;
    private @Nullable DashboardWidgetTopologyMapDefinition topologyMapDefinition;
    private @Nullable DashboardWidgetTraceServiceDefinition traceServiceDefinition;
    private @Nullable DashboardWidgetTreemapDefinition treemapDefinition;
    private @Nullable DashboardWidgetWidgetLayout widgetLayout;

    private DashboardWidget() {}
    public Optional<DashboardWidgetAlertGraphDefinition> alertGraphDefinition() {
        return Optional.ofNullable(this.alertGraphDefinition);
    }
    public Optional<DashboardWidgetAlertValueDefinition> alertValueDefinition() {
        return Optional.ofNullable(this.alertValueDefinition);
    }
    public Optional<DashboardWidgetChangeDefinition> changeDefinition() {
        return Optional.ofNullable(this.changeDefinition);
    }
    public Optional<DashboardWidgetCheckStatusDefinition> checkStatusDefinition() {
        return Optional.ofNullable(this.checkStatusDefinition);
    }
    public Optional<DashboardWidgetDistributionDefinition> distributionDefinition() {
        return Optional.ofNullable(this.distributionDefinition);
    }
    public Optional<DashboardWidgetEventStreamDefinition> eventStreamDefinition() {
        return Optional.ofNullable(this.eventStreamDefinition);
    }
    public Optional<DashboardWidgetEventTimelineDefinition> eventTimelineDefinition() {
        return Optional.ofNullable(this.eventTimelineDefinition);
    }
    public Optional<DashboardWidgetFreeTextDefinition> freeTextDefinition() {
        return Optional.ofNullable(this.freeTextDefinition);
    }
    public Optional<DashboardWidgetGeomapDefinition> geomapDefinition() {
        return Optional.ofNullable(this.geomapDefinition);
    }
    public Optional<DashboardWidgetGroupDefinition> groupDefinition() {
        return Optional.ofNullable(this.groupDefinition);
    }
    public Optional<DashboardWidgetHeatmapDefinition> heatmapDefinition() {
        return Optional.ofNullable(this.heatmapDefinition);
    }
    public Optional<DashboardWidgetHostmapDefinition> hostmapDefinition() {
        return Optional.ofNullable(this.hostmapDefinition);
    }
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<DashboardWidgetIframeDefinition> iframeDefinition() {
        return Optional.ofNullable(this.iframeDefinition);
    }
    public Optional<DashboardWidgetImageDefinition> imageDefinition() {
        return Optional.ofNullable(this.imageDefinition);
    }
    public Optional<DashboardWidgetListStreamDefinition> listStreamDefinition() {
        return Optional.ofNullable(this.listStreamDefinition);
    }
    public Optional<DashboardWidgetLogStreamDefinition> logStreamDefinition() {
        return Optional.ofNullable(this.logStreamDefinition);
    }
    public Optional<DashboardWidgetManageStatusDefinition> manageStatusDefinition() {
        return Optional.ofNullable(this.manageStatusDefinition);
    }
    public Optional<DashboardWidgetNoteDefinition> noteDefinition() {
        return Optional.ofNullable(this.noteDefinition);
    }
    public Optional<DashboardWidgetQueryTableDefinition> queryTableDefinition() {
        return Optional.ofNullable(this.queryTableDefinition);
    }
    public Optional<DashboardWidgetQueryValueDefinition> queryValueDefinition() {
        return Optional.ofNullable(this.queryValueDefinition);
    }
    public Optional<DashboardWidgetScatterplotDefinition> scatterplotDefinition() {
        return Optional.ofNullable(this.scatterplotDefinition);
    }
    public Optional<DashboardWidgetServiceLevelObjectiveDefinition> serviceLevelObjectiveDefinition() {
        return Optional.ofNullable(this.serviceLevelObjectiveDefinition);
    }
    public Optional<DashboardWidgetServicemapDefinition> servicemapDefinition() {
        return Optional.ofNullable(this.servicemapDefinition);
    }
    public Optional<DashboardWidgetSunburstDefinition> sunburstDefinition() {
        return Optional.ofNullable(this.sunburstDefinition);
    }
    public Optional<DashboardWidgetTimeseriesDefinition> timeseriesDefinition() {
        return Optional.ofNullable(this.timeseriesDefinition);
    }
    public Optional<DashboardWidgetToplistDefinition> toplistDefinition() {
        return Optional.ofNullable(this.toplistDefinition);
    }
    public Optional<DashboardWidgetTopologyMapDefinition> topologyMapDefinition() {
        return Optional.ofNullable(this.topologyMapDefinition);
    }
    public Optional<DashboardWidgetTraceServiceDefinition> traceServiceDefinition() {
        return Optional.ofNullable(this.traceServiceDefinition);
    }
    public Optional<DashboardWidgetTreemapDefinition> treemapDefinition() {
        return Optional.ofNullable(this.treemapDefinition);
    }
    public Optional<DashboardWidgetWidgetLayout> widgetLayout() {
        return Optional.ofNullable(this.widgetLayout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DashboardWidgetAlertGraphDefinition alertGraphDefinition;
        private @Nullable DashboardWidgetAlertValueDefinition alertValueDefinition;
        private @Nullable DashboardWidgetChangeDefinition changeDefinition;
        private @Nullable DashboardWidgetCheckStatusDefinition checkStatusDefinition;
        private @Nullable DashboardWidgetDistributionDefinition distributionDefinition;
        private @Nullable DashboardWidgetEventStreamDefinition eventStreamDefinition;
        private @Nullable DashboardWidgetEventTimelineDefinition eventTimelineDefinition;
        private @Nullable DashboardWidgetFreeTextDefinition freeTextDefinition;
        private @Nullable DashboardWidgetGeomapDefinition geomapDefinition;
        private @Nullable DashboardWidgetGroupDefinition groupDefinition;
        private @Nullable DashboardWidgetHeatmapDefinition heatmapDefinition;
        private @Nullable DashboardWidgetHostmapDefinition hostmapDefinition;
        private @Nullable Integer id;
        private @Nullable DashboardWidgetIframeDefinition iframeDefinition;
        private @Nullable DashboardWidgetImageDefinition imageDefinition;
        private @Nullable DashboardWidgetListStreamDefinition listStreamDefinition;
        private @Nullable DashboardWidgetLogStreamDefinition logStreamDefinition;
        private @Nullable DashboardWidgetManageStatusDefinition manageStatusDefinition;
        private @Nullable DashboardWidgetNoteDefinition noteDefinition;
        private @Nullable DashboardWidgetQueryTableDefinition queryTableDefinition;
        private @Nullable DashboardWidgetQueryValueDefinition queryValueDefinition;
        private @Nullable DashboardWidgetScatterplotDefinition scatterplotDefinition;
        private @Nullable DashboardWidgetServiceLevelObjectiveDefinition serviceLevelObjectiveDefinition;
        private @Nullable DashboardWidgetServicemapDefinition servicemapDefinition;
        private @Nullable DashboardWidgetSunburstDefinition sunburstDefinition;
        private @Nullable DashboardWidgetTimeseriesDefinition timeseriesDefinition;
        private @Nullable DashboardWidgetToplistDefinition toplistDefinition;
        private @Nullable DashboardWidgetTopologyMapDefinition topologyMapDefinition;
        private @Nullable DashboardWidgetTraceServiceDefinition traceServiceDefinition;
        private @Nullable DashboardWidgetTreemapDefinition treemapDefinition;
        private @Nullable DashboardWidgetWidgetLayout widgetLayout;
        public Builder() {}
        public Builder(DashboardWidget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertGraphDefinition = defaults.alertGraphDefinition;
    	      this.alertValueDefinition = defaults.alertValueDefinition;
    	      this.changeDefinition = defaults.changeDefinition;
    	      this.checkStatusDefinition = defaults.checkStatusDefinition;
    	      this.distributionDefinition = defaults.distributionDefinition;
    	      this.eventStreamDefinition = defaults.eventStreamDefinition;
    	      this.eventTimelineDefinition = defaults.eventTimelineDefinition;
    	      this.freeTextDefinition = defaults.freeTextDefinition;
    	      this.geomapDefinition = defaults.geomapDefinition;
    	      this.groupDefinition = defaults.groupDefinition;
    	      this.heatmapDefinition = defaults.heatmapDefinition;
    	      this.hostmapDefinition = defaults.hostmapDefinition;
    	      this.id = defaults.id;
    	      this.iframeDefinition = defaults.iframeDefinition;
    	      this.imageDefinition = defaults.imageDefinition;
    	      this.listStreamDefinition = defaults.listStreamDefinition;
    	      this.logStreamDefinition = defaults.logStreamDefinition;
    	      this.manageStatusDefinition = defaults.manageStatusDefinition;
    	      this.noteDefinition = defaults.noteDefinition;
    	      this.queryTableDefinition = defaults.queryTableDefinition;
    	      this.queryValueDefinition = defaults.queryValueDefinition;
    	      this.scatterplotDefinition = defaults.scatterplotDefinition;
    	      this.serviceLevelObjectiveDefinition = defaults.serviceLevelObjectiveDefinition;
    	      this.servicemapDefinition = defaults.servicemapDefinition;
    	      this.sunburstDefinition = defaults.sunburstDefinition;
    	      this.timeseriesDefinition = defaults.timeseriesDefinition;
    	      this.toplistDefinition = defaults.toplistDefinition;
    	      this.topologyMapDefinition = defaults.topologyMapDefinition;
    	      this.traceServiceDefinition = defaults.traceServiceDefinition;
    	      this.treemapDefinition = defaults.treemapDefinition;
    	      this.widgetLayout = defaults.widgetLayout;
        }

        @CustomType.Setter
        public Builder alertGraphDefinition(@Nullable DashboardWidgetAlertGraphDefinition alertGraphDefinition) {
            this.alertGraphDefinition = alertGraphDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder alertValueDefinition(@Nullable DashboardWidgetAlertValueDefinition alertValueDefinition) {
            this.alertValueDefinition = alertValueDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder changeDefinition(@Nullable DashboardWidgetChangeDefinition changeDefinition) {
            this.changeDefinition = changeDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder checkStatusDefinition(@Nullable DashboardWidgetCheckStatusDefinition checkStatusDefinition) {
            this.checkStatusDefinition = checkStatusDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder distributionDefinition(@Nullable DashboardWidgetDistributionDefinition distributionDefinition) {
            this.distributionDefinition = distributionDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder eventStreamDefinition(@Nullable DashboardWidgetEventStreamDefinition eventStreamDefinition) {
            this.eventStreamDefinition = eventStreamDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder eventTimelineDefinition(@Nullable DashboardWidgetEventTimelineDefinition eventTimelineDefinition) {
            this.eventTimelineDefinition = eventTimelineDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder freeTextDefinition(@Nullable DashboardWidgetFreeTextDefinition freeTextDefinition) {
            this.freeTextDefinition = freeTextDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder geomapDefinition(@Nullable DashboardWidgetGeomapDefinition geomapDefinition) {
            this.geomapDefinition = geomapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder groupDefinition(@Nullable DashboardWidgetGroupDefinition groupDefinition) {
            this.groupDefinition = groupDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder heatmapDefinition(@Nullable DashboardWidgetHeatmapDefinition heatmapDefinition) {
            this.heatmapDefinition = heatmapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder hostmapDefinition(@Nullable DashboardWidgetHostmapDefinition hostmapDefinition) {
            this.hostmapDefinition = hostmapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable Integer id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder iframeDefinition(@Nullable DashboardWidgetIframeDefinition iframeDefinition) {
            this.iframeDefinition = iframeDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder imageDefinition(@Nullable DashboardWidgetImageDefinition imageDefinition) {
            this.imageDefinition = imageDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder listStreamDefinition(@Nullable DashboardWidgetListStreamDefinition listStreamDefinition) {
            this.listStreamDefinition = listStreamDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder logStreamDefinition(@Nullable DashboardWidgetLogStreamDefinition logStreamDefinition) {
            this.logStreamDefinition = logStreamDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder manageStatusDefinition(@Nullable DashboardWidgetManageStatusDefinition manageStatusDefinition) {
            this.manageStatusDefinition = manageStatusDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder noteDefinition(@Nullable DashboardWidgetNoteDefinition noteDefinition) {
            this.noteDefinition = noteDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder queryTableDefinition(@Nullable DashboardWidgetQueryTableDefinition queryTableDefinition) {
            this.queryTableDefinition = queryTableDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder queryValueDefinition(@Nullable DashboardWidgetQueryValueDefinition queryValueDefinition) {
            this.queryValueDefinition = queryValueDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder scatterplotDefinition(@Nullable DashboardWidgetScatterplotDefinition scatterplotDefinition) {
            this.scatterplotDefinition = scatterplotDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLevelObjectiveDefinition(@Nullable DashboardWidgetServiceLevelObjectiveDefinition serviceLevelObjectiveDefinition) {
            this.serviceLevelObjectiveDefinition = serviceLevelObjectiveDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder servicemapDefinition(@Nullable DashboardWidgetServicemapDefinition servicemapDefinition) {
            this.servicemapDefinition = servicemapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder sunburstDefinition(@Nullable DashboardWidgetSunburstDefinition sunburstDefinition) {
            this.sunburstDefinition = sunburstDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder timeseriesDefinition(@Nullable DashboardWidgetTimeseriesDefinition timeseriesDefinition) {
            this.timeseriesDefinition = timeseriesDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder toplistDefinition(@Nullable DashboardWidgetToplistDefinition toplistDefinition) {
            this.toplistDefinition = toplistDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder topologyMapDefinition(@Nullable DashboardWidgetTopologyMapDefinition topologyMapDefinition) {
            this.topologyMapDefinition = topologyMapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder traceServiceDefinition(@Nullable DashboardWidgetTraceServiceDefinition traceServiceDefinition) {
            this.traceServiceDefinition = traceServiceDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder treemapDefinition(@Nullable DashboardWidgetTreemapDefinition treemapDefinition) {
            this.treemapDefinition = treemapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder widgetLayout(@Nullable DashboardWidgetWidgetLayout widgetLayout) {
            this.widgetLayout = widgetLayout;
            return this;
        }
        public DashboardWidget build() {
            final var o = new DashboardWidget();
            o.alertGraphDefinition = alertGraphDefinition;
            o.alertValueDefinition = alertValueDefinition;
            o.changeDefinition = changeDefinition;
            o.checkStatusDefinition = checkStatusDefinition;
            o.distributionDefinition = distributionDefinition;
            o.eventStreamDefinition = eventStreamDefinition;
            o.eventTimelineDefinition = eventTimelineDefinition;
            o.freeTextDefinition = freeTextDefinition;
            o.geomapDefinition = geomapDefinition;
            o.groupDefinition = groupDefinition;
            o.heatmapDefinition = heatmapDefinition;
            o.hostmapDefinition = hostmapDefinition;
            o.id = id;
            o.iframeDefinition = iframeDefinition;
            o.imageDefinition = imageDefinition;
            o.listStreamDefinition = listStreamDefinition;
            o.logStreamDefinition = logStreamDefinition;
            o.manageStatusDefinition = manageStatusDefinition;
            o.noteDefinition = noteDefinition;
            o.queryTableDefinition = queryTableDefinition;
            o.queryValueDefinition = queryValueDefinition;
            o.scatterplotDefinition = scatterplotDefinition;
            o.serviceLevelObjectiveDefinition = serviceLevelObjectiveDefinition;
            o.servicemapDefinition = servicemapDefinition;
            o.sunburstDefinition = sunburstDefinition;
            o.timeseriesDefinition = timeseriesDefinition;
            o.toplistDefinition = toplistDefinition;
            o.topologyMapDefinition = topologyMapDefinition;
            o.traceServiceDefinition = traceServiceDefinition;
            o.treemapDefinition = treemapDefinition;
            o.widgetLayout = widgetLayout;
            return o;
        }
    }
}
