// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetTreemapDefinitionRequestQueryProcessQuery {
    private @Nullable String aggregator;
    private String dataSource;
    private @Nullable Boolean isNormalizedCpu;
    private @Nullable Integer limit;
    private String metric;
    private String name;
    private @Nullable String sort;
    private @Nullable List<String> tagFilters;
    private @Nullable String textFilter;

    private DashboardWidgetTreemapDefinitionRequestQueryProcessQuery() {}
    public Optional<String> aggregator() {
        return Optional.ofNullable(this.aggregator);
    }
    public String dataSource() {
        return this.dataSource;
    }
    public Optional<Boolean> isNormalizedCpu() {
        return Optional.ofNullable(this.isNormalizedCpu);
    }
    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }
    public String metric() {
        return this.metric;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> sort() {
        return Optional.ofNullable(this.sort);
    }
    public List<String> tagFilters() {
        return this.tagFilters == null ? List.of() : this.tagFilters;
    }
    public Optional<String> textFilter() {
        return Optional.ofNullable(this.textFilter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetTreemapDefinitionRequestQueryProcessQuery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregator;
        private String dataSource;
        private @Nullable Boolean isNormalizedCpu;
        private @Nullable Integer limit;
        private String metric;
        private String name;
        private @Nullable String sort;
        private @Nullable List<String> tagFilters;
        private @Nullable String textFilter;
        public Builder() {}
        public Builder(DashboardWidgetTreemapDefinitionRequestQueryProcessQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregator = defaults.aggregator;
    	      this.dataSource = defaults.dataSource;
    	      this.isNormalizedCpu = defaults.isNormalizedCpu;
    	      this.limit = defaults.limit;
    	      this.metric = defaults.metric;
    	      this.name = defaults.name;
    	      this.sort = defaults.sort;
    	      this.tagFilters = defaults.tagFilters;
    	      this.textFilter = defaults.textFilter;
        }

        @CustomType.Setter
        public Builder aggregator(@Nullable String aggregator) {
            this.aggregator = aggregator;
            return this;
        }
        @CustomType.Setter
        public Builder dataSource(String dataSource) {
            this.dataSource = Objects.requireNonNull(dataSource);
            return this;
        }
        @CustomType.Setter
        public Builder isNormalizedCpu(@Nullable Boolean isNormalizedCpu) {
            this.isNormalizedCpu = isNormalizedCpu;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable Integer limit) {
            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder metric(String metric) {
            this.metric = Objects.requireNonNull(metric);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder sort(@Nullable String sort) {
            this.sort = sort;
            return this;
        }
        @CustomType.Setter
        public Builder tagFilters(@Nullable List<String> tagFilters) {
            this.tagFilters = tagFilters;
            return this;
        }
        public Builder tagFilters(String... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }
        @CustomType.Setter
        public Builder textFilter(@Nullable String textFilter) {
            this.textFilter = textFilter;
            return this;
        }
        public DashboardWidgetTreemapDefinitionRequestQueryProcessQuery build() {
            final var o = new DashboardWidgetTreemapDefinitionRequestQueryProcessQuery();
            o.aggregator = aggregator;
            o.dataSource = dataSource;
            o.isNormalizedCpu = isNormalizedCpu;
            o.limit = limit;
            o.metric = metric;
            o.name = name;
            o.sort = sort;
            o.tagFilters = tagFilters;
            o.textFilter = textFilter;
            return o;
        }
    }
}
