// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormatArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimitArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs Empty = new DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs();

    @Import(name="alias")
    private @Nullable Output<String> alias;

    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    @Import(name="cellDisplayMode")
    private @Nullable Output<String> cellDisplayMode;

    public Optional<Output<String>> cellDisplayMode() {
        return Optional.ofNullable(this.cellDisplayMode);
    }

    @Import(name="conditionalFormats")
    private @Nullable Output<List<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormatArgs>> conditionalFormats;

    public Optional<Output<List<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormatArgs>>> conditionalFormats() {
        return Optional.ofNullable(this.conditionalFormats);
    }

    @Import(name="formulaExpression", required=true)
    private Output<String> formulaExpression;

    public Output<String> formulaExpression() {
        return this.formulaExpression;
    }

    @Import(name="limit")
    private @Nullable Output<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimitArgs> limit;

    public Optional<Output<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimitArgs>> limit() {
        return Optional.ofNullable(this.limit);
    }

    @Import(name="style")
    private @Nullable Output<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyleArgs> style;

    public Optional<Output<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyleArgs>> style() {
        return Optional.ofNullable(this.style);
    }

    private DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs() {}

    private DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs(DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs $) {
        this.alias = $.alias;
        this.cellDisplayMode = $.cellDisplayMode;
        this.conditionalFormats = $.conditionalFormats;
        this.formulaExpression = $.formulaExpression;
        this.limit = $.limit;
        this.style = $.style;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs(Objects.requireNonNull(defaults));
        }

        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        public Builder cellDisplayMode(@Nullable Output<String> cellDisplayMode) {
            $.cellDisplayMode = cellDisplayMode;
            return this;
        }

        public Builder cellDisplayMode(String cellDisplayMode) {
            return cellDisplayMode(Output.of(cellDisplayMode));
        }

        public Builder conditionalFormats(@Nullable Output<List<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormatArgs>> conditionalFormats) {
            $.conditionalFormats = conditionalFormats;
            return this;
        }

        public Builder conditionalFormats(List<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormatArgs> conditionalFormats) {
            return conditionalFormats(Output.of(conditionalFormats));
        }

        public Builder conditionalFormats(DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaConditionalFormatArgs... conditionalFormats) {
            return conditionalFormats(List.of(conditionalFormats));
        }

        public Builder formulaExpression(Output<String> formulaExpression) {
            $.formulaExpression = formulaExpression;
            return this;
        }

        public Builder formulaExpression(String formulaExpression) {
            return formulaExpression(Output.of(formulaExpression));
        }

        public Builder limit(@Nullable Output<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimitArgs> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimitArgs limit) {
            return limit(Output.of(limit));
        }

        public Builder style(@Nullable Output<DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyleArgs> style) {
            $.style = style;
            return this;
        }

        public Builder style(DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaStyleArgs style) {
            return style(Output.of(style));
        }

        public DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaArgs build() {
            $.formulaExpression = Objects.requireNonNull($.formulaExpression, "expected parameter 'formulaExpression' to be non-null");
            return $;
        }
    }

}
