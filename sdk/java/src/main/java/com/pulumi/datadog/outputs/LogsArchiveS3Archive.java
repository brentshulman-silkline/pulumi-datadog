// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LogsArchiveS3Archive {
    private String accountId;
    private String bucket;
    private String path;
    private String roleName;

    private LogsArchiveS3Archive() {}
    public String accountId() {
        return this.accountId;
    }
    public String bucket() {
        return this.bucket;
    }
    public String path() {
        return this.path;
    }
    public String roleName() {
        return this.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsArchiveS3Archive defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String bucket;
        private String path;
        private String roleName;
        public Builder() {}
        public Builder(LogsArchiveS3Archive defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.bucket = defaults.bucket;
    	      this.path = defaults.path;
    	      this.roleName = defaults.roleName;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        @CustomType.Setter
        public Builder roleName(String roleName) {
            this.roleName = Objects.requireNonNull(roleName);
            return this;
        }
        public LogsArchiveS3Archive build() {
            final var o = new LogsArchiveS3Archive();
            o.accountId = accountId;
            o.bucket = bucket;
            o.path = path;
            o.roleName = roleName;
            return o;
        }
    }
}
