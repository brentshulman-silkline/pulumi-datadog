// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumnArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs Empty = new DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs();

    @Import(name="columns")
    private @Nullable Output<List<DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumnArgs>> columns;

    public Optional<Output<List<DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumnArgs>>> columns() {
        return Optional.ofNullable(this.columns);
    }

    @Import(name="env", required=true)
    private Output<String> env;

    public Output<String> env() {
        return this.env;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="primaryTag", required=true)
    private Output<String> primaryTag;

    public Output<String> primaryTag() {
        return this.primaryTag;
    }

    @Import(name="resource")
    private @Nullable Output<String> resource;

    public Optional<Output<String>> resource() {
        return Optional.ofNullable(this.resource);
    }

    @Import(name="rowType", required=true)
    private Output<String> rowType;

    public Output<String> rowType() {
        return this.rowType;
    }

    @Import(name="service", required=true)
    private Output<String> service;

    public Output<String> service() {
        return this.service;
    }

    private DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs() {}

    private DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs(DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs $) {
        this.columns = $.columns;
        this.env = $.env;
        this.name = $.name;
        this.primaryTag = $.primaryTag;
        this.resource = $.resource;
        this.rowType = $.rowType;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs(Objects.requireNonNull(defaults));
        }

        public Builder columns(@Nullable Output<List<DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        public Builder columns(List<DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        public Builder columns(DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumnArgs... columns) {
            return columns(List.of(columns));
        }

        public Builder env(Output<String> env) {
            $.env = env;
            return this;
        }

        public Builder env(String env) {
            return env(Output.of(env));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder primaryTag(Output<String> primaryTag) {
            $.primaryTag = primaryTag;
            return this;
        }

        public Builder primaryTag(String primaryTag) {
            return primaryTag(Output.of(primaryTag));
        }

        public Builder resource(@Nullable Output<String> resource) {
            $.resource = resource;
            return this;
        }

        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        public Builder rowType(Output<String> rowType) {
            $.rowType = rowType;
            return this;
        }

        public Builder rowType(String rowType) {
            return rowType(Output.of(rowType));
        }

        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryArgs build() {
            $.env = Objects.requireNonNull($.env, "expected parameter 'env' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.primaryTag = Objects.requireNonNull($.primaryTag, "expected parameter 'primaryTag' to be non-null");
            $.rowType = Objects.requireNonNull($.rowType, "expected parameter 'rowType' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            return $;
        }
    }

}
