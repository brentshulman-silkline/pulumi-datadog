// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionCustomLink;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionLegendInline;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionLegendTable;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequest;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetSunburstDefinition {
    private @Nullable List<DashboardWidgetSunburstDefinitionCustomLink> customLinks;
    private @Nullable Boolean hideTotal;
    private @Nullable DashboardWidgetSunburstDefinitionLegendInline legendInline;
    private @Nullable DashboardWidgetSunburstDefinitionLegendTable legendTable;
    private @Nullable String liveSpan;
    private @Nullable List<DashboardWidgetSunburstDefinitionRequest> requests;
    private @Nullable String title;
    private @Nullable String titleAlign;
    private @Nullable String titleSize;

    private DashboardWidgetSunburstDefinition() {}
    public List<DashboardWidgetSunburstDefinitionCustomLink> customLinks() {
        return this.customLinks == null ? List.of() : this.customLinks;
    }
    public Optional<Boolean> hideTotal() {
        return Optional.ofNullable(this.hideTotal);
    }
    public Optional<DashboardWidgetSunburstDefinitionLegendInline> legendInline() {
        return Optional.ofNullable(this.legendInline);
    }
    public Optional<DashboardWidgetSunburstDefinitionLegendTable> legendTable() {
        return Optional.ofNullable(this.legendTable);
    }
    public Optional<String> liveSpan() {
        return Optional.ofNullable(this.liveSpan);
    }
    public List<DashboardWidgetSunburstDefinitionRequest> requests() {
        return this.requests == null ? List.of() : this.requests;
    }
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public Optional<String> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }
    public Optional<String> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetSunburstDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DashboardWidgetSunburstDefinitionCustomLink> customLinks;
        private @Nullable Boolean hideTotal;
        private @Nullable DashboardWidgetSunburstDefinitionLegendInline legendInline;
        private @Nullable DashboardWidgetSunburstDefinitionLegendTable legendTable;
        private @Nullable String liveSpan;
        private @Nullable List<DashboardWidgetSunburstDefinitionRequest> requests;
        private @Nullable String title;
        private @Nullable String titleAlign;
        private @Nullable String titleSize;
        public Builder() {}
        public Builder(DashboardWidgetSunburstDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customLinks = defaults.customLinks;
    	      this.hideTotal = defaults.hideTotal;
    	      this.legendInline = defaults.legendInline;
    	      this.legendTable = defaults.legendTable;
    	      this.liveSpan = defaults.liveSpan;
    	      this.requests = defaults.requests;
    	      this.title = defaults.title;
    	      this.titleAlign = defaults.titleAlign;
    	      this.titleSize = defaults.titleSize;
        }

        @CustomType.Setter
        public Builder customLinks(@Nullable List<DashboardWidgetSunburstDefinitionCustomLink> customLinks) {
            this.customLinks = customLinks;
            return this;
        }
        public Builder customLinks(DashboardWidgetSunburstDefinitionCustomLink... customLinks) {
            return customLinks(List.of(customLinks));
        }
        @CustomType.Setter
        public Builder hideTotal(@Nullable Boolean hideTotal) {
            this.hideTotal = hideTotal;
            return this;
        }
        @CustomType.Setter
        public Builder legendInline(@Nullable DashboardWidgetSunburstDefinitionLegendInline legendInline) {
            this.legendInline = legendInline;
            return this;
        }
        @CustomType.Setter
        public Builder legendTable(@Nullable DashboardWidgetSunburstDefinitionLegendTable legendTable) {
            this.legendTable = legendTable;
            return this;
        }
        @CustomType.Setter
        public Builder liveSpan(@Nullable String liveSpan) {
            this.liveSpan = liveSpan;
            return this;
        }
        @CustomType.Setter
        public Builder requests(@Nullable List<DashboardWidgetSunburstDefinitionRequest> requests) {
            this.requests = requests;
            return this;
        }
        public Builder requests(DashboardWidgetSunburstDefinitionRequest... requests) {
            return requests(List.of(requests));
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder titleAlign(@Nullable String titleAlign) {
            this.titleAlign = titleAlign;
            return this;
        }
        @CustomType.Setter
        public Builder titleSize(@Nullable String titleSize) {
            this.titleSize = titleSize;
            return this;
        }
        public DashboardWidgetSunburstDefinition build() {
            final var o = new DashboardWidgetSunburstDefinition();
            o.customLinks = customLinks;
            o.hideTotal = hideTotal;
            o.legendInline = legendInline;
            o.legendTable = legendTable;
            o.liveSpan = liveSpan;
            o.requests = requests;
            o.title = title;
            o.titleAlign = titleAlign;
            o.titleSize = titleSize;
            return o;
        }
    }
}
