// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLinkArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyleArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionViewArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs Empty = new DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs();

    @Import(name="customLinks")
    private @Nullable Output<List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLinkArgs>> customLinks;

    public Optional<Output<List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLinkArgs>>> customLinks() {
        return Optional.ofNullable(this.customLinks);
    }

    @Import(name="liveSpan")
    private @Nullable Output<String> liveSpan;

    public Optional<Output<String>> liveSpan() {
        return Optional.ofNullable(this.liveSpan);
    }

    @Import(name="requests")
    private @Nullable Output<List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestArgs>> requests;

    public Optional<Output<List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestArgs>>> requests() {
        return Optional.ofNullable(this.requests);
    }

    @Import(name="style")
    private @Nullable Output<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyleArgs> style;

    public Optional<Output<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyleArgs>> style() {
        return Optional.ofNullable(this.style);
    }

    @Import(name="title")
    private @Nullable Output<String> title;

    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    @Import(name="titleAlign")
    private @Nullable Output<String> titleAlign;

    public Optional<Output<String>> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }

    @Import(name="titleSize")
    private @Nullable Output<String> titleSize;

    public Optional<Output<String>> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }

    @Import(name="view", required=true)
    private Output<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionViewArgs> view;

    public Output<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionViewArgs> view() {
        return this.view;
    }

    private DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs() {}

    private DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs $) {
        this.customLinks = $.customLinks;
        this.liveSpan = $.liveSpan;
        this.requests = $.requests;
        this.style = $.style;
        this.title = $.title;
        this.titleAlign = $.titleAlign;
        this.titleSize = $.titleSize;
        this.view = $.view;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder customLinks(@Nullable Output<List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLinkArgs>> customLinks) {
            $.customLinks = customLinks;
            return this;
        }

        public Builder customLinks(List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLinkArgs> customLinks) {
            return customLinks(Output.of(customLinks));
        }

        public Builder customLinks(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLinkArgs... customLinks) {
            return customLinks(List.of(customLinks));
        }

        public Builder liveSpan(@Nullable Output<String> liveSpan) {
            $.liveSpan = liveSpan;
            return this;
        }

        public Builder liveSpan(String liveSpan) {
            return liveSpan(Output.of(liveSpan));
        }

        public Builder requests(@Nullable Output<List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestArgs>> requests) {
            $.requests = requests;
            return this;
        }

        public Builder requests(List<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestArgs> requests) {
            return requests(Output.of(requests));
        }

        public Builder requests(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestArgs... requests) {
            return requests(List.of(requests));
        }

        public Builder style(@Nullable Output<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyleArgs> style) {
            $.style = style;
            return this;
        }

        public Builder style(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyleArgs style) {
            return style(Output.of(style));
        }

        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public Builder titleAlign(@Nullable Output<String> titleAlign) {
            $.titleAlign = titleAlign;
            return this;
        }

        public Builder titleAlign(String titleAlign) {
            return titleAlign(Output.of(titleAlign));
        }

        public Builder titleSize(@Nullable Output<String> titleSize) {
            $.titleSize = titleSize;
            return this;
        }

        public Builder titleSize(String titleSize) {
            return titleSize(Output.of(titleSize));
        }

        public Builder view(Output<DashboardWidgetGroupDefinitionWidgetGeomapDefinitionViewArgs> view) {
            $.view = view;
            return this;
        }

        public Builder view(DashboardWidgetGroupDefinitionWidgetGeomapDefinitionViewArgs view) {
            return view(Output.of(view));
        }

        public DashboardWidgetGroupDefinitionWidgetGeomapDefinitionArgs build() {
            $.view = Objects.requireNonNull($.view, "expected parameter 'view' to be non-null");
            return $;
        }
    }

}
