// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestApmQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestAuditQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestConditionalFormatArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestFormulaArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestLogQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestProcessQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestRumQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestSecurityQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestStyleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetToplistDefinitionRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetToplistDefinitionRequestArgs Empty = new DashboardWidgetToplistDefinitionRequestArgs();

    @Import(name="apmQuery")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestApmQueryArgs> apmQuery;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestApmQueryArgs>> apmQuery() {
        return Optional.ofNullable(this.apmQuery);
    }

    @Import(name="auditQuery")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestAuditQueryArgs> auditQuery;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestAuditQueryArgs>> auditQuery() {
        return Optional.ofNullable(this.auditQuery);
    }

    @Import(name="conditionalFormats")
    private @Nullable Output<List<DashboardWidgetToplistDefinitionRequestConditionalFormatArgs>> conditionalFormats;

    public Optional<Output<List<DashboardWidgetToplistDefinitionRequestConditionalFormatArgs>>> conditionalFormats() {
        return Optional.ofNullable(this.conditionalFormats);
    }

    @Import(name="formulas")
    private @Nullable Output<List<DashboardWidgetToplistDefinitionRequestFormulaArgs>> formulas;

    public Optional<Output<List<DashboardWidgetToplistDefinitionRequestFormulaArgs>>> formulas() {
        return Optional.ofNullable(this.formulas);
    }

    @Import(name="logQuery")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestLogQueryArgs> logQuery;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestLogQueryArgs>> logQuery() {
        return Optional.ofNullable(this.logQuery);
    }

    @Import(name="processQuery")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestProcessQueryArgs> processQuery;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestProcessQueryArgs>> processQuery() {
        return Optional.ofNullable(this.processQuery);
    }

    @Import(name="q")
    private @Nullable Output<String> q;

    public Optional<Output<String>> q() {
        return Optional.ofNullable(this.q);
    }

    @Import(name="queries")
    private @Nullable Output<List<DashboardWidgetToplistDefinitionRequestQueryArgs>> queries;

    public Optional<Output<List<DashboardWidgetToplistDefinitionRequestQueryArgs>>> queries() {
        return Optional.ofNullable(this.queries);
    }

    @Import(name="rumQuery")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestRumQueryArgs> rumQuery;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestRumQueryArgs>> rumQuery() {
        return Optional.ofNullable(this.rumQuery);
    }

    @Import(name="securityQuery")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestSecurityQueryArgs> securityQuery;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestSecurityQueryArgs>> securityQuery() {
        return Optional.ofNullable(this.securityQuery);
    }

    @Import(name="style")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestStyleArgs> style;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestStyleArgs>> style() {
        return Optional.ofNullable(this.style);
    }

    private DashboardWidgetToplistDefinitionRequestArgs() {}

    private DashboardWidgetToplistDefinitionRequestArgs(DashboardWidgetToplistDefinitionRequestArgs $) {
        this.apmQuery = $.apmQuery;
        this.auditQuery = $.auditQuery;
        this.conditionalFormats = $.conditionalFormats;
        this.formulas = $.formulas;
        this.logQuery = $.logQuery;
        this.processQuery = $.processQuery;
        this.q = $.q;
        this.queries = $.queries;
        this.rumQuery = $.rumQuery;
        this.securityQuery = $.securityQuery;
        this.style = $.style;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetToplistDefinitionRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetToplistDefinitionRequestArgs $;

        public Builder() {
            $ = new DashboardWidgetToplistDefinitionRequestArgs();
        }

        public Builder(DashboardWidgetToplistDefinitionRequestArgs defaults) {
            $ = new DashboardWidgetToplistDefinitionRequestArgs(Objects.requireNonNull(defaults));
        }

        public Builder apmQuery(@Nullable Output<DashboardWidgetToplistDefinitionRequestApmQueryArgs> apmQuery) {
            $.apmQuery = apmQuery;
            return this;
        }

        public Builder apmQuery(DashboardWidgetToplistDefinitionRequestApmQueryArgs apmQuery) {
            return apmQuery(Output.of(apmQuery));
        }

        public Builder auditQuery(@Nullable Output<DashboardWidgetToplistDefinitionRequestAuditQueryArgs> auditQuery) {
            $.auditQuery = auditQuery;
            return this;
        }

        public Builder auditQuery(DashboardWidgetToplistDefinitionRequestAuditQueryArgs auditQuery) {
            return auditQuery(Output.of(auditQuery));
        }

        public Builder conditionalFormats(@Nullable Output<List<DashboardWidgetToplistDefinitionRequestConditionalFormatArgs>> conditionalFormats) {
            $.conditionalFormats = conditionalFormats;
            return this;
        }

        public Builder conditionalFormats(List<DashboardWidgetToplistDefinitionRequestConditionalFormatArgs> conditionalFormats) {
            return conditionalFormats(Output.of(conditionalFormats));
        }

        public Builder conditionalFormats(DashboardWidgetToplistDefinitionRequestConditionalFormatArgs... conditionalFormats) {
            return conditionalFormats(List.of(conditionalFormats));
        }

        public Builder formulas(@Nullable Output<List<DashboardWidgetToplistDefinitionRequestFormulaArgs>> formulas) {
            $.formulas = formulas;
            return this;
        }

        public Builder formulas(List<DashboardWidgetToplistDefinitionRequestFormulaArgs> formulas) {
            return formulas(Output.of(formulas));
        }

        public Builder formulas(DashboardWidgetToplistDefinitionRequestFormulaArgs... formulas) {
            return formulas(List.of(formulas));
        }

        public Builder logQuery(@Nullable Output<DashboardWidgetToplistDefinitionRequestLogQueryArgs> logQuery) {
            $.logQuery = logQuery;
            return this;
        }

        public Builder logQuery(DashboardWidgetToplistDefinitionRequestLogQueryArgs logQuery) {
            return logQuery(Output.of(logQuery));
        }

        public Builder processQuery(@Nullable Output<DashboardWidgetToplistDefinitionRequestProcessQueryArgs> processQuery) {
            $.processQuery = processQuery;
            return this;
        }

        public Builder processQuery(DashboardWidgetToplistDefinitionRequestProcessQueryArgs processQuery) {
            return processQuery(Output.of(processQuery));
        }

        public Builder q(@Nullable Output<String> q) {
            $.q = q;
            return this;
        }

        public Builder q(String q) {
            return q(Output.of(q));
        }

        public Builder queries(@Nullable Output<List<DashboardWidgetToplistDefinitionRequestQueryArgs>> queries) {
            $.queries = queries;
            return this;
        }

        public Builder queries(List<DashboardWidgetToplistDefinitionRequestQueryArgs> queries) {
            return queries(Output.of(queries));
        }

        public Builder queries(DashboardWidgetToplistDefinitionRequestQueryArgs... queries) {
            return queries(List.of(queries));
        }

        public Builder rumQuery(@Nullable Output<DashboardWidgetToplistDefinitionRequestRumQueryArgs> rumQuery) {
            $.rumQuery = rumQuery;
            return this;
        }

        public Builder rumQuery(DashboardWidgetToplistDefinitionRequestRumQueryArgs rumQuery) {
            return rumQuery(Output.of(rumQuery));
        }

        public Builder securityQuery(@Nullable Output<DashboardWidgetToplistDefinitionRequestSecurityQueryArgs> securityQuery) {
            $.securityQuery = securityQuery;
            return this;
        }

        public Builder securityQuery(DashboardWidgetToplistDefinitionRequestSecurityQueryArgs securityQuery) {
            return securityQuery(Output.of(securityQuery));
        }

        public Builder style(@Nullable Output<DashboardWidgetToplistDefinitionRequestStyleArgs> style) {
            $.style = style;
            return this;
        }

        public Builder style(DashboardWidgetToplistDefinitionRequestStyleArgs style) {
            return style(Output.of(style));
        }

        public DashboardWidgetToplistDefinitionRequestArgs build() {
            return $;
        }
    }

}
