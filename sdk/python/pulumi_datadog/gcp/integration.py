# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Integration(pulumi.CustomResource):
    """
    Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.
    """
    def __init__(__self__, __name__, __opts__=None, client_email=None, client_id=None, host_filters=None, private_key=None, private_key_id=None, project_id=None):
        """Create a Integration resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not client_email:
            raise TypeError('Missing required property client_email')
        __props__['client_email'] = client_email

        if not client_id:
            raise TypeError('Missing required property client_id')
        __props__['client_id'] = client_id

        __props__['host_filters'] = host_filters

        if not private_key:
            raise TypeError('Missing required property private_key')
        __props__['private_key'] = private_key

        if not private_key_id:
            raise TypeError('Missing required property private_key_id')
        __props__['private_key_id'] = private_key_id

        if not project_id:
            raise TypeError('Missing required property project_id')
        __props__['project_id'] = project_id

        super(Integration, __self__).__init__(
            'datadog:gcp/integration:Integration',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

