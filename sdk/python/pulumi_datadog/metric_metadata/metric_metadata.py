# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class MetricMetadata(pulumi.CustomResource):
    """
    Provides a Datadog metric_metadata resource. This can be used to manage a metric's metadata.
    """
    def __init__(__self__, __name__, __opts__=None, description=None, metric=None, per_unit=None, short_name=None, statsd_interval=None, type=None, unit=None):
        """Create a MetricMetadata resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['description'] = description

        if not metric:
            raise TypeError('Missing required property metric')
        __props__['metric'] = metric

        __props__['per_unit'] = per_unit

        __props__['short_name'] = short_name

        __props__['statsd_interval'] = statsd_interval

        __props__['type'] = type

        __props__['unit'] = unit

        super(MetricMetadata, __self__).__init__(
            'datadog:metricMetadata:MetricMetadata',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

