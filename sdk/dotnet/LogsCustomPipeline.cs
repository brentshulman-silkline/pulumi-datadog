// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#logs-pipelines) resource, which is used to create and manage Datadog logs custom pipelines.
    /// 
    /// 
    /// ## Important Notes
    /// 
    /// Each `datadog..LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in
    /// a different resource datadog_logs_pipeline_order.
    /// When creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog..LogsPipelineOrder` 
    /// resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the 
    /// `datadog..LogsPipelineOrder` resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-datadog/blob/master/website/docs/r/logs_custom_pipeline.html.markdown.
    /// </summary>
    public partial class LogsCustomPipeline : Pulumi.CustomResource
    {
        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        [Output("filters")]
        public Output<ImmutableArray<Outputs.LogsCustomPipelineFilters>> Filters { get; private set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool?> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Processors. Nested pipeline can't take any other nested pipeline as its processor.
        /// </summary>
        [Output("processors")]
        public Output<ImmutableArray<Outputs.LogsCustomPipelineProcessors>> Processors { get; private set; } = null!;


        /// <summary>
        /// Create a LogsCustomPipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogsCustomPipeline(string name, LogsCustomPipelineArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private LogsCustomPipeline(string name, Input<string> id, LogsCustomPipelineState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogsCustomPipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogsCustomPipeline Get(string name, Input<string> id, LogsCustomPipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new LogsCustomPipeline(name, id, state, options);
        }
    }

    public sealed class LogsCustomPipelineArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<Inputs.LogsCustomPipelineFiltersArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<Inputs.LogsCustomPipelineFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsCustomPipelineFiltersArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("processors")]
        private InputList<Inputs.LogsCustomPipelineProcessorsArgs>? _processors;

        /// <summary>
        /// Processors. Nested pipeline can't take any other nested pipeline as its processor.
        /// </summary>
        public InputList<Inputs.LogsCustomPipelineProcessorsArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<Inputs.LogsCustomPipelineProcessorsArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineState : Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<Inputs.LogsCustomPipelineFiltersGetArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<Inputs.LogsCustomPipelineFiltersGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsCustomPipelineFiltersGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("processors")]
        private InputList<Inputs.LogsCustomPipelineProcessorsGetArgs>? _processors;

        /// <summary>
        /// Processors. Nested pipeline can't take any other nested pipeline as its processor.
        /// </summary>
        public InputList<Inputs.LogsCustomPipelineProcessorsGetArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<Inputs.LogsCustomPipelineProcessorsGetArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class LogsCustomPipelineFiltersArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineFiltersArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineFiltersGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineFiltersGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsArgs : Pulumi.ResourceArgs
    {
        [Input("arithmeticProcessor")]
        public Input<LogsCustomPipelineProcessorsArithmeticProcessorArgs>? ArithmeticProcessor { get; set; }

        [Input("attributeRemapper")]
        public Input<LogsCustomPipelineProcessorsAttributeRemapperArgs>? AttributeRemapper { get; set; }

        [Input("categoryProcessor")]
        public Input<LogsCustomPipelineProcessorsCategoryProcessorArgs>? CategoryProcessor { get; set; }

        [Input("dateRemapper")]
        public Input<LogsCustomPipelineProcessorsDateRemapperArgs>? DateRemapper { get; set; }

        [Input("geoIpParser")]
        public Input<LogsCustomPipelineProcessorsGeoIpParserArgs>? GeoIpParser { get; set; }

        [Input("grokParser")]
        public Input<LogsCustomPipelineProcessorsGrokParserArgs>? GrokParser { get; set; }

        [Input("messageRemapper")]
        public Input<LogsCustomPipelineProcessorsMessageRemapperArgs>? MessageRemapper { get; set; }

        [Input("pipeline")]
        public Input<LogsCustomPipelineProcessorsPipelineArgs>? Pipeline { get; set; }

        [Input("serviceRemapper")]
        public Input<LogsCustomPipelineProcessorsServiceRemapperArgs>? ServiceRemapper { get; set; }

        [Input("statusRemapper")]
        public Input<LogsCustomPipelineProcessorsStatusRemapperArgs>? StatusRemapper { get; set; }

        [Input("stringBuilderProcessor")]
        public Input<LogsCustomPipelineProcessorsStringBuilderProcessorArgs>? StringBuilderProcessor { get; set; }

        [Input("traceIdRemapper")]
        public Input<LogsCustomPipelineProcessorsTraceIdRemapperArgs>? TraceIdRemapper { get; set; }

        [Input("urlParser")]
        public Input<LogsCustomPipelineProcessorsUrlParserArgs>? UrlParser { get; set; }

        [Input("userAgentParser")]
        public Input<LogsCustomPipelineProcessorsUserAgentParserArgs>? UserAgentParser { get; set; }

        public LogsCustomPipelineProcessorsArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsArithmeticProcessorArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Arithmetic operation between one or more log attributes.
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsArithmeticProcessorArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsArithmeticProcessorGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Arithmetic operation between one or more log attributes.
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsArithmeticProcessorGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsAttributeRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Override the target element if already set.
        /// </summary>
        [Input("overrideOnConflict")]
        public Input<bool>? OverrideOnConflict { get; set; }

        /// <summary>
        /// Remove or preserve the remapped source element.
        /// </summary>
        [Input("preserveSource")]
        public Input<bool>? PreserveSource { get; set; }

        /// <summary>
        /// Defines where the sources are from (log `attribute` or `tag`). 
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// Defines if the target is a log `attribute` or `tag`.
        /// </summary>
        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        public LogsCustomPipelineProcessorsAttributeRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsAttributeRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Override the target element if already set.
        /// </summary>
        [Input("overrideOnConflict")]
        public Input<bool>? OverrideOnConflict { get; set; }

        /// <summary>
        /// Remove or preserve the remapped source element.
        /// </summary>
        [Input("preserveSource")]
        public Input<bool>? PreserveSource { get; set; }

        /// <summary>
        /// Defines where the sources are from (log `attribute` or `tag`). 
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// Defines if the target is a log `attribute` or `tag`.
        /// </summary>
        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        public LogsCustomPipelineProcessorsAttributeRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsCategoryProcessorArgs : Pulumi.ResourceArgs
    {
        [Input("categories", required: true)]
        private InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesArgs>? _categories;

        /// <summary>
        /// List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesArgs>());
            set => _categories = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsCategoryProcessorArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsCategoryProcessorCategoriesArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public LogsCustomPipelineProcessorsCategoryProcessorCategoriesArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsCategoryProcessorCategoriesGetArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public LogsCustomPipelineProcessorsCategoryProcessorCategoriesGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsCategoryProcessorGetArgs : Pulumi.ResourceArgs
    {
        [Input("categories", required: true)]
        private InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesGetArgs>? _categories;

        /// <summary>
        /// List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesGetArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<LogsCustomPipelineProcessorsCategoryProcessorCategoriesGetArgs>());
            set => _categories = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsCategoryProcessorGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsDateRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsDateRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsDateRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsDateRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsGeoIpParserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsGeoIpParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsGeoIpParserGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsGeoIpParserGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("arithmeticProcessor")]
        public Input<LogsCustomPipelineProcessorsArithmeticProcessorGetArgs>? ArithmeticProcessor { get; set; }

        [Input("attributeRemapper")]
        public Input<LogsCustomPipelineProcessorsAttributeRemapperGetArgs>? AttributeRemapper { get; set; }

        [Input("categoryProcessor")]
        public Input<LogsCustomPipelineProcessorsCategoryProcessorGetArgs>? CategoryProcessor { get; set; }

        [Input("dateRemapper")]
        public Input<LogsCustomPipelineProcessorsDateRemapperGetArgs>? DateRemapper { get; set; }

        [Input("geoIpParser")]
        public Input<LogsCustomPipelineProcessorsGeoIpParserGetArgs>? GeoIpParser { get; set; }

        [Input("grokParser")]
        public Input<LogsCustomPipelineProcessorsGrokParserGetArgs>? GrokParser { get; set; }

        [Input("messageRemapper")]
        public Input<LogsCustomPipelineProcessorsMessageRemapperGetArgs>? MessageRemapper { get; set; }

        [Input("pipeline")]
        public Input<LogsCustomPipelineProcessorsPipelineGetArgs>? Pipeline { get; set; }

        [Input("serviceRemapper")]
        public Input<LogsCustomPipelineProcessorsServiceRemapperGetArgs>? ServiceRemapper { get; set; }

        [Input("statusRemapper")]
        public Input<LogsCustomPipelineProcessorsStatusRemapperGetArgs>? StatusRemapper { get; set; }

        [Input("stringBuilderProcessor")]
        public Input<LogsCustomPipelineProcessorsStringBuilderProcessorGetArgs>? StringBuilderProcessor { get; set; }

        [Input("traceIdRemapper")]
        public Input<LogsCustomPipelineProcessorsTraceIdRemapperGetArgs>? TraceIdRemapper { get; set; }

        [Input("urlParser")]
        public Input<LogsCustomPipelineProcessorsUrlParserGetArgs>? UrlParser { get; set; }

        [Input("userAgentParser")]
        public Input<LogsCustomPipelineProcessorsUserAgentParserGetArgs>? UserAgentParser { get; set; }

        public LogsCustomPipelineProcessorsGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsGrokParserArgs : Pulumi.ResourceArgs
    {
        [Input("grok", required: true)]
        public Input<LogsCustomPipelineProcessorsGrokParserGrokArgs> Grok { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("samples")]
        private InputList<string>? _samples;

        /// <summary>
        /// List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.
        /// </summary>
        public InputList<string> Samples
        {
            get => _samples ?? (_samples = new InputList<string>());
            set => _samples = value;
        }

        /// <summary>
        /// Name of the log attribute to parse.
        /// * `grok`
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        public LogsCustomPipelineProcessorsGrokParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsGrokParserGetArgs : Pulumi.ResourceArgs
    {
        [Input("grok", required: true)]
        public Input<LogsCustomPipelineProcessorsGrokParserGrokGetArgs> Grok { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("samples")]
        private InputList<string>? _samples;

        /// <summary>
        /// List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.
        /// </summary>
        public InputList<string> Samples
        {
            get => _samples ?? (_samples = new InputList<string>());
            set => _samples = value;
        }

        /// <summary>
        /// Name of the log attribute to parse.
        /// * `grok`
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        public LogsCustomPipelineProcessorsGrokParserGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsGrokParserGrokArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match rules for your grok parser.
        /// </summary>
        [Input("matchRules", required: true)]
        public Input<string> MatchRules { get; set; } = null!;

        /// <summary>
        /// Support rules for your grok parser.
        /// </summary>
        [Input("supportRules", required: true)]
        public Input<string> SupportRules { get; set; } = null!;

        public LogsCustomPipelineProcessorsGrokParserGrokArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsGrokParserGrokGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match rules for your grok parser.
        /// </summary>
        [Input("matchRules", required: true)]
        public Input<string> MatchRules { get; set; } = null!;

        /// <summary>
        /// Support rules for your grok parser.
        /// </summary>
        [Input("supportRules", required: true)]
        public Input<string> SupportRules { get; set; } = null!;

        public LogsCustomPipelineProcessorsGrokParserGrokGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsMessageRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsMessageRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsMessageRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsMessageRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<LogsCustomPipelineProcessorsPipelineFiltersArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<LogsCustomPipelineProcessorsPipelineFiltersArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("processors")]
        private InputList<LogsCustomPipelineProcessorsPipelineProcessorsArgs>? _processors;

        /// <summary>
        /// Processors. Nested pipeline can't take any other nested pipeline as its processor.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineProcessorsArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<LogsCustomPipelineProcessorsPipelineProcessorsArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineProcessorsPipelineArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineFiltersArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineFiltersArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineFiltersGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineFiltersGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineGetArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<LogsCustomPipelineProcessorsPipelineFiltersGetArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineFiltersGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<LogsCustomPipelineProcessorsPipelineFiltersGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("processors")]
        private InputList<LogsCustomPipelineProcessorsPipelineProcessorsGetArgs>? _processors;

        /// <summary>
        /// Processors. Nested pipeline can't take any other nested pipeline as its processor.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineProcessorsGetArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<LogsCustomPipelineProcessorsPipelineProcessorsGetArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineProcessorsPipelineGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsArgs : Pulumi.ResourceArgs
    {
        [Input("arithmeticProcessor")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessorArgs>? ArithmeticProcessor { get; set; }

        [Input("attributeRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapperArgs>? AttributeRemapper { get; set; }

        [Input("categoryProcessor")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorArgs>? CategoryProcessor { get; set; }

        [Input("dateRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsDateRemapperArgs>? DateRemapper { get; set; }

        [Input("geoIpParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParserArgs>? GeoIpParser { get; set; }

        [Input("grokParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsGrokParserArgs>? GrokParser { get; set; }

        [Input("messageRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapperArgs>? MessageRemapper { get; set; }

        [Input("serviceRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapperArgs>? ServiceRemapper { get; set; }

        [Input("statusRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapperArgs>? StatusRemapper { get; set; }

        [Input("stringBuilderProcessor")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessorArgs>? StringBuilderProcessor { get; set; }

        [Input("traceIdRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapperArgs>? TraceIdRemapper { get; set; }

        [Input("urlParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsUrlParserArgs>? UrlParser { get; set; }

        [Input("userAgentParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParserArgs>? UserAgentParser { get; set; }

        public LogsCustomPipelineProcessorsPipelineProcessorsArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessorArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Arithmetic operation between one or more log attributes.
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessorArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessorGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Arithmetic operation between one or more log attributes.
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessorGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Override the target element if already set.
        /// </summary>
        [Input("overrideOnConflict")]
        public Input<bool>? OverrideOnConflict { get; set; }

        /// <summary>
        /// Remove or preserve the remapped source element.
        /// </summary>
        [Input("preserveSource")]
        public Input<bool>? PreserveSource { get; set; }

        /// <summary>
        /// Defines where the sources are from (log `attribute` or `tag`). 
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// Defines if the target is a log `attribute` or `tag`.
        /// </summary>
        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Override the target element if already set.
        /// </summary>
        [Input("overrideOnConflict")]
        public Input<bool>? OverrideOnConflict { get; set; }

        /// <summary>
        /// Remove or preserve the remapped source element.
        /// </summary>
        [Input("preserveSource")]
        public Input<bool>? PreserveSource { get; set; }

        /// <summary>
        /// Defines where the sources are from (log `attribute` or `tag`). 
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// Defines if the target is a log `attribute` or `tag`.
        /// </summary>
        [Input("targetType", required: true)]
        public Input<string> TargetType { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorArgs : Pulumi.ResourceArgs
    {
        [Input("categories", required: true)]
        private InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesArgs>? _categories;

        /// <summary>
        /// List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesArgs>());
            set => _categories = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesGetArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs>? _filters;

        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFiltersGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorGetArgs : Pulumi.ResourceArgs
    {
        [Input("categories", required: true)]
        private InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesGetArgs>? _categories;

        /// <summary>
        /// List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.
        /// </summary>
        public InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesGetArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesGetArgs>());
            set => _categories = value;
        }

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsDateRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsDateRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsDateRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsDateRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParserGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParserGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("arithmeticProcessor")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessorGetArgs>? ArithmeticProcessor { get; set; }

        [Input("attributeRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapperGetArgs>? AttributeRemapper { get; set; }

        [Input("categoryProcessor")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorGetArgs>? CategoryProcessor { get; set; }

        [Input("dateRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsDateRemapperGetArgs>? DateRemapper { get; set; }

        [Input("geoIpParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParserGetArgs>? GeoIpParser { get; set; }

        [Input("grokParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGetArgs>? GrokParser { get; set; }

        [Input("messageRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapperGetArgs>? MessageRemapper { get; set; }

        [Input("serviceRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapperGetArgs>? ServiceRemapper { get; set; }

        [Input("statusRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapperGetArgs>? StatusRemapper { get; set; }

        [Input("stringBuilderProcessor")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessorGetArgs>? StringBuilderProcessor { get; set; }

        [Input("traceIdRemapper")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapperGetArgs>? TraceIdRemapper { get; set; }

        [Input("urlParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsUrlParserGetArgs>? UrlParser { get; set; }

        [Input("userAgentParser")]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParserGetArgs>? UserAgentParser { get; set; }

        public LogsCustomPipelineProcessorsPipelineProcessorsGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGrokParserArgs : Pulumi.ResourceArgs
    {
        [Input("grok", required: true)]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrokArgs> Grok { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("samples")]
        private InputList<string>? _samples;

        /// <summary>
        /// List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.
        /// </summary>
        public InputList<string> Samples
        {
            get => _samples ?? (_samples = new InputList<string>());
            set => _samples = value;
        }

        /// <summary>
        /// Name of the log attribute to parse.
        /// * `grok`
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsGrokParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGetArgs : Pulumi.ResourceArgs
    {
        [Input("grok", required: true)]
        public Input<LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrokGetArgs> Grok { get; set; } = null!;

        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("samples")]
        private InputList<string>? _samples;

        /// <summary>
        /// List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.
        /// </summary>
        public InputList<string> Samples
        {
            get => _samples ?? (_samples = new InputList<string>());
            set => _samples = value;
        }

        /// <summary>
        /// Name of the log attribute to parse.
        /// * `grok`
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrokArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match rules for your grok parser.
        /// </summary>
        [Input("matchRules", required: true)]
        public Input<string> MatchRules { get; set; } = null!;

        /// <summary>
        /// Support rules for your grok parser.
        /// </summary>
        [Input("supportRules", required: true)]
        public Input<string> SupportRules { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrokArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrokGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match rules for your grok parser.
        /// </summary>
        [Input("matchRules", required: true)]
        public Input<string> MatchRules { get; set; } = null!;

        /// <summary>
        /// Support rules for your grok parser.
        /// </summary>
        [Input("supportRules", required: true)]
        public Input<string> SupportRules { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrokGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessorArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// The formula with one or more attributes and raw text.
        /// </summary>
        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessorArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessorGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// The formula with one or more attributes and raw text.
        /// </summary>
        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessorGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsUrlParserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Normalize the ending slashes or not.
        /// </summary>
        [Input("normalizeEndingSlashes")]
        public Input<bool>? NormalizeEndingSlashes { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsUrlParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsUrlParserGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Normalize the ending slashes or not.
        /// </summary>
        [Input("normalizeEndingSlashes")]
        public Input<bool>? NormalizeEndingSlashes { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsUrlParserGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If the source attribute is URL encoded or not.
        /// </summary>
        [Input("isEncoded")]
        public Input<bool>? IsEncoded { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParserGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If the source attribute is URL encoded or not.
        /// </summary>
        [Input("isEncoded")]
        public Input<bool>? IsEncoded { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParserGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsServiceRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsServiceRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsServiceRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsServiceRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsStatusRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsStatusRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsStatusRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsStatusRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsStringBuilderProcessorArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// The formula with one or more attributes and raw text.
        /// </summary>
        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        public LogsCustomPipelineProcessorsStringBuilderProcessorArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsStringBuilderProcessorGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        [Input("isReplaceMissing")]
        public Input<bool>? IsReplaceMissing { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        /// <summary>
        /// The formula with one or more attributes and raw text.
        /// </summary>
        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        public LogsCustomPipelineProcessorsStringBuilderProcessorGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsTraceIdRemapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsTraceIdRemapperArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsTraceIdRemapperGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        public LogsCustomPipelineProcessorsTraceIdRemapperGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsUrlParserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Normalize the ending slashes or not.
        /// </summary>
        [Input("normalizeEndingSlashes")]
        public Input<bool>? NormalizeEndingSlashes { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsUrlParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsUrlParserGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Normalize the ending slashes or not.
        /// </summary>
        [Input("normalizeEndingSlashes")]
        public Input<bool>? NormalizeEndingSlashes { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsUrlParserGetArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsUserAgentParserArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If the source attribute is URL encoded or not.
        /// </summary>
        [Input("isEncoded")]
        public Input<bool>? IsEncoded { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsUserAgentParserArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineProcessorsUserAgentParserGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// If the source attribute is URL encoded or not.
        /// </summary>
        [Input("isEncoded")]
        public Input<bool>? IsEncoded { get; set; }

        /// <summary>
        /// Name of the processor
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sources", required: true)]
        private InputList<string>? _sources;

        /// <summary>
        /// List of source attributes.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public LogsCustomPipelineProcessorsUserAgentParserGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class LogsCustomPipelineFilters
    {
        public readonly string Query;

        [OutputConstructor]
        private LogsCustomPipelineFilters(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessors
    {
        public readonly LogsCustomPipelineProcessorsArithmeticProcessor? ArithmeticProcessor;
        public readonly LogsCustomPipelineProcessorsAttributeRemapper? AttributeRemapper;
        public readonly LogsCustomPipelineProcessorsCategoryProcessor? CategoryProcessor;
        public readonly LogsCustomPipelineProcessorsDateRemapper? DateRemapper;
        public readonly LogsCustomPipelineProcessorsGeoIpParser? GeoIpParser;
        public readonly LogsCustomPipelineProcessorsGrokParser? GrokParser;
        public readonly LogsCustomPipelineProcessorsMessageRemapper? MessageRemapper;
        public readonly LogsCustomPipelineProcessorsPipeline? Pipeline;
        public readonly LogsCustomPipelineProcessorsServiceRemapper? ServiceRemapper;
        public readonly LogsCustomPipelineProcessorsStatusRemapper? StatusRemapper;
        public readonly LogsCustomPipelineProcessorsStringBuilderProcessor? StringBuilderProcessor;
        public readonly LogsCustomPipelineProcessorsTraceIdRemapper? TraceIdRemapper;
        public readonly LogsCustomPipelineProcessorsUrlParser? UrlParser;
        public readonly LogsCustomPipelineProcessorsUserAgentParser? UserAgentParser;

        [OutputConstructor]
        private LogsCustomPipelineProcessors(
            LogsCustomPipelineProcessorsArithmeticProcessor? arithmeticProcessor,
            LogsCustomPipelineProcessorsAttributeRemapper? attributeRemapper,
            LogsCustomPipelineProcessorsCategoryProcessor? categoryProcessor,
            LogsCustomPipelineProcessorsDateRemapper? dateRemapper,
            LogsCustomPipelineProcessorsGeoIpParser? geoIpParser,
            LogsCustomPipelineProcessorsGrokParser? grokParser,
            LogsCustomPipelineProcessorsMessageRemapper? messageRemapper,
            LogsCustomPipelineProcessorsPipeline? pipeline,
            LogsCustomPipelineProcessorsServiceRemapper? serviceRemapper,
            LogsCustomPipelineProcessorsStatusRemapper? statusRemapper,
            LogsCustomPipelineProcessorsStringBuilderProcessor? stringBuilderProcessor,
            LogsCustomPipelineProcessorsTraceIdRemapper? traceIdRemapper,
            LogsCustomPipelineProcessorsUrlParser? urlParser,
            LogsCustomPipelineProcessorsUserAgentParser? userAgentParser)
        {
            ArithmeticProcessor = arithmeticProcessor;
            AttributeRemapper = attributeRemapper;
            CategoryProcessor = categoryProcessor;
            DateRemapper = dateRemapper;
            GeoIpParser = geoIpParser;
            GrokParser = grokParser;
            MessageRemapper = messageRemapper;
            Pipeline = pipeline;
            ServiceRemapper = serviceRemapper;
            StatusRemapper = statusRemapper;
            StringBuilderProcessor = stringBuilderProcessor;
            TraceIdRemapper = traceIdRemapper;
            UrlParser = urlParser;
            UserAgentParser = userAgentParser;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsArithmeticProcessor
    {
        /// <summary>
        /// Arithmetic operation between one or more log attributes.
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        public readonly bool? IsReplaceMissing;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsArithmeticProcessor(
            string expression,
            bool? isEnabled,
            bool? isReplaceMissing,
            string? name,
            string target)
        {
            Expression = expression;
            IsEnabled = isEnabled;
            IsReplaceMissing = isReplaceMissing;
            Name = name;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsAttributeRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Override the target element if already set.
        /// </summary>
        public readonly bool? OverrideOnConflict;
        /// <summary>
        /// Remove or preserve the remapped source element.
        /// </summary>
        public readonly bool? PreserveSource;
        /// <summary>
        /// Defines where the sources are from (log `attribute` or `tag`). 
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// Defines if the target is a log `attribute` or `tag`.
        /// </summary>
        public readonly string TargetType;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsAttributeRemapper(
            bool? isEnabled,
            string? name,
            bool? overrideOnConflict,
            bool? preserveSource,
            string sourceType,
            ImmutableArray<string> sources,
            string target,
            string targetType)
        {
            IsEnabled = isEnabled;
            Name = name;
            OverrideOnConflict = overrideOnConflict;
            PreserveSource = preserveSource;
            SourceType = sourceType;
            Sources = sources;
            Target = target;
            TargetType = targetType;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsCategoryProcessor
    {
        /// <summary>
        /// List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.
        /// </summary>
        public readonly ImmutableArray<LogsCustomPipelineProcessorsCategoryProcessorCategories> Categories;
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsCategoryProcessor(
            ImmutableArray<LogsCustomPipelineProcessorsCategoryProcessorCategories> categories,
            bool? isEnabled,
            string? name,
            string target)
        {
            Categories = categories;
            IsEnabled = isEnabled;
            Name = name;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsCategoryProcessorCategories
    {
        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public readonly ImmutableArray<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFilters> Filters;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsCategoryProcessorCategories(
            ImmutableArray<LogsCustomPipelineProcessorsCategoryProcessorCategoriesFilters> filters,
            string name)
        {
            Filters = filters;
            Name = name;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsCategoryProcessorCategoriesFilters
    {
        public readonly string Query;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsCategoryProcessorCategoriesFilters(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsDateRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsDateRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsGeoIpParser
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsGeoIpParser(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources,
            string target)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsGrokParser
    {
        public readonly LogsCustomPipelineProcessorsGrokParserGrok Grok;
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.
        /// </summary>
        public readonly ImmutableArray<string> Samples;
        /// <summary>
        /// Name of the log attribute to parse.
        /// * `grok`
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsGrokParser(
            LogsCustomPipelineProcessorsGrokParserGrok grok,
            bool? isEnabled,
            string? name,
            ImmutableArray<string> samples,
            string source)
        {
            Grok = grok;
            IsEnabled = isEnabled;
            Name = name;
            Samples = samples;
            Source = source;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsGrokParserGrok
    {
        /// <summary>
        /// Match rules for your grok parser.
        /// </summary>
        public readonly string MatchRules;
        /// <summary>
        /// Support rules for your grok parser.
        /// </summary>
        public readonly string SupportRules;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsGrokParserGrok(
            string matchRules,
            string supportRules)
        {
            MatchRules = matchRules;
            SupportRules = supportRules;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsMessageRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsMessageRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipeline
    {
        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public readonly ImmutableArray<LogsCustomPipelineProcessorsPipelineFilters> Filters;
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Processors. Nested pipeline can't take any other nested pipeline as its processor.
        /// </summary>
        public readonly ImmutableArray<LogsCustomPipelineProcessorsPipelineProcessors> Processors;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipeline(
            ImmutableArray<LogsCustomPipelineProcessorsPipelineFilters> filters,
            bool? isEnabled,
            string name,
            ImmutableArray<LogsCustomPipelineProcessorsPipelineProcessors> processors)
        {
            Filters = filters;
            IsEnabled = isEnabled;
            Name = name;
            Processors = processors;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineFilters
    {
        public readonly string Query;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineFilters(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessors
    {
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessor? ArithmeticProcessor;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapper? AttributeRemapper;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessor? CategoryProcessor;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsDateRemapper? DateRemapper;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParser? GeoIpParser;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsGrokParser? GrokParser;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapper? MessageRemapper;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapper? ServiceRemapper;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapper? StatusRemapper;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessor? StringBuilderProcessor;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapper? TraceIdRemapper;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsUrlParser? UrlParser;
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParser? UserAgentParser;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessors(
            LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessor? arithmeticProcessor,
            LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapper? attributeRemapper,
            LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessor? categoryProcessor,
            LogsCustomPipelineProcessorsPipelineProcessorsDateRemapper? dateRemapper,
            LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParser? geoIpParser,
            LogsCustomPipelineProcessorsPipelineProcessorsGrokParser? grokParser,
            LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapper? messageRemapper,
            LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapper? serviceRemapper,
            LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapper? statusRemapper,
            LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessor? stringBuilderProcessor,
            LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapper? traceIdRemapper,
            LogsCustomPipelineProcessorsPipelineProcessorsUrlParser? urlParser,
            LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParser? userAgentParser)
        {
            ArithmeticProcessor = arithmeticProcessor;
            AttributeRemapper = attributeRemapper;
            CategoryProcessor = categoryProcessor;
            DateRemapper = dateRemapper;
            GeoIpParser = geoIpParser;
            GrokParser = grokParser;
            MessageRemapper = messageRemapper;
            ServiceRemapper = serviceRemapper;
            StatusRemapper = statusRemapper;
            StringBuilderProcessor = stringBuilderProcessor;
            TraceIdRemapper = traceIdRemapper;
            UrlParser = urlParser;
            UserAgentParser = userAgentParser;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessor
    {
        /// <summary>
        /// Arithmetic operation between one or more log attributes.
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        public readonly bool? IsReplaceMissing;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsArithmeticProcessor(
            string expression,
            bool? isEnabled,
            bool? isReplaceMissing,
            string? name,
            string target)
        {
            Expression = expression;
            IsEnabled = isEnabled;
            IsReplaceMissing = isReplaceMissing;
            Name = name;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Override the target element if already set.
        /// </summary>
        public readonly bool? OverrideOnConflict;
        /// <summary>
        /// Remove or preserve the remapped source element.
        /// </summary>
        public readonly bool? PreserveSource;
        /// <summary>
        /// Defines where the sources are from (log `attribute` or `tag`). 
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// Defines if the target is a log `attribute` or `tag`.
        /// </summary>
        public readonly string TargetType;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsAttributeRemapper(
            bool? isEnabled,
            string? name,
            bool? overrideOnConflict,
            bool? preserveSource,
            string sourceType,
            ImmutableArray<string> sources,
            string target,
            string targetType)
        {
            IsEnabled = isEnabled;
            Name = name;
            OverrideOnConflict = overrideOnConflict;
            PreserveSource = preserveSource;
            SourceType = sourceType;
            Sources = sources;
            Target = target;
            TargetType = targetType;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessor
    {
        /// <summary>
        /// List of filters to match or exclude a log with their corresponding name to assign a custom value to the log.
        /// </summary>
        public readonly ImmutableArray<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategories> Categories;
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessor(
            ImmutableArray<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategories> categories,
            bool? isEnabled,
            string? name,
            string target)
        {
            Categories = categories;
            IsEnabled = isEnabled;
            Name = name;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategories
    {
        /// <summary>
        /// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
        /// </summary>
        public readonly ImmutableArray<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFilters> Filters;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategories(
            ImmutableArray<LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFilters> filters,
            string name)
        {
            Filters = filters;
            Name = name;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFilters
    {
        public readonly string Query;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsCategoryProcessorCategoriesFilters(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsDateRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsDateRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParser
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsGeoIpParser(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources,
            string target)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGrokParser
    {
        public readonly LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrok Grok;
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of sample logs for this parser. It can save up to 5 samples. Each sample takes up to 5000 characters.
        /// </summary>
        public readonly ImmutableArray<string> Samples;
        /// <summary>
        /// Name of the log attribute to parse.
        /// * `grok`
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsGrokParser(
            LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrok grok,
            bool? isEnabled,
            string? name,
            ImmutableArray<string> samples,
            string source)
        {
            Grok = grok;
            IsEnabled = isEnabled;
            Name = name;
            Samples = samples;
            Source = source;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrok
    {
        /// <summary>
        /// Match rules for your grok parser.
        /// </summary>
        public readonly string MatchRules;
        /// <summary>
        /// Support rules for your grok parser.
        /// </summary>
        public readonly string SupportRules;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsGrokParserGrok(
            string matchRules,
            string supportRules)
        {
            MatchRules = matchRules;
            SupportRules = supportRules;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsMessageRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsServiceRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsStatusRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessor
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        public readonly bool? IsReplaceMissing;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// The formula with one or more attributes and raw text.
        /// </summary>
        public readonly string Template;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsStringBuilderProcessor(
            bool? isEnabled,
            bool? isReplaceMissing,
            string? name,
            string target,
            string template)
        {
            IsEnabled = isEnabled;
            IsReplaceMissing = isReplaceMissing;
            Name = name;
            Target = target;
            Template = template;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsTraceIdRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsUrlParser
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Normalize the ending slashes or not.
        /// </summary>
        public readonly bool? NormalizeEndingSlashes;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsUrlParser(
            bool? isEnabled,
            string? name,
            bool? normalizeEndingSlashes,
            ImmutableArray<string> sources,
            string target)
        {
            IsEnabled = isEnabled;
            Name = name;
            NormalizeEndingSlashes = normalizeEndingSlashes;
            Sources = sources;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParser
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// If the source attribute is URL encoded or not.
        /// </summary>
        public readonly bool? IsEncoded;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsPipelineProcessorsUserAgentParser(
            bool? isEnabled,
            bool? isEncoded,
            string? name,
            ImmutableArray<string> sources,
            string target)
        {
            IsEnabled = isEnabled;
            IsEncoded = isEncoded;
            Name = name;
            Sources = sources;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsServiceRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsServiceRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsStatusRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsStatusRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsStringBuilderProcessor
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// If it replaces all missing attributes of `template` by an empty string.
        /// * trace_id_remapper
        /// </summary>
        public readonly bool? IsReplaceMissing;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;
        /// <summary>
        /// The formula with one or more attributes and raw text.
        /// </summary>
        public readonly string Template;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsStringBuilderProcessor(
            bool? isEnabled,
            bool? isReplaceMissing,
            string? name,
            string target,
            string template)
        {
            IsEnabled = isEnabled;
            IsReplaceMissing = isReplaceMissing;
            Name = name;
            Target = target;
            Template = template;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsTraceIdRemapper
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsTraceIdRemapper(
            bool? isEnabled,
            string? name,
            ImmutableArray<string> sources)
        {
            IsEnabled = isEnabled;
            Name = name;
            Sources = sources;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsUrlParser
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Normalize the ending slashes or not.
        /// </summary>
        public readonly bool? NormalizeEndingSlashes;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsUrlParser(
            bool? isEnabled,
            string? name,
            bool? normalizeEndingSlashes,
            ImmutableArray<string> sources,
            string target)
        {
            IsEnabled = isEnabled;
            Name = name;
            NormalizeEndingSlashes = normalizeEndingSlashes;
            Sources = sources;
            Target = target;
        }
    }

    [OutputType]
    public sealed class LogsCustomPipelineProcessorsUserAgentParser
    {
        /// <summary>
        /// If the processor is enabled or not.
        /// </summary>
        public readonly bool? IsEnabled;
        /// <summary>
        /// If the source attribute is URL encoded or not.
        /// </summary>
        public readonly bool? IsEncoded;
        /// <summary>
        /// Name of the processor
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of source attributes.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Name of the parent attribute that contains all the extracted details from the sources.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private LogsCustomPipelineProcessorsUserAgentParser(
            bool? isEnabled,
            bool? isEncoded,
            string? name,
            ImmutableArray<string> sources,
            string target)
        {
            IsEnabled = isEnabled;
            IsEncoded = isEncoded;
            Name = name;
            Sources = sources;
            Target = target;
        }
    }
    }
}
