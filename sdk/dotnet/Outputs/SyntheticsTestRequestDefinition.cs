// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class SyntheticsTestRequestDefinition
    {
        public readonly string? Body;
        public readonly ImmutableArray<string> CertificateDomains;
        public readonly string? DnsServer;
        public readonly int? DnsServerPort;
        public readonly string? Host;
        public readonly string? Message;
        public readonly string? Method;
        public readonly bool? NoSavingResponseBody;
        public readonly int? NumberOfPackets;
        public readonly int? Port;
        public readonly string? Servername;
        public readonly string? Service;
        public readonly bool? ShouldTrackHops;
        public readonly int? Timeout;
        public readonly string? Url;

        [OutputConstructor]
        private SyntheticsTestRequestDefinition(
            string? body,

            ImmutableArray<string> certificateDomains,

            string? dnsServer,

            int? dnsServerPort,

            string? host,

            string? message,

            string? method,

            bool? noSavingResponseBody,

            int? numberOfPackets,

            int? port,

            string? servername,

            string? service,

            bool? shouldTrackHops,

            int? timeout,

            string? url)
        {
            Body = body;
            CertificateDomains = certificateDomains;
            DnsServer = dnsServer;
            DnsServerPort = dnsServerPort;
            Host = host;
            Message = message;
            Method = method;
            NoSavingResponseBody = noSavingResponseBody;
            NumberOfPackets = numberOfPackets;
            Port = port;
            Servername = servername;
            Service = service;
            ShouldTrackHops = shouldTrackHops;
            Timeout = timeout;
            Url = url;
        }
    }
}
