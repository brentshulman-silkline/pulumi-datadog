// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition
    {
        public readonly ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent> Events;
        public readonly string? LegendSize;
        /// <summary>
        /// Nested block describing the marker to use when displaying the widget. The structure of this block is described below. Multiple marker blocks are allowed within a given tile_def block.
        /// - `title`: (Optional) The title of the widget.
        /// - `title_size`: (Optional) The size of the widget's title. Default is 16.
        /// - `title_align`: (Optional) The alignment of the widget's title. One of "left", "center", or "right".
        /// - `time`: (Optional) Nested block describing the timeframe to use when displaying the widget. The structure of this block is described below.
        /// - `show_legend`: (Optional) Whether or not to show the legend on this widget.
        /// - `legend_size`: (Optional) The size of the legend displayed in the widget.
        /// - `event`: (Optional) The definition of the event to overlay on the graph. Includes the following structure:
        /// - `q`: (Required) The event query to use in the widget.
        /// - `tags_execution`: (Optional) The execution method for multi-value filters.
        /// - `yaxis`: (Optional) Nested block describing the Y-Axis Controls. The structure of this block is described below
        /// - `toplist_definition`: The definition for a Toplist  widget. Exactly one nested block is allowed with the following structure:
        /// - `request`: (Required) Nested block describing the request to use when displaying the widget. Multiple request blocks are allowed with the following structure (exactly only one of `q`, `apm_query`, `log_query` or `process_query` is required within the request block):
        /// - `q`: (Optional) The metric query to use in the widget.
        /// - `apm_query`: (Optional) The APM query to use in the widget. The structure of this block is described below.
        /// - `log_query`: (Optional) The log query to use in the widget. The structure of this block is described below.
        /// - `process_query`: (Optional) The process query to use in the widget. The structure of this block is described below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker> Markers;
        public readonly ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest> Requests;
        public readonly bool? ShowLegend;
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime? Time;
        /// <summary>
        /// Title of the dashboard.
        /// </summary>
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis? Yaxis;

        [OutputConstructor]
        private DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition(
            ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent> events,

            string? legendSize,

            ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker> markers,

            ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest> requests,

            bool? showLegend,

            Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime? time,

            string? title,

            string? titleAlign,

            string? titleSize,

            Outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis? yaxis)
        {
            Events = events;
            LegendSize = legendSize;
            Markers = markers;
            Requests = requests;
            ShowLegend = showLegend;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Yaxis = yaxis;
        }
    }
}
