// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetServiceLevelObjectives
    {
        /// <summary>
        /// Use this data source to retrieve information about multiple SLOs for use in other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var ftFooSlos = Output.Create(Datadog.GetServiceLevelObjectives.InvokeAsync(new Datadog.GetServiceLevelObjectivesArgs
        ///         {
        ///             TagsQuery = "owner:ft-foo",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceLevelObjectivesResult> InvokeAsync(GetServiceLevelObjectivesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceLevelObjectivesResult>("datadog:index/getServiceLevelObjectives:getServiceLevelObjectives", args ?? new GetServiceLevelObjectivesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about multiple SLOs for use in other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var ftFooSlos = Output.Create(Datadog.GetServiceLevelObjectives.InvokeAsync(new Datadog.GetServiceLevelObjectivesArgs
        ///         {
        ///             TagsQuery = "owner:ft-foo",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceLevelObjectivesResult> Invoke(GetServiceLevelObjectivesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceLevelObjectivesResult>("datadog:index/getServiceLevelObjectives:getServiceLevelObjectives", args ?? new GetServiceLevelObjectivesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceLevelObjectivesArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("metricsQuery")]
        public string? MetricsQuery { get; set; }

        [Input("nameQuery")]
        public string? NameQuery { get; set; }

        [Input("tagsQuery")]
        public string? TagsQuery { get; set; }

        public GetServiceLevelObjectivesArgs()
        {
        }
    }

    public sealed class GetServiceLevelObjectivesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("metricsQuery")]
        public Input<string>? MetricsQuery { get; set; }

        [Input("nameQuery")]
        public Input<string>? NameQuery { get; set; }

        [Input("tagsQuery")]
        public Input<string>? TagsQuery { get; set; }

        public GetServiceLevelObjectivesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceLevelObjectivesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? MetricsQuery;
        public readonly string? NameQuery;
        public readonly ImmutableArray<Outputs.GetServiceLevelObjectivesSloResult> Slos;
        public readonly string? TagsQuery;

        [OutputConstructor]
        private GetServiceLevelObjectivesResult(
            string id,

            ImmutableArray<string> ids,

            string? metricsQuery,

            string? nameQuery,

            ImmutableArray<Outputs.GetServiceLevelObjectivesSloResult> slos,

            string? tagsQuery)
        {
            Id = id;
            Ids = ids;
            MetricsQuery = metricsQuery;
            NameQuery = nameQuery;
            Slos = slos;
            TagsQuery = tagsQuery;
        }
    }
}
