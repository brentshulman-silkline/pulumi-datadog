// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog timeboard resource. This can be used to create and manage Datadog timeboards.
    /// 
    /// &gt; **Note:**This resource is outdated. Use the new `datadog..Dashboard` resource instead.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-datadog/blob/master/website/docs/r/timeboard.html.markdown.
    /// </summary>
    public partial class TimeBoard : Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the dashboard's content.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// A list of graph definitions.
        /// </summary>
        [Output("graphs")]
        public Output<ImmutableArray<Outputs.TimeBoardGraphs>> Graphs { get; private set; } = null!;

        [Output("readOnly")]
        public Output<bool?> ReadOnly { get; private set; } = null!;

        /// <summary>
        /// A list of template variables for using Dashboard templating.
        /// </summary>
        [Output("templateVariables")]
        public Output<ImmutableArray<Outputs.TimeBoardTemplateVariables>> TemplateVariables { get; private set; } = null!;

        /// <summary>
        /// The name of the dashboard.
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a TimeBoard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TimeBoard(string name, TimeBoardArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/timeBoard:TimeBoard", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private TimeBoard(string name, Input<string> id, TimeBoardState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/timeBoard:TimeBoard", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TimeBoard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TimeBoard Get(string name, Input<string> id, TimeBoardState? state = null, CustomResourceOptions? options = null)
        {
            return new TimeBoard(name, id, state, options);
        }
    }

    public sealed class TimeBoardArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the dashboard's content.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("graphs", required: true)]
        private InputList<Inputs.TimeBoardGraphsArgs>? _graphs;

        /// <summary>
        /// A list of graph definitions.
        /// </summary>
        public InputList<Inputs.TimeBoardGraphsArgs> Graphs
        {
            get => _graphs ?? (_graphs = new InputList<Inputs.TimeBoardGraphsArgs>());
            set => _graphs = value;
        }

        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        [Input("templateVariables")]
        private InputList<Inputs.TimeBoardTemplateVariablesArgs>? _templateVariables;

        /// <summary>
        /// A list of template variables for using Dashboard templating.
        /// </summary>
        public InputList<Inputs.TimeBoardTemplateVariablesArgs> TemplateVariables
        {
            get => _templateVariables ?? (_templateVariables = new InputList<Inputs.TimeBoardTemplateVariablesArgs>());
            set => _templateVariables = value;
        }

        /// <summary>
        /// The name of the dashboard.
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public TimeBoardArgs()
        {
        }
    }

    public sealed class TimeBoardState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the dashboard's content.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("graphs")]
        private InputList<Inputs.TimeBoardGraphsGetArgs>? _graphs;

        /// <summary>
        /// A list of graph definitions.
        /// </summary>
        public InputList<Inputs.TimeBoardGraphsGetArgs> Graphs
        {
            get => _graphs ?? (_graphs = new InputList<Inputs.TimeBoardGraphsGetArgs>());
            set => _graphs = value;
        }

        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        [Input("templateVariables")]
        private InputList<Inputs.TimeBoardTemplateVariablesGetArgs>? _templateVariables;

        /// <summary>
        /// A list of template variables for using Dashboard templating.
        /// </summary>
        public InputList<Inputs.TimeBoardTemplateVariablesGetArgs> TemplateVariables
        {
            get => _templateVariables ?? (_templateVariables = new InputList<Inputs.TimeBoardTemplateVariablesGetArgs>());
            set => _templateVariables = value;
        }

        /// <summary>
        /// The name of the dashboard.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public TimeBoardState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class TimeBoardGraphsArgs : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<bool>? Autoscale { get; set; }

        [Input("customUnit")]
        public Input<string>? CustomUnit { get; set; }

        [Input("events")]
        private InputList<string>? _events;
        public InputList<string> Events
        {
            get => _events ?? (_events = new InputList<string>());
            set => _events = value;
        }

        [Input("groups")]
        private InputList<string>? _groups;
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        [Input("includeNoMetricHosts")]
        public Input<bool>? IncludeNoMetricHosts { get; set; }

        [Input("includeUngroupedHosts")]
        public Input<bool>? IncludeUngroupedHosts { get; set; }

        [Input("markers")]
        private InputList<TimeBoardGraphsMarkersArgs>? _markers;
        public InputList<TimeBoardGraphsMarkersArgs> Markers
        {
            get => _markers ?? (_markers = new InputList<TimeBoardGraphsMarkersArgs>());
            set => _markers = value;
        }

        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("precision")]
        public Input<string>? Precision { get; set; }

        [Input("requests", required: true)]
        private InputList<TimeBoardGraphsRequestsArgs>? _requests;
        public InputList<TimeBoardGraphsRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<TimeBoardGraphsRequestsArgs>());
            set => _requests = value;
        }

        [Input("scopes")]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("style")]
        private InputMap<object>? _style;
        public InputMap<object> Style
        {
            get => _style ?? (_style = new InputMap<object>());
            set => _style = value;
        }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        [Input("viz", required: true)]
        public Input<string> Viz { get; set; } = null!;

        [Input("yaxis")]
        private InputMap<object>? _yaxis;
        public InputMap<object> Yaxis
        {
            get => _yaxis ?? (_yaxis = new InputMap<object>());
            set => _yaxis = value;
        }

        public TimeBoardGraphsArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<bool>? Autoscale { get; set; }

        [Input("customUnit")]
        public Input<string>? CustomUnit { get; set; }

        [Input("events")]
        private InputList<string>? _events;
        public InputList<string> Events
        {
            get => _events ?? (_events = new InputList<string>());
            set => _events = value;
        }

        [Input("groups")]
        private InputList<string>? _groups;
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        [Input("includeNoMetricHosts")]
        public Input<bool>? IncludeNoMetricHosts { get; set; }

        [Input("includeUngroupedHosts")]
        public Input<bool>? IncludeUngroupedHosts { get; set; }

        [Input("markers")]
        private InputList<TimeBoardGraphsMarkersGetArgs>? _markers;
        public InputList<TimeBoardGraphsMarkersGetArgs> Markers
        {
            get => _markers ?? (_markers = new InputList<TimeBoardGraphsMarkersGetArgs>());
            set => _markers = value;
        }

        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("precision")]
        public Input<string>? Precision { get; set; }

        [Input("requests", required: true)]
        private InputList<TimeBoardGraphsRequestsGetArgs>? _requests;
        public InputList<TimeBoardGraphsRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<TimeBoardGraphsRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("scopes")]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("style")]
        private InputMap<object>? _style;
        public InputMap<object> Style
        {
            get => _style ?? (_style = new InputMap<object>());
            set => _style = value;
        }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        [Input("viz", required: true)]
        public Input<string> Viz { get; set; } = null!;

        [Input("yaxis")]
        private InputMap<object>? _yaxis;
        public InputMap<object> Yaxis
        {
            get => _yaxis ?? (_yaxis = new InputMap<object>());
            set => _yaxis = value;
        }

        public TimeBoardGraphsGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsMarkersArgs : Pulumi.ResourceArgs
    {
        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public TimeBoardGraphsMarkersArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsMarkersGetArgs : Pulumi.ResourceArgs
    {
        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public TimeBoardGraphsMarkersGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<TimeBoardGraphsRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<TimeBoardGraphsRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<TimeBoardGraphsRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<TimeBoardGraphsRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<TimeBoardGraphsRequestsApmQuerySearchArgs>? Search { get; set; }

        public TimeBoardGraphsRequestsApmQueryArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public TimeBoardGraphsRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public TimeBoardGraphsRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<TimeBoardGraphsRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<TimeBoardGraphsRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<TimeBoardGraphsRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<TimeBoardGraphsRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<TimeBoardGraphsRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public TimeBoardGraphsRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet", required: true)]
        public Input<string> Facet { get; set; } = null!;

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<TimeBoardGraphsRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public TimeBoardGraphsRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet", required: true)]
        public Input<string> Facet { get; set; } = null!;

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<TimeBoardGraphsRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public TimeBoardGraphsRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public TimeBoardGraphsRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public TimeBoardGraphsRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public TimeBoardGraphsRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public TimeBoardGraphsRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<TimeBoardGraphsRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("changeType")]
        public Input<string>? ChangeType { get; set; }

        [Input("compareTo")]
        public Input<string>? CompareTo { get; set; }

        [Input("conditionalFormats")]
        private InputList<TimeBoardGraphsRequestsConditionalFormatsArgs>? _conditionalFormats;
        public InputList<TimeBoardGraphsRequestsConditionalFormatsArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<TimeBoardGraphsRequestsConditionalFormatsArgs>());
            set => _conditionalFormats = value;
        }

        [Input("extraCol")]
        public Input<string>? ExtraCol { get; set; }

        [Input("increaseGood")]
        public Input<bool>? IncreaseGood { get; set; }

        [Input("logQuery")]
        public Input<TimeBoardGraphsRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("metadataJson")]
        public Input<string>? MetadataJson { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderDirection")]
        public Input<string>? OrderDirection { get; set; }

        [Input("processQuery")]
        public Input<TimeBoardGraphsRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("stacked")]
        public Input<bool>? Stacked { get; set; }

        [Input("style")]
        private InputMap<object>? _style;
        public InputMap<object> Style
        {
            get => _style ?? (_style = new InputMap<object>());
            set => _style = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public TimeBoardGraphsRequestsArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsConditionalFormatsArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public TimeBoardGraphsRequestsConditionalFormatsArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsConditionalFormatsGetArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public TimeBoardGraphsRequestsConditionalFormatsGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<TimeBoardGraphsRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("changeType")]
        public Input<string>? ChangeType { get; set; }

        [Input("compareTo")]
        public Input<string>? CompareTo { get; set; }

        [Input("conditionalFormats")]
        private InputList<TimeBoardGraphsRequestsConditionalFormatsGetArgs>? _conditionalFormats;
        public InputList<TimeBoardGraphsRequestsConditionalFormatsGetArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<TimeBoardGraphsRequestsConditionalFormatsGetArgs>());
            set => _conditionalFormats = value;
        }

        [Input("extraCol")]
        public Input<string>? ExtraCol { get; set; }

        [Input("increaseGood")]
        public Input<bool>? IncreaseGood { get; set; }

        [Input("logQuery")]
        public Input<TimeBoardGraphsRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("metadataJson")]
        public Input<string>? MetadataJson { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderDirection")]
        public Input<string>? OrderDirection { get; set; }

        [Input("processQuery")]
        public Input<TimeBoardGraphsRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("stacked")]
        public Input<bool>? Stacked { get; set; }

        [Input("style")]
        private InputMap<object>? _style;
        public InputMap<object> Style
        {
            get => _style ?? (_style = new InputMap<object>());
            set => _style = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public TimeBoardGraphsRequestsGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<TimeBoardGraphsRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<TimeBoardGraphsRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<TimeBoardGraphsRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<TimeBoardGraphsRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<TimeBoardGraphsRequestsLogQuerySearchArgs>? Search { get; set; }

        public TimeBoardGraphsRequestsLogQueryArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public TimeBoardGraphsRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public TimeBoardGraphsRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<TimeBoardGraphsRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<TimeBoardGraphsRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<TimeBoardGraphsRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<TimeBoardGraphsRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<TimeBoardGraphsRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public TimeBoardGraphsRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet", required: true)]
        public Input<string> Facet { get; set; } = null!;

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<TimeBoardGraphsRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public TimeBoardGraphsRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet", required: true)]
        public Input<string> Facet { get; set; } = null!;

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<TimeBoardGraphsRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public TimeBoardGraphsRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public TimeBoardGraphsRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public TimeBoardGraphsRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public TimeBoardGraphsRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public TimeBoardGraphsRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public TimeBoardGraphsRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class TimeBoardGraphsRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public TimeBoardGraphsRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class TimeBoardTemplateVariablesArgs : Pulumi.ResourceArgs
    {
        [Input("default")]
        public Input<string>? Default { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public TimeBoardTemplateVariablesArgs()
        {
        }
    }

    public sealed class TimeBoardTemplateVariablesGetArgs : Pulumi.ResourceArgs
    {
        [Input("default")]
        public Input<string>? Default { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public TimeBoardTemplateVariablesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class TimeBoardGraphs
    {
        public readonly bool? Autoscale;
        public readonly string? CustomUnit;
        public readonly ImmutableArray<string> Events;
        public readonly ImmutableArray<string> Groups;
        public readonly bool? IncludeNoMetricHosts;
        public readonly bool? IncludeUngroupedHosts;
        public readonly ImmutableArray<TimeBoardGraphsMarkers> Markers;
        public readonly string? NodeType;
        public readonly string? Precision;
        public readonly ImmutableArray<TimeBoardGraphsRequests> Requests;
        public readonly ImmutableArray<string> Scopes;
        public readonly ImmutableDictionary<string, object>? Style;
        public readonly string? TextAlign;
        public readonly string Title;
        public readonly string Viz;
        public readonly ImmutableDictionary<string, object>? Yaxis;

        [OutputConstructor]
        private TimeBoardGraphs(
            bool? autoscale,
            string? customUnit,
            ImmutableArray<string> events,
            ImmutableArray<string> groups,
            bool? includeNoMetricHosts,
            bool? includeUngroupedHosts,
            ImmutableArray<TimeBoardGraphsMarkers> markers,
            string? nodeType,
            string? precision,
            ImmutableArray<TimeBoardGraphsRequests> requests,
            ImmutableArray<string> scopes,
            ImmutableDictionary<string, object>? style,
            string? textAlign,
            string title,
            string viz,
            ImmutableDictionary<string, object>? yaxis)
        {
            Autoscale = autoscale;
            CustomUnit = customUnit;
            Events = events;
            Groups = groups;
            IncludeNoMetricHosts = includeNoMetricHosts;
            IncludeUngroupedHosts = includeUngroupedHosts;
            Markers = markers;
            NodeType = nodeType;
            Precision = precision;
            Requests = requests;
            Scopes = scopes;
            Style = style;
            TextAlign = textAlign;
            Title = title;
            Viz = viz;
            Yaxis = yaxis;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsMarkers
    {
        public readonly string? Label;
        public readonly string Type;
        public readonly string Value;

        [OutputConstructor]
        private TimeBoardGraphsMarkers(
            string? label,
            string type,
            string value)
        {
            Label = label;
            Type = type;
            Value = value;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequests
    {
        public readonly string? Aggregator;
        public readonly TimeBoardGraphsRequestsApmQuery? ApmQuery;
        public readonly string? ChangeType;
        public readonly string? CompareTo;
        public readonly ImmutableArray<TimeBoardGraphsRequestsConditionalFormats> ConditionalFormats;
        public readonly string? ExtraCol;
        public readonly bool? IncreaseGood;
        public readonly TimeBoardGraphsRequestsLogQuery? LogQuery;
        public readonly string? MetadataJson;
        public readonly string? OrderBy;
        public readonly string? OrderDirection;
        public readonly TimeBoardGraphsRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly bool? Stacked;
        public readonly ImmutableDictionary<string, object>? Style;
        public readonly string? Type;

        [OutputConstructor]
        private TimeBoardGraphsRequests(
            string? aggregator,
            TimeBoardGraphsRequestsApmQuery? apmQuery,
            string? changeType,
            string? compareTo,
            ImmutableArray<TimeBoardGraphsRequestsConditionalFormats> conditionalFormats,
            string? extraCol,
            bool? increaseGood,
            TimeBoardGraphsRequestsLogQuery? logQuery,
            string? metadataJson,
            string? orderBy,
            string? orderDirection,
            TimeBoardGraphsRequestsProcessQuery? processQuery,
            string? q,
            bool? stacked,
            ImmutableDictionary<string, object>? style,
            string? type)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            ChangeType = changeType;
            CompareTo = compareTo;
            ConditionalFormats = conditionalFormats;
            ExtraCol = extraCol;
            IncreaseGood = increaseGood;
            LogQuery = logQuery;
            MetadataJson = metadataJson;
            OrderBy = orderBy;
            OrderDirection = orderDirection;
            ProcessQuery = processQuery;
            Q = q;
            Stacked = stacked;
            Style = style;
            Type = type;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsApmQuery
    {
        public readonly TimeBoardGraphsRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<TimeBoardGraphsRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly TimeBoardGraphsRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private TimeBoardGraphsRequestsApmQuery(
            TimeBoardGraphsRequestsApmQueryCompute compute,
            ImmutableArray<TimeBoardGraphsRequestsApmQueryGroupBies> groupBies,
            string index,
            TimeBoardGraphsRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private TimeBoardGraphsRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsApmQueryGroupBies
    {
        public readonly string Facet;
        public readonly int? Limit;
        public readonly TimeBoardGraphsRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private TimeBoardGraphsRequestsApmQueryGroupBies(
            string facet,
            int? limit,
            TimeBoardGraphsRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private TimeBoardGraphsRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private TimeBoardGraphsRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsConditionalFormats
    {
        public readonly string Comparator;
        public readonly string? CustomBgColor;
        public readonly string? CustomFgColor;
        public readonly string? Palette;
        public readonly string? Value;

        [OutputConstructor]
        private TimeBoardGraphsRequestsConditionalFormats(
            string comparator,
            string? customBgColor,
            string? customFgColor,
            string? palette,
            string? value)
        {
            Comparator = comparator;
            CustomBgColor = customBgColor;
            CustomFgColor = customFgColor;
            Palette = palette;
            Value = value;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsLogQuery
    {
        public readonly TimeBoardGraphsRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<TimeBoardGraphsRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly TimeBoardGraphsRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private TimeBoardGraphsRequestsLogQuery(
            TimeBoardGraphsRequestsLogQueryCompute compute,
            ImmutableArray<TimeBoardGraphsRequestsLogQueryGroupBies> groupBies,
            string index,
            TimeBoardGraphsRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private TimeBoardGraphsRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsLogQueryGroupBies
    {
        public readonly string Facet;
        public readonly int? Limit;
        public readonly TimeBoardGraphsRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private TimeBoardGraphsRequestsLogQueryGroupBies(
            string facet,
            int? limit,
            TimeBoardGraphsRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private TimeBoardGraphsRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private TimeBoardGraphsRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class TimeBoardGraphsRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private TimeBoardGraphsRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class TimeBoardTemplateVariables
    {
        public readonly string? Default;
        public readonly string Name;
        public readonly string? Prefix;

        [OutputConstructor]
        private TimeBoardTemplateVariables(
            string? @default,
            string name,
            string? prefix)
        {
            Default = @default;
            Name = name;
            Prefix = prefix;
        }
    }
    }
}
