// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog dashboard resource. This can be used to create and manage Datadog dashboards.
    /// 
    /// &gt; **Note:** This resource uses the new [Dashboard API](https://docs.datadoghq.com/api/#dashboards) which adds new features like better validation and support for the [Group widget](https://docs.datadoghq.com/graphing/widgets/group/). Additionally, this resource unifies `datadog..TimeBoard` and `datadog..ScreenBoard` resources to allow you to manage all of your dashboards using a single format.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-datadog/blob/master/website/docs/r/dashboard.html.markdown.
    /// </summary>
    public partial class Dashboard : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the dashboard.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether this dashboard is read-only.
        /// </summary>
        [Output("isReadOnly")]
        public Output<bool?> IsReadOnly { get; private set; } = null!;

        /// <summary>
        /// The layout type of the dashboard, either 'free' or 'ordered'.
        /// </summary>
        [Output("layoutType")]
        public Output<string> LayoutType { get; private set; } = null!;

        /// <summary>
        /// The list of handles of users to notify when changes are made to this dashboard.
        /// </summary>
        [Output("notifyLists")]
        public Output<ImmutableArray<string>> NotifyLists { get; private set; } = null!;

        /// <summary>
        /// The list of template variables for this dashboard.
        /// </summary>
        [Output("templateVariables")]
        public Output<ImmutableArray<Outputs.DashboardTemplateVariables>> TemplateVariables { get; private set; } = null!;

        /// <summary>
        /// The title of the dashboard.
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        /// <summary>
        /// The list of widgets to display on the dashboard.
        /// </summary>
        [Output("widgets")]
        public Output<ImmutableArray<Outputs.DashboardWidgets>> Widgets { get; private set; } = null!;


        /// <summary>
        /// Create a Dashboard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Dashboard(string name, DashboardArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/dashboard:Dashboard", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Dashboard(string name, Input<string> id, DashboardState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/dashboard:Dashboard", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Dashboard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Dashboard Get(string name, Input<string> id, DashboardState? state = null, CustomResourceOptions? options = null)
        {
            return new Dashboard(name, id, state, options);
        }
    }

    public sealed class DashboardArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the dashboard.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether this dashboard is read-only.
        /// </summary>
        [Input("isReadOnly")]
        public Input<bool>? IsReadOnly { get; set; }

        /// <summary>
        /// The layout type of the dashboard, either 'free' or 'ordered'.
        /// </summary>
        [Input("layoutType", required: true)]
        public Input<string> LayoutType { get; set; } = null!;

        [Input("notifyLists")]
        private InputList<string>? _notifyLists;

        /// <summary>
        /// The list of handles of users to notify when changes are made to this dashboard.
        /// </summary>
        public InputList<string> NotifyLists
        {
            get => _notifyLists ?? (_notifyLists = new InputList<string>());
            set => _notifyLists = value;
        }

        [Input("templateVariables")]
        private InputList<Inputs.DashboardTemplateVariablesArgs>? _templateVariables;

        /// <summary>
        /// The list of template variables for this dashboard.
        /// </summary>
        public InputList<Inputs.DashboardTemplateVariablesArgs> TemplateVariables
        {
            get => _templateVariables ?? (_templateVariables = new InputList<Inputs.DashboardTemplateVariablesArgs>());
            set => _templateVariables = value;
        }

        /// <summary>
        /// The title of the dashboard.
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        [Input("widgets", required: true)]
        private InputList<Inputs.DashboardWidgetsArgs>? _widgets;

        /// <summary>
        /// The list of widgets to display on the dashboard.
        /// </summary>
        public InputList<Inputs.DashboardWidgetsArgs> Widgets
        {
            get => _widgets ?? (_widgets = new InputList<Inputs.DashboardWidgetsArgs>());
            set => _widgets = value;
        }

        public DashboardArgs()
        {
        }
    }

    public sealed class DashboardState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the dashboard.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether this dashboard is read-only.
        /// </summary>
        [Input("isReadOnly")]
        public Input<bool>? IsReadOnly { get; set; }

        /// <summary>
        /// The layout type of the dashboard, either 'free' or 'ordered'.
        /// </summary>
        [Input("layoutType")]
        public Input<string>? LayoutType { get; set; }

        [Input("notifyLists")]
        private InputList<string>? _notifyLists;

        /// <summary>
        /// The list of handles of users to notify when changes are made to this dashboard.
        /// </summary>
        public InputList<string> NotifyLists
        {
            get => _notifyLists ?? (_notifyLists = new InputList<string>());
            set => _notifyLists = value;
        }

        [Input("templateVariables")]
        private InputList<Inputs.DashboardTemplateVariablesGetArgs>? _templateVariables;

        /// <summary>
        /// The list of template variables for this dashboard.
        /// </summary>
        public InputList<Inputs.DashboardTemplateVariablesGetArgs> TemplateVariables
        {
            get => _templateVariables ?? (_templateVariables = new InputList<Inputs.DashboardTemplateVariablesGetArgs>());
            set => _templateVariables = value;
        }

        /// <summary>
        /// The title of the dashboard.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("widgets")]
        private InputList<Inputs.DashboardWidgetsGetArgs>? _widgets;

        /// <summary>
        /// The list of widgets to display on the dashboard.
        /// </summary>
        public InputList<Inputs.DashboardWidgetsGetArgs> Widgets
        {
            get => _widgets ?? (_widgets = new InputList<Inputs.DashboardWidgetsGetArgs>());
            set => _widgets = value;
        }

        public DashboardState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class DashboardTemplateVariablesArgs : Pulumi.ResourceArgs
    {
        [Input("default")]
        public Input<string>? Default { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public DashboardTemplateVariablesArgs()
        {
        }
    }

    public sealed class DashboardTemplateVariablesGetArgs : Pulumi.ResourceArgs
    {
        [Input("default")]
        public Input<string>? Default { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public DashboardTemplateVariablesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsAlertGraphDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsAlertGraphDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("vizType", required: true)]
        public Input<string> VizType { get; set; } = null!;

        public DashboardWidgetsAlertGraphDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsAlertGraphDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsAlertGraphDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("vizType", required: true)]
        public Input<string> VizType { get; set; } = null!;

        public DashboardWidgetsAlertGraphDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsAlertGraphDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsAlertGraphDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsAlertGraphDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsAlertGraphDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsAlertValueDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public DashboardWidgetsAlertValueDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsAlertValueDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public DashboardWidgetsAlertValueDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsArgs : Pulumi.ResourceArgs
    {
        [Input("alertGraphDefinition")]
        public Input<DashboardWidgetsAlertGraphDefinitionArgs>? AlertGraphDefinition { get; set; }

        [Input("alertValueDefinition")]
        public Input<DashboardWidgetsAlertValueDefinitionArgs>? AlertValueDefinition { get; set; }

        [Input("changeDefinition")]
        public Input<DashboardWidgetsChangeDefinitionArgs>? ChangeDefinition { get; set; }

        [Input("checkStatusDefinition")]
        public Input<DashboardWidgetsCheckStatusDefinitionArgs>? CheckStatusDefinition { get; set; }

        [Input("distributionDefinition")]
        public Input<DashboardWidgetsDistributionDefinitionArgs>? DistributionDefinition { get; set; }

        [Input("eventStreamDefinition")]
        public Input<DashboardWidgetsEventStreamDefinitionArgs>? EventStreamDefinition { get; set; }

        [Input("eventTimelineDefinition")]
        public Input<DashboardWidgetsEventTimelineDefinitionArgs>? EventTimelineDefinition { get; set; }

        [Input("freeTextDefinition")]
        public Input<DashboardWidgetsFreeTextDefinitionArgs>? FreeTextDefinition { get; set; }

        [Input("groupDefinition")]
        public Input<DashboardWidgetsGroupDefinitionArgs>? GroupDefinition { get; set; }

        [Input("heatmapDefinition")]
        public Input<DashboardWidgetsHeatmapDefinitionArgs>? HeatmapDefinition { get; set; }

        [Input("hostmapDefinition")]
        public Input<DashboardWidgetsHostmapDefinitionArgs>? HostmapDefinition { get; set; }

        [Input("iframeDefinition")]
        public Input<DashboardWidgetsIframeDefinitionArgs>? IframeDefinition { get; set; }

        [Input("imageDefinition")]
        public Input<DashboardWidgetsImageDefinitionArgs>? ImageDefinition { get; set; }

        [Input("layout")]
        public Input<DashboardWidgetsLayoutArgs>? Layout { get; set; }

        [Input("logStreamDefinition")]
        public Input<DashboardWidgetsLogStreamDefinitionArgs>? LogStreamDefinition { get; set; }

        [Input("manageStatusDefinition")]
        public Input<DashboardWidgetsManageStatusDefinitionArgs>? ManageStatusDefinition { get; set; }

        [Input("noteDefinition")]
        public Input<DashboardWidgetsNoteDefinitionArgs>? NoteDefinition { get; set; }

        [Input("queryValueDefinition")]
        public Input<DashboardWidgetsQueryValueDefinitionArgs>? QueryValueDefinition { get; set; }

        [Input("scatterplotDefinition")]
        public Input<DashboardWidgetsScatterplotDefinitionArgs>? ScatterplotDefinition { get; set; }

        [Input("timeseriesDefinition")]
        public Input<DashboardWidgetsTimeseriesDefinitionArgs>? TimeseriesDefinition { get; set; }

        [Input("toplistDefinition")]
        public Input<DashboardWidgetsToplistDefinitionArgs>? ToplistDefinition { get; set; }

        [Input("traceServiceDefinition")]
        public Input<DashboardWidgetsTraceServiceDefinitionArgs>? TraceServiceDefinition { get; set; }

        public DashboardWidgetsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsChangeDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsChangeDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsChangeDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsChangeDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsChangeDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsChangeDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsChangeDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsChangeDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsChangeDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsChangeDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("changeType")]
        public Input<string>? ChangeType { get; set; }

        [Input("compareTo")]
        public Input<string>? CompareTo { get; set; }

        [Input("increaseGood")]
        public Input<bool>? IncreaseGood { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderDir")]
        public Input<string>? OrderDir { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsChangeDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("showPresent")]
        public Input<bool>? ShowPresent { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsChangeDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("changeType")]
        public Input<string>? ChangeType { get; set; }

        [Input("compareTo")]
        public Input<string>? CompareTo { get; set; }

        [Input("increaseGood")]
        public Input<bool>? IncreaseGood { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderDir")]
        public Input<string>? OrderDir { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsChangeDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("showPresent")]
        public Input<bool>? ShowPresent { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsChangeDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsChangeDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsChangeDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsChangeDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsChangeDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsCheckStatusDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("check", required: true)]
        public Input<string> Check { get; set; } = null!;

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("groupBies")]
        private InputList<string>? _groupBies;
        public InputList<string> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<string>());
            set => _groupBies = value;
        }

        [Input("grouping", required: true)]
        public Input<string> Grouping { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsCheckStatusDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsCheckStatusDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsCheckStatusDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("check", required: true)]
        public Input<string> Check { get; set; } = null!;

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("groupBies")]
        private InputList<string>? _groupBies;
        public InputList<string> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<string>());
            set => _groupBies = value;
        }

        [Input("grouping", required: true)]
        public Input<string> Grouping { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsCheckStatusDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsCheckStatusDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsCheckStatusDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsCheckStatusDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsCheckStatusDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsCheckStatusDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsDistributionDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsDistributionDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsDistributionDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsDistributionDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsDistributionDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsDistributionDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsDistributionDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsDistributionDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsDistributionDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsDistributionDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsDistributionDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsDistributionDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsDistributionDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsDistributionDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsDistributionDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventStreamDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("eventSize")]
        public Input<string>? EventSize { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsEventStreamDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsEventStreamDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventStreamDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("eventSize")]
        public Input<string>? EventSize { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsEventStreamDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsEventStreamDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventStreamDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsEventStreamDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventStreamDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsEventStreamDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventTimelineDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsEventTimelineDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsEventTimelineDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventTimelineDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsEventTimelineDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsEventTimelineDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventTimelineDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsEventTimelineDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsEventTimelineDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsEventTimelineDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsFreeTextDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("color")]
        public Input<string>? Color { get; set; }

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("text", required: true)]
        public Input<string> Text { get; set; } = null!;

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        public DashboardWidgetsFreeTextDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsFreeTextDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("color")]
        public Input<string>? Color { get; set; }

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("text", required: true)]
        public Input<string> Text { get; set; } = null!;

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        public DashboardWidgetsFreeTextDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGetArgs : Pulumi.ResourceArgs
    {
        [Input("alertGraphDefinition")]
        public Input<DashboardWidgetsAlertGraphDefinitionGetArgs>? AlertGraphDefinition { get; set; }

        [Input("alertValueDefinition")]
        public Input<DashboardWidgetsAlertValueDefinitionGetArgs>? AlertValueDefinition { get; set; }

        [Input("changeDefinition")]
        public Input<DashboardWidgetsChangeDefinitionGetArgs>? ChangeDefinition { get; set; }

        [Input("checkStatusDefinition")]
        public Input<DashboardWidgetsCheckStatusDefinitionGetArgs>? CheckStatusDefinition { get; set; }

        [Input("distributionDefinition")]
        public Input<DashboardWidgetsDistributionDefinitionGetArgs>? DistributionDefinition { get; set; }

        [Input("eventStreamDefinition")]
        public Input<DashboardWidgetsEventStreamDefinitionGetArgs>? EventStreamDefinition { get; set; }

        [Input("eventTimelineDefinition")]
        public Input<DashboardWidgetsEventTimelineDefinitionGetArgs>? EventTimelineDefinition { get; set; }

        [Input("freeTextDefinition")]
        public Input<DashboardWidgetsFreeTextDefinitionGetArgs>? FreeTextDefinition { get; set; }

        [Input("groupDefinition")]
        public Input<DashboardWidgetsGroupDefinitionGetArgs>? GroupDefinition { get; set; }

        [Input("heatmapDefinition")]
        public Input<DashboardWidgetsHeatmapDefinitionGetArgs>? HeatmapDefinition { get; set; }

        [Input("hostmapDefinition")]
        public Input<DashboardWidgetsHostmapDefinitionGetArgs>? HostmapDefinition { get; set; }

        [Input("iframeDefinition")]
        public Input<DashboardWidgetsIframeDefinitionGetArgs>? IframeDefinition { get; set; }

        [Input("imageDefinition")]
        public Input<DashboardWidgetsImageDefinitionGetArgs>? ImageDefinition { get; set; }

        [Input("layout")]
        public Input<DashboardWidgetsLayoutGetArgs>? Layout { get; set; }

        [Input("logStreamDefinition")]
        public Input<DashboardWidgetsLogStreamDefinitionGetArgs>? LogStreamDefinition { get; set; }

        [Input("manageStatusDefinition")]
        public Input<DashboardWidgetsManageStatusDefinitionGetArgs>? ManageStatusDefinition { get; set; }

        [Input("noteDefinition")]
        public Input<DashboardWidgetsNoteDefinitionGetArgs>? NoteDefinition { get; set; }

        [Input("queryValueDefinition")]
        public Input<DashboardWidgetsQueryValueDefinitionGetArgs>? QueryValueDefinition { get; set; }

        [Input("scatterplotDefinition")]
        public Input<DashboardWidgetsScatterplotDefinitionGetArgs>? ScatterplotDefinition { get; set; }

        [Input("timeseriesDefinition")]
        public Input<DashboardWidgetsTimeseriesDefinitionGetArgs>? TimeseriesDefinition { get; set; }

        [Input("toplistDefinition")]
        public Input<DashboardWidgetsToplistDefinitionGetArgs>? ToplistDefinition { get; set; }

        [Input("traceServiceDefinition")]
        public Input<DashboardWidgetsTraceServiceDefinitionGetArgs>? TraceServiceDefinition { get; set; }

        public DashboardWidgetsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("layoutType", required: true)]
        public Input<string> LayoutType { get; set; } = null!;

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("widgets", required: true)]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsArgs>? _widgets;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsArgs> Widgets
        {
            get => _widgets ?? (_widgets = new InputList<DashboardWidgetsGroupDefinitionWidgetsArgs>());
            set => _widgets = value;
        }

        public DashboardWidgetsGroupDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("layoutType", required: true)]
        public Input<string> LayoutType { get; set; } = null!;

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("widgets", required: true)]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsGetArgs>? _widgets;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsGetArgs> Widgets
        {
            get => _widgets ?? (_widgets = new InputList<DashboardWidgetsGroupDefinitionWidgetsGetArgs>());
            set => _widgets = value;
        }

        public DashboardWidgetsGroupDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("vizType", required: true)]
        public Input<string> VizType { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("vizType", required: true)]
        public Input<string> VizType { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("alertId", required: true)]
        public Input<string> AlertId { get; set; } = null!;

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("unit")]
        public Input<string>? Unit { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsArgs : Pulumi.ResourceArgs
    {
        [Input("alertGraphDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionArgs>? AlertGraphDefinition { get; set; }

        [Input("alertValueDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinitionArgs>? AlertValueDefinition { get; set; }

        [Input("changeDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionArgs>? ChangeDefinition { get; set; }

        [Input("checkStatusDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionArgs>? CheckStatusDefinition { get; set; }

        [Input("distributionDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionArgs>? DistributionDefinition { get; set; }

        [Input("eventStreamDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionArgs>? EventStreamDefinition { get; set; }

        [Input("eventTimelineDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionArgs>? EventTimelineDefinition { get; set; }

        [Input("freeTextDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinitionArgs>? FreeTextDefinition { get; set; }

        [Input("heatmapDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionArgs>? HeatmapDefinition { get; set; }

        [Input("hostmapDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionArgs>? HostmapDefinition { get; set; }

        [Input("iframeDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsIframeDefinitionArgs>? IframeDefinition { get; set; }

        [Input("imageDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsImageDefinitionArgs>? ImageDefinition { get; set; }

        [Input("layout")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsLayoutArgs>? Layout { get; set; }

        [Input("logStreamDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionArgs>? LogStreamDefinition { get; set; }

        [Input("manageStatusDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinitionArgs>? ManageStatusDefinition { get; set; }

        [Input("noteDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsNoteDefinitionArgs>? NoteDefinition { get; set; }

        [Input("queryValueDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionArgs>? QueryValueDefinition { get; set; }

        [Input("scatterplotDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionArgs>? ScatterplotDefinition { get; set; }

        [Input("timeseriesDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionArgs>? TimeseriesDefinition { get; set; }

        [Input("toplistDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionArgs>? ToplistDefinition { get; set; }

        [Input("traceServiceDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionArgs>? TraceServiceDefinition { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("changeType")]
        public Input<string>? ChangeType { get; set; }

        [Input("compareTo")]
        public Input<string>? CompareTo { get; set; }

        [Input("increaseGood")]
        public Input<bool>? IncreaseGood { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderDir")]
        public Input<string>? OrderDir { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("showPresent")]
        public Input<bool>? ShowPresent { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("changeType")]
        public Input<string>? ChangeType { get; set; }

        [Input("compareTo")]
        public Input<string>? CompareTo { get; set; }

        [Input("increaseGood")]
        public Input<bool>? IncreaseGood { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderDir")]
        public Input<string>? OrderDir { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("showPresent")]
        public Input<bool>? ShowPresent { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("check", required: true)]
        public Input<string> Check { get; set; } = null!;

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("groupBies")]
        private InputList<string>? _groupBies;
        public InputList<string> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<string>());
            set => _groupBies = value;
        }

        [Input("grouping", required: true)]
        public Input<string> Grouping { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("check", required: true)]
        public Input<string> Check { get; set; } = null!;

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("groupBies")]
        private InputList<string>? _groupBies;
        public InputList<string> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<string>());
            set => _groupBies = value;
        }

        [Input("grouping", required: true)]
        public Input<string> Grouping { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("eventSize")]
        public Input<string>? EventSize { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("eventSize")]
        public Input<string>? EventSize { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("color")]
        public Input<string>? Color { get; set; }

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("text", required: true)]
        public Input<string> Text { get; set; } = null!;

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("color")]
        public Input<string>? Color { get; set; }

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("text", required: true)]
        public Input<string> Text { get; set; } = null!;

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsGetArgs : Pulumi.ResourceArgs
    {
        [Input("alertGraphDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionGetArgs>? AlertGraphDefinition { get; set; }

        [Input("alertValueDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinitionGetArgs>? AlertValueDefinition { get; set; }

        [Input("changeDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionGetArgs>? ChangeDefinition { get; set; }

        [Input("checkStatusDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionGetArgs>? CheckStatusDefinition { get; set; }

        [Input("distributionDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionGetArgs>? DistributionDefinition { get; set; }

        [Input("eventStreamDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionGetArgs>? EventStreamDefinition { get; set; }

        [Input("eventTimelineDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionGetArgs>? EventTimelineDefinition { get; set; }

        [Input("freeTextDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinitionGetArgs>? FreeTextDefinition { get; set; }

        [Input("heatmapDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionGetArgs>? HeatmapDefinition { get; set; }

        [Input("hostmapDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionGetArgs>? HostmapDefinition { get; set; }

        [Input("iframeDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsIframeDefinitionGetArgs>? IframeDefinition { get; set; }

        [Input("imageDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsImageDefinitionGetArgs>? ImageDefinition { get; set; }

        [Input("layout")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsLayoutGetArgs>? Layout { get; set; }

        [Input("logStreamDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionGetArgs>? LogStreamDefinition { get; set; }

        [Input("manageStatusDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinitionGetArgs>? ManageStatusDefinition { get; set; }

        [Input("noteDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsNoteDefinitionGetArgs>? NoteDefinition { get; set; }

        [Input("queryValueDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionGetArgs>? QueryValueDefinition { get; set; }

        [Input("scatterplotDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionGetArgs>? ScatterplotDefinition { get; set; }

        [Input("timeseriesDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionGetArgs>? TimeseriesDefinition { get; set; }

        [Input("toplistDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionGetArgs>? ToplistDefinition { get; set; }

        [Input("traceServiceDefinition")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionGetArgs>? TraceServiceDefinition { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxisArgs>? Yaxis { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxisGetArgs>? Yaxis { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("groups")]
        private InputList<string>? _groups;
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        [Input("noGroupHosts")]
        public Input<bool>? NoGroupHosts { get; set; }

        [Input("noMetricHosts")]
        public Input<bool>? NoMetricHosts { get; set; }

        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("request")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestArgs>? Request { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyleArgs>? Style { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("groups")]
        private InputList<string>? _groups;
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        [Input("noGroupHosts")]
        public Input<bool>? NoGroupHosts { get; set; }

        [Input("noMetricHosts")]
        public Input<bool>? NoMetricHosts { get; set; }

        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("request")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestGetArgs>? Request { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyleGetArgs>? Style { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestArgs : Pulumi.ResourceArgs
    {
        [Input("fills")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsArgs>? _fills;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsArgs> Fills
        {
            get => _fills ?? (_fills = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsArgs>());
            set => _fills = value;
        }

        [Input("sizes")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesArgs>? _sizes;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesArgs> Sizes
        {
            get => _sizes ?? (_sizes = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesArgs>());
            set => _sizes = value;
        }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestGetArgs : Pulumi.ResourceArgs
    {
        [Input("fills")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsGetArgs>? _fills;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsGetArgs> Fills
        {
            get => _fills ?? (_fills = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsGetArgs>());
            set => _fills = value;
        }

        [Input("sizes")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesGetArgs>? _sizes;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesGetArgs> Sizes
        {
            get => _sizes ?? (_sizes = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesGetArgs>());
            set => _sizes = value;
        }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyleArgs : Pulumi.ResourceArgs
    {
        [Input("fillMax")]
        public Input<string>? FillMax { get; set; }

        [Input("fillMin")]
        public Input<string>? FillMin { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        [Input("paletteFlip")]
        public Input<bool>? PaletteFlip { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("fillMax")]
        public Input<string>? FillMax { get; set; }

        [Input("fillMin")]
        public Input<string>? FillMin { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        [Input("paletteFlip")]
        public Input<bool>? PaletteFlip { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsIframeDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsIframeDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsIframeDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsIframeDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsImageDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("margin")]
        public Input<string>? Margin { get; set; }

        [Input("sizing")]
        public Input<string>? Sizing { get; set; }

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsImageDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsImageDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("margin")]
        public Input<string>? Margin { get; set; }

        [Input("sizing")]
        public Input<string>? Sizing { get; set; }

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsImageDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsLayoutArgs : Pulumi.ResourceArgs
    {
        [Input("height", required: true)]
        public Input<double> Height { get; set; } = null!;

        [Input("width", required: true)]
        public Input<double> Width { get; set; } = null!;

        [Input("x", required: true)]
        public Input<double> X { get; set; } = null!;

        [Input("y", required: true)]
        public Input<double> Y { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsLayoutArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsLayoutGetArgs : Pulumi.ResourceArgs
    {
        [Input("height", required: true)]
        public Input<double> Height { get; set; } = null!;

        [Input("width", required: true)]
        public Input<double> Width { get; set; } = null!;

        [Input("x", required: true)]
        public Input<double> X { get; set; } = null!;

        [Input("y", required: true)]
        public Input<double> Y { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsLayoutGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("columns")]
        private InputList<string>? _columns;
        public InputList<string> Columns
        {
            get => _columns ?? (_columns = new InputList<string>());
            set => _columns = value;
        }

        [Input("logset", required: true)]
        public Input<string> Logset { get; set; } = null!;

        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("columns")]
        private InputList<string>? _columns;
        public InputList<string> Columns
        {
            get => _columns ?? (_columns = new InputList<string>());
            set => _columns = value;
        }

        [Input("logset", required: true)]
        public Input<string> Logset { get; set; } = null!;

        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("colorPreference")]
        public Input<string>? ColorPreference { get; set; }

        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("hideZeroCounts")]
        public Input<bool>? HideZeroCounts { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("sort")]
        public Input<string>? Sort { get; set; }

        [Input("start")]
        public Input<int>? Start { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("colorPreference")]
        public Input<string>? ColorPreference { get; set; }

        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("hideZeroCounts")]
        public Input<bool>? HideZeroCounts { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("sort")]
        public Input<string>? Sort { get; set; }

        [Input("start")]
        public Input<int>? Start { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsNoteDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("backgroundColor")]
        public Input<string>? BackgroundColor { get; set; }

        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("showTick")]
        public Input<bool>? ShowTick { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("tickEdge")]
        public Input<string>? TickEdge { get; set; }

        [Input("tickPos")]
        public Input<string>? TickPos { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsNoteDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsNoteDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("backgroundColor")]
        public Input<string>? BackgroundColor { get; set; }

        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("showTick")]
        public Input<bool>? ShowTick { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("tickEdge")]
        public Input<string>? TickEdge { get; set; }

        [Input("tickPos")]
        public Input<string>? TickPos { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsNoteDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<bool>? Autoscale { get; set; }

        [Input("customUnit")]
        public Input<string>? CustomUnit { get; set; }

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<bool>? Autoscale { get; set; }

        [Input("customUnit")]
        public Input<string>? CustomUnit { get; set; }

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("colorByGroups")]
        private InputList<string>? _colorByGroups;
        public InputList<string> ColorByGroups
        {
            get => _colorByGroups ?? (_colorByGroups = new InputList<string>());
            set => _colorByGroups = value;
        }

        [Input("request")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestArgs>? Request { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("xaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxisArgs>? Xaxis { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxisArgs>? Yaxis { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("colorByGroups")]
        private InputList<string>? _colorByGroups;
        public InputList<string> ColorByGroups
        {
            get => _colorByGroups ?? (_colorByGroups = new InputList<string>());
            set => _colorByGroups = value;
        }

        [Input("request")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestGetArgs>? Request { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("xaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxisGetArgs>? Xaxis { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxisGetArgs>? Yaxis { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestArgs : Pulumi.ResourceArgs
    {
        [Input("xes")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesArgs>? _xes;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesArgs> Xes
        {
            get => _xes ?? (_xes = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesArgs>());
            set => _xes = value;
        }

        [Input("ys")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsArgs>? _ys;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsArgs> Ys
        {
            get => _ys ?? (_ys = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsArgs>());
            set => _ys = value;
        }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestGetArgs : Pulumi.ResourceArgs
    {
        [Input("xes")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesGetArgs>? _xes;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesGetArgs> Xes
        {
            get => _xes ?? (_xes = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesGetArgs>());
            set => _xes = value;
        }

        [Input("ys")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsGetArgs>? _ys;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsGetArgs> Ys
        {
            get => _ys ?? (_ys = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsGetArgs>());
            set => _ys = value;
        }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("events")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsArgs>? _events;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsArgs> Events
        {
            get => _events ?? (_events = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsArgs>());
            set => _events = value;
        }

        [Input("legendSize")]
        public Input<string>? LegendSize { get; set; }

        [Input("markers")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersArgs>? _markers;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersArgs> Markers
        {
            get => _markers ?? (_markers = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersArgs>());
            set => _markers = value;
        }

        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("showLegend")]
        public Input<bool>? ShowLegend { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxisArgs>? Yaxis { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsArgs : Pulumi.ResourceArgs
    {
        [Input("q", required: true)]
        public Input<string> Q { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsGetArgs : Pulumi.ResourceArgs
    {
        [Input("q", required: true)]
        public Input<string> Q { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("events")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsGetArgs>? _events;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsGetArgs> Events
        {
            get => _events ?? (_events = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEventsGetArgs>());
            set => _events = value;
        }

        [Input("legendSize")]
        public Input<string>? LegendSize { get; set; }

        [Input("markers")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersGetArgs>? _markers;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersGetArgs> Markers
        {
            get => _markers ?? (_markers = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersGetArgs>());
            set => _markers = value;
        }

        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("showLegend")]
        public Input<bool>? ShowLegend { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxisGetArgs>? Yaxis { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersArgs : Pulumi.ResourceArgs
    {
        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersGetArgs : Pulumi.ResourceArgs
    {
        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkersGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("metadatas")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasArgs>? _metadatas;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasArgs>());
            set => _metadatas = value;
        }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("metadatas")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs>? _metadatas;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs>());
            set => _metadatas = value;
        }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasArgs : Pulumi.ResourceArgs
    {
        [Input("aliasName")]
        public Input<string>? AliasName { get; set; }

        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs : Pulumi.ResourceArgs
    {
        [Input("aliasName")]
        public Input<string>? AliasName { get; set; }

        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("lineType")]
        public Input<string>? LineType { get; set; }

        [Input("lineWidth")]
        public Input<string>? LineWidth { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("lineType")]
        public Input<string>? LineType { get; set; }

        [Input("lineWidth")]
        public Input<string>? LineWidth { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("env", required: true)]
        public Input<string> Env { get; set; } = null!;

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        [Input("showBreakdown")]
        public Input<bool>? ShowBreakdown { get; set; }

        [Input("showDistribution")]
        public Input<bool>? ShowDistribution { get; set; }

        [Input("showErrors")]
        public Input<bool>? ShowErrors { get; set; }

        [Input("showHits")]
        public Input<bool>? ShowHits { get; set; }

        [Input("showLatency")]
        public Input<bool>? ShowLatency { get; set; }

        [Input("showResourceList")]
        public Input<bool>? ShowResourceList { get; set; }

        [Input("sizeFormat")]
        public Input<string>? SizeFormat { get; set; }

        [Input("spanName", required: true)]
        public Input<string> SpanName { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("env", required: true)]
        public Input<string> Env { get; set; } = null!;

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        [Input("showBreakdown")]
        public Input<bool>? ShowBreakdown { get; set; }

        [Input("showDistribution")]
        public Input<bool>? ShowDistribution { get; set; }

        [Input("showErrors")]
        public Input<bool>? ShowErrors { get; set; }

        [Input("showHits")]
        public Input<bool>? ShowHits { get; set; }

        [Input("showLatency")]
        public Input<bool>? ShowLatency { get; set; }

        [Input("showResourceList")]
        public Input<bool>? ShowResourceList { get; set; }

        [Input("sizeFormat")]
        public Input<string>? SizeFormat { get; set; }

        [Input("spanName", required: true)]
        public Input<string> SpanName { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsHeatmapDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsHeatmapDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsHeatmapDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsHeatmapDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsHeatmapDefinitionYaxisArgs>? Yaxis { get; set; }

        public DashboardWidgetsHeatmapDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsHeatmapDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsHeatmapDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsHeatmapDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsHeatmapDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsHeatmapDefinitionYaxisGetArgs>? Yaxis { get; set; }

        public DashboardWidgetsHeatmapDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsHeatmapDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsHeatmapDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsHeatmapDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionYaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsHeatmapDefinitionYaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHeatmapDefinitionYaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsHeatmapDefinitionYaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("groups")]
        private InputList<string>? _groups;
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        [Input("noGroupHosts")]
        public Input<bool>? NoGroupHosts { get; set; }

        [Input("noMetricHosts")]
        public Input<bool>? NoMetricHosts { get; set; }

        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("request")]
        public Input<DashboardWidgetsHostmapDefinitionRequestArgs>? Request { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("style")]
        public Input<DashboardWidgetsHostmapDefinitionStyleArgs>? Style { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsHostmapDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("groups")]
        private InputList<string>? _groups;
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        [Input("noGroupHosts")]
        public Input<bool>? NoGroupHosts { get; set; }

        [Input("noMetricHosts")]
        public Input<bool>? NoMetricHosts { get; set; }

        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("request")]
        public Input<DashboardWidgetsHostmapDefinitionRequestGetArgs>? Request { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        [Input("style")]
        public Input<DashboardWidgetsHostmapDefinitionStyleGetArgs>? Style { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsHostmapDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestArgs : Pulumi.ResourceArgs
    {
        [Input("fills")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestFillsArgs>? _fills;
        public InputList<DashboardWidgetsHostmapDefinitionRequestFillsArgs> Fills
        {
            get => _fills ?? (_fills = new InputList<DashboardWidgetsHostmapDefinitionRequestFillsArgs>());
            set => _fills = value;
        }

        [Input("sizes")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestSizesArgs>? _sizes;
        public InputList<DashboardWidgetsHostmapDefinitionRequestSizesArgs> Sizes
        {
            get => _sizes ?? (_sizes = new InputList<DashboardWidgetsHostmapDefinitionRequestSizesArgs>());
            set => _sizes = value;
        }

        public DashboardWidgetsHostmapDefinitionRequestArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestFillsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestGetArgs : Pulumi.ResourceArgs
    {
        [Input("fills")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestFillsGetArgs>? _fills;
        public InputList<DashboardWidgetsHostmapDefinitionRequestFillsGetArgs> Fills
        {
            get => _fills ?? (_fills = new InputList<DashboardWidgetsHostmapDefinitionRequestFillsGetArgs>());
            set => _fills = value;
        }

        [Input("sizes")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestSizesGetArgs>? _sizes;
        public InputList<DashboardWidgetsHostmapDefinitionRequestSizesGetArgs> Sizes
        {
            get => _sizes ?? (_sizes = new InputList<DashboardWidgetsHostmapDefinitionRequestSizesGetArgs>());
            set => _sizes = value;
        }

        public DashboardWidgetsHostmapDefinitionRequestGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsHostmapDefinitionRequestSizesProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionStyleArgs : Pulumi.ResourceArgs
    {
        [Input("fillMax")]
        public Input<string>? FillMax { get; set; }

        [Input("fillMin")]
        public Input<string>? FillMin { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        [Input("paletteFlip")]
        public Input<bool>? PaletteFlip { get; set; }

        public DashboardWidgetsHostmapDefinitionStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsHostmapDefinitionStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("fillMax")]
        public Input<string>? FillMax { get; set; }

        [Input("fillMin")]
        public Input<string>? FillMin { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        [Input("paletteFlip")]
        public Input<bool>? PaletteFlip { get; set; }

        public DashboardWidgetsHostmapDefinitionStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsIframeDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsIframeDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsIframeDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsIframeDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsImageDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("margin")]
        public Input<string>? Margin { get; set; }

        [Input("sizing")]
        public Input<string>? Sizing { get; set; }

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsImageDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsImageDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("margin")]
        public Input<string>? Margin { get; set; }

        [Input("sizing")]
        public Input<string>? Sizing { get; set; }

        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DashboardWidgetsImageDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsLayoutArgs : Pulumi.ResourceArgs
    {
        [Input("height", required: true)]
        public Input<double> Height { get; set; } = null!;

        [Input("width", required: true)]
        public Input<double> Width { get; set; } = null!;

        [Input("x", required: true)]
        public Input<double> X { get; set; } = null!;

        [Input("y", required: true)]
        public Input<double> Y { get; set; } = null!;

        public DashboardWidgetsLayoutArgs()
        {
        }
    }

    public sealed class DashboardWidgetsLayoutGetArgs : Pulumi.ResourceArgs
    {
        [Input("height", required: true)]
        public Input<double> Height { get; set; } = null!;

        [Input("width", required: true)]
        public Input<double> Width { get; set; } = null!;

        [Input("x", required: true)]
        public Input<double> X { get; set; } = null!;

        [Input("y", required: true)]
        public Input<double> Y { get; set; } = null!;

        public DashboardWidgetsLayoutGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsLogStreamDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("columns")]
        private InputList<string>? _columns;
        public InputList<string> Columns
        {
            get => _columns ?? (_columns = new InputList<string>());
            set => _columns = value;
        }

        [Input("logset", required: true)]
        public Input<string> Logset { get; set; } = null!;

        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsLogStreamDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsLogStreamDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsLogStreamDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("columns")]
        private InputList<string>? _columns;
        public InputList<string> Columns
        {
            get => _columns ?? (_columns = new InputList<string>());
            set => _columns = value;
        }

        [Input("logset", required: true)]
        public Input<string> Logset { get; set; } = null!;

        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsLogStreamDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsLogStreamDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsLogStreamDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsLogStreamDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsLogStreamDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsLogStreamDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsManageStatusDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("colorPreference")]
        public Input<string>? ColorPreference { get; set; }

        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("hideZeroCounts")]
        public Input<bool>? HideZeroCounts { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("sort")]
        public Input<string>? Sort { get; set; }

        [Input("start")]
        public Input<int>? Start { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsManageStatusDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsManageStatusDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("colorPreference")]
        public Input<string>? ColorPreference { get; set; }

        [Input("count")]
        public Input<int>? Count { get; set; }

        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("hideZeroCounts")]
        public Input<bool>? HideZeroCounts { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        [Input("sort")]
        public Input<string>? Sort { get; set; }

        [Input("start")]
        public Input<int>? Start { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsManageStatusDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsNoteDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("backgroundColor")]
        public Input<string>? BackgroundColor { get; set; }

        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("showTick")]
        public Input<bool>? ShowTick { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("tickEdge")]
        public Input<string>? TickEdge { get; set; }

        [Input("tickPos")]
        public Input<string>? TickPos { get; set; }

        public DashboardWidgetsNoteDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsNoteDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("backgroundColor")]
        public Input<string>? BackgroundColor { get; set; }

        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        [Input("fontSize")]
        public Input<string>? FontSize { get; set; }

        [Input("showTick")]
        public Input<bool>? ShowTick { get; set; }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("tickEdge")]
        public Input<string>? TickEdge { get; set; }

        [Input("tickPos")]
        public Input<string>? TickPos { get; set; }

        public DashboardWidgetsNoteDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<bool>? Autoscale { get; set; }

        [Input("customUnit")]
        public Input<string>? CustomUnit { get; set; }

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("requests")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsQueryValueDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsQueryValueDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsQueryValueDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<bool>? Autoscale { get; set; }

        [Input("customUnit")]
        public Input<string>? CustomUnit { get; set; }

        [Input("precision")]
        public Input<int>? Precision { get; set; }

        [Input("requests")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsQueryValueDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("textAlign")]
        public Input<string>? TextAlign { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsQueryValueDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsQueryValueDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormatsGetArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsQueryValueDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsQueryValueDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsQueryValueDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsQueryValueDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("colorByGroups")]
        private InputList<string>? _colorByGroups;
        public InputList<string> ColorByGroups
        {
            get => _colorByGroups ?? (_colorByGroups = new InputList<string>());
            set => _colorByGroups = value;
        }

        [Input("request")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestArgs>? Request { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsScatterplotDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("xaxis")]
        public Input<DashboardWidgetsScatterplotDefinitionXaxisArgs>? Xaxis { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsScatterplotDefinitionYaxisArgs>? Yaxis { get; set; }

        public DashboardWidgetsScatterplotDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("colorByGroups")]
        private InputList<string>? _colorByGroups;
        public InputList<string> ColorByGroups
        {
            get => _colorByGroups ?? (_colorByGroups = new InputList<string>());
            set => _colorByGroups = value;
        }

        [Input("request")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestGetArgs>? Request { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsScatterplotDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("xaxis")]
        public Input<DashboardWidgetsScatterplotDefinitionXaxisGetArgs>? Xaxis { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsScatterplotDefinitionYaxisGetArgs>? Yaxis { get; set; }

        public DashboardWidgetsScatterplotDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestArgs : Pulumi.ResourceArgs
    {
        [Input("xes")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestXesArgs>? _xes;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestXesArgs> Xes
        {
            get => _xes ?? (_xes = new InputList<DashboardWidgetsScatterplotDefinitionRequestXesArgs>());
            set => _xes = value;
        }

        [Input("ys")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestYsArgs>? _ys;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestYsArgs> Ys
        {
            get => _ys ?? (_ys = new InputList<DashboardWidgetsScatterplotDefinitionRequestYsArgs>());
            set => _ys = value;
        }

        public DashboardWidgetsScatterplotDefinitionRequestArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestGetArgs : Pulumi.ResourceArgs
    {
        [Input("xes")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestXesGetArgs>? _xes;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestXesGetArgs> Xes
        {
            get => _xes ?? (_xes = new InputList<DashboardWidgetsScatterplotDefinitionRequestXesGetArgs>());
            set => _xes = value;
        }

        [Input("ys")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestYsGetArgs>? _ys;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestYsGetArgs> Ys
        {
            get => _ys ?? (_ys = new InputList<DashboardWidgetsScatterplotDefinitionRequestYsGetArgs>());
            set => _ys = value;
        }

        public DashboardWidgetsScatterplotDefinitionRequestGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestXesProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregator")]
        public Input<string>? Aggregator { get; set; }

        [Input("apmQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsScatterplotDefinitionRequestYsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsScatterplotDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsScatterplotDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionXaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsScatterplotDefinitionXaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionXaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsScatterplotDefinitionXaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionYaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsScatterplotDefinitionYaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsScatterplotDefinitionYaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsScatterplotDefinitionYaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("events")]
        private InputList<DashboardWidgetsTimeseriesDefinitionEventsArgs>? _events;
        public InputList<DashboardWidgetsTimeseriesDefinitionEventsArgs> Events
        {
            get => _events ?? (_events = new InputList<DashboardWidgetsTimeseriesDefinitionEventsArgs>());
            set => _events = value;
        }

        [Input("legendSize")]
        public Input<string>? LegendSize { get; set; }

        [Input("markers")]
        private InputList<DashboardWidgetsTimeseriesDefinitionMarkersArgs>? _markers;
        public InputList<DashboardWidgetsTimeseriesDefinitionMarkersArgs> Markers
        {
            get => _markers ?? (_markers = new InputList<DashboardWidgetsTimeseriesDefinitionMarkersArgs>());
            set => _markers = value;
        }

        [Input("requests")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("showLegend")]
        public Input<bool>? ShowLegend { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsTimeseriesDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsTimeseriesDefinitionYaxisArgs>? Yaxis { get; set; }

        public DashboardWidgetsTimeseriesDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionEventsArgs : Pulumi.ResourceArgs
    {
        [Input("q", required: true)]
        public Input<string> Q { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionEventsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionEventsGetArgs : Pulumi.ResourceArgs
    {
        [Input("q", required: true)]
        public Input<string> Q { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionEventsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("events")]
        private InputList<DashboardWidgetsTimeseriesDefinitionEventsGetArgs>? _events;
        public InputList<DashboardWidgetsTimeseriesDefinitionEventsGetArgs> Events
        {
            get => _events ?? (_events = new InputList<DashboardWidgetsTimeseriesDefinitionEventsGetArgs>());
            set => _events = value;
        }

        [Input("legendSize")]
        public Input<string>? LegendSize { get; set; }

        [Input("markers")]
        private InputList<DashboardWidgetsTimeseriesDefinitionMarkersGetArgs>? _markers;
        public InputList<DashboardWidgetsTimeseriesDefinitionMarkersGetArgs> Markers
        {
            get => _markers ?? (_markers = new InputList<DashboardWidgetsTimeseriesDefinitionMarkersGetArgs>());
            set => _markers = value;
        }

        [Input("requests")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("showLegend")]
        public Input<bool>? ShowLegend { get; set; }

        [Input("time")]
        public Input<DashboardWidgetsTimeseriesDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        [Input("yaxis")]
        public Input<DashboardWidgetsTimeseriesDefinitionYaxisGetArgs>? Yaxis { get; set; }

        public DashboardWidgetsTimeseriesDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionMarkersArgs : Pulumi.ResourceArgs
    {
        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionMarkersArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionMarkersGetArgs : Pulumi.ResourceArgs
    {
        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionMarkersGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("metadatas")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsMetadatasArgs>? _metadatas;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsMetadatasArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsMetadatasArgs>());
            set => _metadatas = value;
        }

        [Input("processQuery")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("displayType")]
        public Input<string>? DisplayType { get; set; }

        [Input("logQuery")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("metadatas")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs>? _metadatas;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs>());
            set => _metadatas = value;
        }

        [Input("processQuery")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsMetadatasArgs : Pulumi.ResourceArgs
    {
        [Input("aliasName")]
        public Input<string>? AliasName { get; set; }

        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsMetadatasArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs : Pulumi.ResourceArgs
    {
        [Input("aliasName")]
        public Input<string>? AliasName { get; set; }

        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        public DashboardWidgetsTimeseriesDefinitionRequestsMetadatasGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("lineType")]
        public Input<string>? LineType { get; set; }

        [Input("lineWidth")]
        public Input<string>? LineWidth { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("lineType")]
        public Input<string>? LineType { get; set; }

        [Input("lineWidth")]
        public Input<string>? LineWidth { get; set; }

        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsTimeseriesDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsTimeseriesDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsTimeseriesDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionYaxisArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsTimeseriesDefinitionYaxisArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTimeseriesDefinitionYaxisGetArgs : Pulumi.ResourceArgs
    {
        [Input("includeZero")]
        public Input<bool>? IncludeZero { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("max")]
        public Input<string>? Max { get; set; }

        [Input("min")]
        public Input<string>? Min { get; set; }

        [Input("scale")]
        public Input<string>? Scale { get; set; }

        public DashboardWidgetsTimeseriesDefinitionYaxisGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsArgs>? _requests;
        public InputList<DashboardWidgetsToplistDefinitionRequestsArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsToplistDefinitionRequestsArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsToplistDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsToplistDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("requests")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsGetArgs>? _requests;
        public InputList<DashboardWidgetsToplistDefinitionRequestsGetArgs> Requests
        {
            get => _requests ?? (_requests = new InputList<DashboardWidgetsToplistDefinitionRequestsGetArgs>());
            set => _requests = value;
        }

        [Input("time")]
        public Input<DashboardWidgetsToplistDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsToplistDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsApmQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsApmQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsApmQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsApmQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsApmQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsApmQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQueryArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsConditionalFormatsArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsToplistDefinitionRequestsConditionalFormatsArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsToplistDefinitionRequestsConditionalFormatsArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQueryArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsToplistDefinitionRequestsProcessQueryArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsToplistDefinitionRequestsStyleArgs>? Style { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsConditionalFormatsArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsConditionalFormatsArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs : Pulumi.ResourceArgs
    {
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("apmQuery")]
        public Input<DashboardWidgetsToplistDefinitionRequestsApmQueryGetArgs>? ApmQuery { get; set; }

        [Input("conditionalFormats")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs>? _conditionalFormats;
        public InputList<DashboardWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<DashboardWidgetsToplistDefinitionRequestsConditionalFormatsGetArgs>());
            set => _conditionalFormats = value;
        }

        [Input("logQuery")]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQueryGetArgs>? LogQuery { get; set; }

        [Input("processQuery")]
        public Input<DashboardWidgetsToplistDefinitionRequestsProcessQueryGetArgs>? ProcessQuery { get; set; }

        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("style")]
        public Input<DashboardWidgetsToplistDefinitionRequestsStyleGetArgs>? Style { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQueryComputeArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs>? _groupBies;
        public InputList<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQuerySearchArgs>? Search { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsLogQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryComputeArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsLogQueryComputeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryComputeGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("interval")]
        public Input<int>? Interval { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsLogQueryComputeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("compute", required: true)]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQueryComputeGetArgs> Compute { get; set; } = null!;

        [Input("groupBies")]
        private InputList<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs>? _groupBies;
        public InputList<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs>());
            set => _groupBies = value;
        }

        [Input("index", required: true)]
        public Input<string> Index { get; set; } = null!;

        [Input("search")]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQuerySearchGetArgs>? Search { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsLogQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortArgs>? Sort { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("sort")]
        public Input<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortGetArgs>? Sort { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortGetArgs : Pulumi.ResourceArgs
    {
        [Input("aggregation", required: true)]
        public Input<string> Aggregation { get; set; } = null!;

        [Input("facet")]
        public Input<string>? Facet { get; set; }

        [Input("order", required: true)]
        public Input<string> Order { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSortGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQuerySearchArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsLogQuerySearchArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQuerySearchGetArgs : Pulumi.ResourceArgs
    {
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public DashboardWidgetsToplistDefinitionRequestsLogQuerySearchGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsProcessQueryArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsProcessQueryArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsProcessQueryGetArgs : Pulumi.ResourceArgs
    {
        [Input("filterBies")]
        private InputList<string>? _filterBies;
        public InputList<string> FilterBies
        {
            get => _filterBies ?? (_filterBies = new InputList<string>());
            set => _filterBies = value;
        }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("metric", required: true)]
        public Input<string> Metric { get; set; } = null!;

        [Input("searchBy")]
        public Input<string>? SearchBy { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsProcessQueryGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsStyleArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsStyleArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionRequestsStyleGetArgs : Pulumi.ResourceArgs
    {
        [Input("palette")]
        public Input<string>? Palette { get; set; }

        public DashboardWidgetsToplistDefinitionRequestsStyleGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsToplistDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsToplistDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsToplistDefinitionTimeGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTraceServiceDefinitionArgs : Pulumi.ResourceArgs
    {
        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("env", required: true)]
        public Input<string> Env { get; set; } = null!;

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        [Input("showBreakdown")]
        public Input<bool>? ShowBreakdown { get; set; }

        [Input("showDistribution")]
        public Input<bool>? ShowDistribution { get; set; }

        [Input("showErrors")]
        public Input<bool>? ShowErrors { get; set; }

        [Input("showHits")]
        public Input<bool>? ShowHits { get; set; }

        [Input("showLatency")]
        public Input<bool>? ShowLatency { get; set; }

        [Input("showResourceList")]
        public Input<bool>? ShowResourceList { get; set; }

        [Input("sizeFormat")]
        public Input<string>? SizeFormat { get; set; }

        [Input("spanName", required: true)]
        public Input<string> SpanName { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsTraceServiceDefinitionTimeArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsTraceServiceDefinitionArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTraceServiceDefinitionGetArgs : Pulumi.ResourceArgs
    {
        [Input("displayFormat")]
        public Input<string>? DisplayFormat { get; set; }

        [Input("env", required: true)]
        public Input<string> Env { get; set; } = null!;

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        [Input("showBreakdown")]
        public Input<bool>? ShowBreakdown { get; set; }

        [Input("showDistribution")]
        public Input<bool>? ShowDistribution { get; set; }

        [Input("showErrors")]
        public Input<bool>? ShowErrors { get; set; }

        [Input("showHits")]
        public Input<bool>? ShowHits { get; set; }

        [Input("showLatency")]
        public Input<bool>? ShowLatency { get; set; }

        [Input("showResourceList")]
        public Input<bool>? ShowResourceList { get; set; }

        [Input("sizeFormat")]
        public Input<string>? SizeFormat { get; set; }

        [Input("spanName", required: true)]
        public Input<string> SpanName { get; set; } = null!;

        [Input("time")]
        public Input<DashboardWidgetsTraceServiceDefinitionTimeGetArgs>? Time { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("titleAlign")]
        public Input<string>? TitleAlign { get; set; }

        [Input("titleSize")]
        public Input<string>? TitleSize { get; set; }

        public DashboardWidgetsTraceServiceDefinitionGetArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTraceServiceDefinitionTimeArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsTraceServiceDefinitionTimeArgs()
        {
        }
    }

    public sealed class DashboardWidgetsTraceServiceDefinitionTimeGetArgs : Pulumi.ResourceArgs
    {
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        public DashboardWidgetsTraceServiceDefinitionTimeGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class DashboardTemplateVariables
    {
        public readonly string? Default;
        public readonly string Name;
        public readonly string? Prefix;

        [OutputConstructor]
        private DashboardTemplateVariables(
            string? @default,
            string name,
            string? prefix)
        {
            Default = @default;
            Name = name;
            Prefix = prefix;
        }
    }

    [OutputType]
    public sealed class DashboardWidgets
    {
        public readonly DashboardWidgetsAlertGraphDefinition? AlertGraphDefinition;
        public readonly DashboardWidgetsAlertValueDefinition? AlertValueDefinition;
        public readonly DashboardWidgetsChangeDefinition? ChangeDefinition;
        public readonly DashboardWidgetsCheckStatusDefinition? CheckStatusDefinition;
        public readonly DashboardWidgetsDistributionDefinition? DistributionDefinition;
        public readonly DashboardWidgetsEventStreamDefinition? EventStreamDefinition;
        public readonly DashboardWidgetsEventTimelineDefinition? EventTimelineDefinition;
        public readonly DashboardWidgetsFreeTextDefinition? FreeTextDefinition;
        public readonly DashboardWidgetsGroupDefinition? GroupDefinition;
        public readonly DashboardWidgetsHeatmapDefinition? HeatmapDefinition;
        public readonly DashboardWidgetsHostmapDefinition? HostmapDefinition;
        public readonly DashboardWidgetsIframeDefinition? IframeDefinition;
        public readonly DashboardWidgetsImageDefinition? ImageDefinition;
        public readonly DashboardWidgetsLayout? Layout;
        public readonly DashboardWidgetsLogStreamDefinition? LogStreamDefinition;
        public readonly DashboardWidgetsManageStatusDefinition? ManageStatusDefinition;
        public readonly DashboardWidgetsNoteDefinition? NoteDefinition;
        public readonly DashboardWidgetsQueryValueDefinition? QueryValueDefinition;
        public readonly DashboardWidgetsScatterplotDefinition? ScatterplotDefinition;
        public readonly DashboardWidgetsTimeseriesDefinition? TimeseriesDefinition;
        public readonly DashboardWidgetsToplistDefinition? ToplistDefinition;
        public readonly DashboardWidgetsTraceServiceDefinition? TraceServiceDefinition;

        [OutputConstructor]
        private DashboardWidgets(
            DashboardWidgetsAlertGraphDefinition? alertGraphDefinition,
            DashboardWidgetsAlertValueDefinition? alertValueDefinition,
            DashboardWidgetsChangeDefinition? changeDefinition,
            DashboardWidgetsCheckStatusDefinition? checkStatusDefinition,
            DashboardWidgetsDistributionDefinition? distributionDefinition,
            DashboardWidgetsEventStreamDefinition? eventStreamDefinition,
            DashboardWidgetsEventTimelineDefinition? eventTimelineDefinition,
            DashboardWidgetsFreeTextDefinition? freeTextDefinition,
            DashboardWidgetsGroupDefinition? groupDefinition,
            DashboardWidgetsHeatmapDefinition? heatmapDefinition,
            DashboardWidgetsHostmapDefinition? hostmapDefinition,
            DashboardWidgetsIframeDefinition? iframeDefinition,
            DashboardWidgetsImageDefinition? imageDefinition,
            DashboardWidgetsLayout? layout,
            DashboardWidgetsLogStreamDefinition? logStreamDefinition,
            DashboardWidgetsManageStatusDefinition? manageStatusDefinition,
            DashboardWidgetsNoteDefinition? noteDefinition,
            DashboardWidgetsQueryValueDefinition? queryValueDefinition,
            DashboardWidgetsScatterplotDefinition? scatterplotDefinition,
            DashboardWidgetsTimeseriesDefinition? timeseriesDefinition,
            DashboardWidgetsToplistDefinition? toplistDefinition,
            DashboardWidgetsTraceServiceDefinition? traceServiceDefinition)
        {
            AlertGraphDefinition = alertGraphDefinition;
            AlertValueDefinition = alertValueDefinition;
            ChangeDefinition = changeDefinition;
            CheckStatusDefinition = checkStatusDefinition;
            DistributionDefinition = distributionDefinition;
            EventStreamDefinition = eventStreamDefinition;
            EventTimelineDefinition = eventTimelineDefinition;
            FreeTextDefinition = freeTextDefinition;
            GroupDefinition = groupDefinition;
            HeatmapDefinition = heatmapDefinition;
            HostmapDefinition = hostmapDefinition;
            IframeDefinition = iframeDefinition;
            ImageDefinition = imageDefinition;
            Layout = layout;
            LogStreamDefinition = logStreamDefinition;
            ManageStatusDefinition = manageStatusDefinition;
            NoteDefinition = noteDefinition;
            QueryValueDefinition = queryValueDefinition;
            ScatterplotDefinition = scatterplotDefinition;
            TimeseriesDefinition = timeseriesDefinition;
            ToplistDefinition = toplistDefinition;
            TraceServiceDefinition = traceServiceDefinition;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsAlertGraphDefinition
    {
        public readonly string AlertId;
        public readonly DashboardWidgetsAlertGraphDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly string VizType;

        [OutputConstructor]
        private DashboardWidgetsAlertGraphDefinition(
            string alertId,
            DashboardWidgetsAlertGraphDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            string vizType)
        {
            AlertId = alertId;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            VizType = vizType;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsAlertGraphDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsAlertGraphDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsAlertValueDefinition
    {
        public readonly string AlertId;
        public readonly int? Precision;
        public readonly string? TextAlign;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly string? Unit;

        [OutputConstructor]
        private DashboardWidgetsAlertValueDefinition(
            string alertId,
            int? precision,
            string? textAlign,
            string? title,
            string? titleAlign,
            string? titleSize,
            string? unit)
        {
            AlertId = alertId;
            Precision = precision;
            TextAlign = textAlign;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsChangeDefinitionRequests> Requests;
        public readonly DashboardWidgetsChangeDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinition(
            ImmutableArray<DashboardWidgetsChangeDefinitionRequests> requests,
            DashboardWidgetsChangeDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequests
    {
        public readonly DashboardWidgetsChangeDefinitionRequestsApmQuery? ApmQuery;
        public readonly string? ChangeType;
        public readonly string? CompareTo;
        public readonly bool? IncreaseGood;
        public readonly DashboardWidgetsChangeDefinitionRequestsLogQuery? LogQuery;
        public readonly string? OrderBy;
        public readonly string? OrderDir;
        public readonly DashboardWidgetsChangeDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly bool? ShowPresent;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequests(
            DashboardWidgetsChangeDefinitionRequestsApmQuery? apmQuery,
            string? changeType,
            string? compareTo,
            bool? increaseGood,
            DashboardWidgetsChangeDefinitionRequestsLogQuery? logQuery,
            string? orderBy,
            string? orderDir,
            DashboardWidgetsChangeDefinitionRequestsProcessQuery? processQuery,
            string? q,
            bool? showPresent)
        {
            ApmQuery = apmQuery;
            ChangeType = changeType;
            CompareTo = compareTo;
            IncreaseGood = increaseGood;
            LogQuery = logQuery;
            OrderBy = orderBy;
            OrderDir = orderDir;
            ProcessQuery = processQuery;
            Q = q;
            ShowPresent = showPresent;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsChangeDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsChangeDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsApmQuery(
            DashboardWidgetsChangeDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsChangeDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsChangeDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsChangeDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsLogQuery(
            DashboardWidgetsChangeDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsChangeDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsChangeDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsChangeDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsCheckStatusDefinition
    {
        public readonly string Check;
        public readonly string? Group;
        public readonly ImmutableArray<string> GroupBies;
        public readonly string Grouping;
        public readonly ImmutableArray<string> Tags;
        public readonly DashboardWidgetsCheckStatusDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsCheckStatusDefinition(
            string check,
            string? group,
            ImmutableArray<string> groupBies,
            string grouping,
            ImmutableArray<string> tags,
            DashboardWidgetsCheckStatusDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Check = check;
            Group = group;
            GroupBies = groupBies;
            Grouping = grouping;
            Tags = tags;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsCheckStatusDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsCheckStatusDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsDistributionDefinitionRequests> Requests;
        public readonly DashboardWidgetsDistributionDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinition(
            ImmutableArray<DashboardWidgetsDistributionDefinitionRequests> requests,
            DashboardWidgetsDistributionDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequests
    {
        public readonly DashboardWidgetsDistributionDefinitionRequestsApmQuery? ApmQuery;
        public readonly DashboardWidgetsDistributionDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsDistributionDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsDistributionDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequests(
            DashboardWidgetsDistributionDefinitionRequestsApmQuery? apmQuery,
            DashboardWidgetsDistributionDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsDistributionDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsDistributionDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsDistributionDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsDistributionDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsApmQuery(
            DashboardWidgetsDistributionDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsDistributionDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsDistributionDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsDistributionDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsLogQuery(
            DashboardWidgetsDistributionDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsDistributionDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionRequestsStyle
    {
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionRequestsStyle(string? palette)
        {
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsDistributionDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsDistributionDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsEventStreamDefinition
    {
        public readonly string? EventSize;
        public readonly string Query;
        public readonly DashboardWidgetsEventStreamDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsEventStreamDefinition(
            string? eventSize,
            string query,
            DashboardWidgetsEventStreamDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            EventSize = eventSize;
            Query = query;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsEventStreamDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsEventStreamDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsEventTimelineDefinition
    {
        public readonly string Query;
        public readonly DashboardWidgetsEventTimelineDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsEventTimelineDefinition(
            string query,
            DashboardWidgetsEventTimelineDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Query = query;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsEventTimelineDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsEventTimelineDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsFreeTextDefinition
    {
        public readonly string? Color;
        public readonly string? FontSize;
        public readonly string Text;
        public readonly string? TextAlign;

        [OutputConstructor]
        private DashboardWidgetsFreeTextDefinition(
            string? color,
            string? fontSize,
            string text,
            string? textAlign)
        {
            Color = color;
            FontSize = fontSize;
            Text = text;
            TextAlign = textAlign;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinition
    {
        public readonly string LayoutType;
        public readonly string? Title;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgets> Widgets;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinition(
            string layoutType,
            string? title,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgets> widgets)
        {
            LayoutType = layoutType;
            Title = title;
            Widgets = widgets;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgets
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinition? AlertGraphDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinition? AlertValueDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinition? ChangeDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinition? CheckStatusDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinition? DistributionDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinition? EventStreamDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinition? EventTimelineDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinition? FreeTextDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinition? HeatmapDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinition? HostmapDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsIframeDefinition? IframeDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsImageDefinition? ImageDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsLayout? Layout;
        public readonly DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinition? LogStreamDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinition? ManageStatusDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsNoteDefinition? NoteDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinition? QueryValueDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinition? ScatterplotDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinition? TimeseriesDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinition? ToplistDefinition;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinition? TraceServiceDefinition;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgets(
            DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinition? alertGraphDefinition,
            DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinition? alertValueDefinition,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinition? changeDefinition,
            DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinition? checkStatusDefinition,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinition? distributionDefinition,
            DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinition? eventStreamDefinition,
            DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinition? eventTimelineDefinition,
            DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinition? freeTextDefinition,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinition? heatmapDefinition,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinition? hostmapDefinition,
            DashboardWidgetsGroupDefinitionWidgetsIframeDefinition? iframeDefinition,
            DashboardWidgetsGroupDefinitionWidgetsImageDefinition? imageDefinition,
            DashboardWidgetsGroupDefinitionWidgetsLayout? layout,
            DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinition? logStreamDefinition,
            DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinition? manageStatusDefinition,
            DashboardWidgetsGroupDefinitionWidgetsNoteDefinition? noteDefinition,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinition? queryValueDefinition,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinition? scatterplotDefinition,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinition? timeseriesDefinition,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinition? toplistDefinition,
            DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinition? traceServiceDefinition)
        {
            AlertGraphDefinition = alertGraphDefinition;
            AlertValueDefinition = alertValueDefinition;
            ChangeDefinition = changeDefinition;
            CheckStatusDefinition = checkStatusDefinition;
            DistributionDefinition = distributionDefinition;
            EventStreamDefinition = eventStreamDefinition;
            EventTimelineDefinition = eventTimelineDefinition;
            FreeTextDefinition = freeTextDefinition;
            HeatmapDefinition = heatmapDefinition;
            HostmapDefinition = hostmapDefinition;
            IframeDefinition = iframeDefinition;
            ImageDefinition = imageDefinition;
            Layout = layout;
            LogStreamDefinition = logStreamDefinition;
            ManageStatusDefinition = manageStatusDefinition;
            NoteDefinition = noteDefinition;
            QueryValueDefinition = queryValueDefinition;
            ScatterplotDefinition = scatterplotDefinition;
            TimeseriesDefinition = timeseriesDefinition;
            ToplistDefinition = toplistDefinition;
            TraceServiceDefinition = traceServiceDefinition;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinition
    {
        public readonly string AlertId;
        public readonly DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly string VizType;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinition(
            string alertId,
            DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            string vizType)
        {
            AlertId = alertId;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            VizType = vizType;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsAlertGraphDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinition
    {
        public readonly string AlertId;
        public readonly int? Precision;
        public readonly string? TextAlign;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly string? Unit;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsAlertValueDefinition(
            string alertId,
            int? precision,
            string? textAlign,
            string? title,
            string? titleAlign,
            string? titleSize,
            string? unit)
        {
            AlertId = alertId;
            Precision = precision;
            TextAlign = textAlign;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Unit = unit;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequests> Requests;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinition(
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequests> requests,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequests
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuery? ApmQuery;
        public readonly string? ChangeType;
        public readonly string? CompareTo;
        public readonly bool? IncreaseGood;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuery? LogQuery;
        public readonly string? OrderBy;
        public readonly string? OrderDir;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly bool? ShowPresent;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequests(
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuery? apmQuery,
            string? changeType,
            string? compareTo,
            bool? increaseGood,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuery? logQuery,
            string? orderBy,
            string? orderDir,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQuery? processQuery,
            string? q,
            bool? showPresent)
        {
            ApmQuery = apmQuery;
            ChangeType = changeType;
            CompareTo = compareTo;
            IncreaseGood = increaseGood;
            LogQuery = logQuery;
            OrderBy = orderBy;
            OrderDir = orderDir;
            ProcessQuery = processQuery;
            Q = q;
            ShowPresent = showPresent;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsChangeDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinition
    {
        public readonly string Check;
        public readonly string? Group;
        public readonly ImmutableArray<string> GroupBies;
        public readonly string Grouping;
        public readonly ImmutableArray<string> Tags;
        public readonly DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinition(
            string check,
            string? group,
            ImmutableArray<string> groupBies,
            string grouping,
            ImmutableArray<string> tags,
            DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Check = check;
            Group = group;
            GroupBies = groupBies;
            Grouping = grouping;
            Tags = tags;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsCheckStatusDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequests> Requests;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinition(
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequests> requests,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequests
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuery? ApmQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequests(
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuery? apmQuery,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyle
    {
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionRequestsStyle(string? palette)
        {
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsDistributionDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinition
    {
        public readonly string? EventSize;
        public readonly string Query;
        public readonly DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinition(
            string? eventSize,
            string query,
            DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            EventSize = eventSize;
            Query = query;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsEventStreamDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinition
    {
        public readonly string Query;
        public readonly DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinition(
            string query,
            DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Query = query;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsEventTimelineDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinition
    {
        public readonly string? Color;
        public readonly string? FontSize;
        public readonly string Text;
        public readonly string? TextAlign;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsFreeTextDefinition(
            string? color,
            string? fontSize,
            string text,
            string? textAlign)
        {
            Color = color;
            FontSize = fontSize;
            Text = text;
            TextAlign = textAlign;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequests> Requests;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxis? Yaxis;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinition(
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequests> requests,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxis? yaxis)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Yaxis = yaxis;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequests
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuery? ApmQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequests(
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuery? apmQuery,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyle
    {
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionRequestsStyle(string? palette)
        {
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHeatmapDefinitionYaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinition
    {
        public readonly ImmutableArray<string> Groups;
        public readonly bool? NoGroupHosts;
        public readonly bool? NoMetricHosts;
        public readonly string? NodeType;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequest? Request;
        public readonly ImmutableArray<string> Scopes;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyle? Style;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinition(
            ImmutableArray<string> groups,
            bool? noGroupHosts,
            bool? noMetricHosts,
            string? nodeType,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequest? request,
            ImmutableArray<string> scopes,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyle? style,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Groups = groups;
            NoGroupHosts = noGroupHosts;
            NoMetricHosts = noMetricHosts;
            NodeType = nodeType;
            Request = request;
            Scopes = scopes;
            Style = style;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequest
    {
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFills> Fills;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizes> Sizes;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequest(
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFills> fills,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizes> sizes)
        {
            Fills = fills;
            Sizes = sizes;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFills
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuery? ApmQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFills(
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuery? apmQuery,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQuery? processQuery,
            string? q)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestFillsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizes
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuery? ApmQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizes(
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuery? apmQuery,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQuery? processQuery,
            string? q)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionRequestSizesProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyle
    {
        public readonly string? FillMax;
        public readonly string? FillMin;
        public readonly string? Palette;
        public readonly bool? PaletteFlip;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsHostmapDefinitionStyle(
            string? fillMax,
            string? fillMin,
            string? palette,
            bool? paletteFlip)
        {
            FillMax = fillMax;
            FillMin = fillMin;
            Palette = palette;
            PaletteFlip = paletteFlip;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsIframeDefinition
    {
        public readonly string Url;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsIframeDefinition(string url)
        {
            Url = url;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsImageDefinition
    {
        public readonly string? Margin;
        public readonly string? Sizing;
        public readonly string Url;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsImageDefinition(
            string? margin,
            string? sizing,
            string url)
        {
            Margin = margin;
            Sizing = sizing;
            Url = url;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsLayout
    {
        public readonly double Height;
        public readonly double Width;
        public readonly double X;
        public readonly double Y;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsLayout(
            double height,
            double width,
            double x,
            double y)
        {
            Height = height;
            Width = width;
            X = x;
            Y = y;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinition
    {
        public readonly ImmutableArray<string> Columns;
        public readonly string Logset;
        public readonly string? Query;
        public readonly DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinition(
            ImmutableArray<string> columns,
            string logset,
            string? query,
            DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Columns = columns;
            Logset = logset;
            Query = query;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsLogStreamDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinition
    {
        public readonly string? ColorPreference;
        public readonly int? Count;
        public readonly string? DisplayFormat;
        public readonly bool? HideZeroCounts;
        public readonly string Query;
        public readonly string? Sort;
        public readonly int? Start;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsManageStatusDefinition(
            string? colorPreference,
            int? count,
            string? displayFormat,
            bool? hideZeroCounts,
            string query,
            string? sort,
            int? start,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            ColorPreference = colorPreference;
            Count = count;
            DisplayFormat = displayFormat;
            HideZeroCounts = hideZeroCounts;
            Query = query;
            Sort = sort;
            Start = start;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsNoteDefinition
    {
        public readonly string? BackgroundColor;
        public readonly string Content;
        public readonly string? FontSize;
        public readonly bool? ShowTick;
        public readonly string? TextAlign;
        public readonly string? TickEdge;
        public readonly string? TickPos;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsNoteDefinition(
            string? backgroundColor,
            string content,
            string? fontSize,
            bool? showTick,
            string? textAlign,
            string? tickEdge,
            string? tickPos)
        {
            BackgroundColor = backgroundColor;
            Content = content;
            FontSize = fontSize;
            ShowTick = showTick;
            TextAlign = textAlign;
            TickEdge = tickEdge;
            TickPos = tickPos;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinition
    {
        public readonly bool? Autoscale;
        public readonly string? CustomUnit;
        public readonly int? Precision;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequests> Requests;
        public readonly string? TextAlign;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinition(
            bool? autoscale,
            string? customUnit,
            int? precision,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequests> requests,
            string? textAlign,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Autoscale = autoscale;
            CustomUnit = customUnit;
            Precision = precision;
            Requests = requests;
            TextAlign = textAlign;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequests
    {
        public readonly string? Aggregator;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuery? ApmQuery;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormats> ConditionalFormats;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequests(
            string? aggregator,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuery? apmQuery,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormats> conditionalFormats,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQuery? processQuery,
            string? q)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            ConditionalFormats = conditionalFormats;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormats
    {
        public readonly string Comparator;
        public readonly string? CustomBgColor;
        public readonly string? CustomFgColor;
        public readonly bool? HideValue;
        public readonly string? ImageUrl;
        public readonly string Palette;
        public readonly string? Timeframe;
        public readonly double Value;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsConditionalFormats(
            string comparator,
            string? customBgColor,
            string? customFgColor,
            bool? hideValue,
            string? imageUrl,
            string palette,
            string? timeframe,
            double value)
        {
            Comparator = comparator;
            CustomBgColor = customBgColor;
            CustomFgColor = customFgColor;
            HideValue = hideValue;
            ImageUrl = imageUrl;
            Palette = palette;
            Timeframe = timeframe;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsQueryValueDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinition
    {
        public readonly ImmutableArray<string> ColorByGroups;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequest? Request;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxis? Xaxis;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxis? Yaxis;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinition(
            ImmutableArray<string> colorByGroups,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequest? request,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxis? xaxis,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxis? yaxis)
        {
            ColorByGroups = colorByGroups;
            Request = request;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Xaxis = xaxis;
            Yaxis = yaxis;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequest
    {
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXes> Xes;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYs> Ys;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequest(
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXes> xes,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYs> ys)
        {
            Xes = xes;
            Ys = ys;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXes
    {
        public readonly string? Aggregator;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuery? ApmQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXes(
            string? aggregator,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuery? apmQuery,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQuery? processQuery,
            string? q)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestXesProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYs
    {
        public readonly string? Aggregator;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuery? ApmQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYs(
            string? aggregator,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuery? apmQuery,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQuery? processQuery,
            string? q)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionRequestYsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionXaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsScatterplotDefinitionYaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEvents> Events;
        public readonly string? LegendSize;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkers> Markers;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequests> Requests;
        public readonly bool? ShowLegend;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxis? Yaxis;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinition(
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEvents> events,
            string? legendSize,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkers> markers,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequests> requests,
            bool? showLegend,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxis? yaxis)
        {
            Events = events;
            LegendSize = legendSize;
            Markers = markers;
            Requests = requests;
            ShowLegend = showLegend;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Yaxis = yaxis;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEvents
    {
        public readonly string Q;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionEvents(string q)
        {
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkers
    {
        public readonly string? DisplayType;
        public readonly string? Label;
        public readonly string Value;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionMarkers(
            string? displayType,
            string? label,
            string value)
        {
            DisplayType = displayType;
            Label = label;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequests
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuery? ApmQuery;
        public readonly string? DisplayType;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuery? LogQuery;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatas> Metadatas;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequests(
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuery? apmQuery,
            string? displayType,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuery? logQuery,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatas> metadatas,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            DisplayType = displayType;
            LogQuery = logQuery;
            Metadatas = metadatas;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatas
    {
        public readonly string? AliasName;
        public readonly string Expression;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsMetadatas(
            string? aliasName,
            string expression)
        {
            AliasName = aliasName;
            Expression = expression;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyle
    {
        public readonly string? LineType;
        public readonly string? LineWidth;
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionRequestsStyle(
            string? lineType,
            string? lineWidth,
            string? palette)
        {
            LineType = lineType;
            LineWidth = lineWidth;
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTimeseriesDefinitionYaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequests> Requests;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinition(
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequests> requests,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequests
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuery? ApmQuery;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormats> ConditionalFormats;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequests(
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuery? apmQuery,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormats> conditionalFormats,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            ConditionalFormats = conditionalFormats;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuery(
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormats
    {
        public readonly string Comparator;
        public readonly string? CustomBgColor;
        public readonly string? CustomFgColor;
        public readonly bool? HideValue;
        public readonly string? ImageUrl;
        public readonly string Palette;
        public readonly string? Timeframe;
        public readonly double Value;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsConditionalFormats(
            string comparator,
            string? customBgColor,
            string? customFgColor,
            bool? hideValue,
            string? imageUrl,
            string palette,
            string? timeframe,
            double value)
        {
            Comparator = comparator;
            CustomBgColor = customBgColor;
            CustomFgColor = customFgColor;
            HideValue = hideValue;
            ImageUrl = imageUrl;
            Palette = palette;
            Timeframe = timeframe;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuery(
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyle
    {
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionRequestsStyle(string? palette)
        {
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsToplistDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinition
    {
        public readonly string? DisplayFormat;
        public readonly string Env;
        public readonly string Service;
        public readonly bool? ShowBreakdown;
        public readonly bool? ShowDistribution;
        public readonly bool? ShowErrors;
        public readonly bool? ShowHits;
        public readonly bool? ShowLatency;
        public readonly bool? ShowResourceList;
        public readonly string? SizeFormat;
        public readonly string SpanName;
        public readonly DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinition(
            string? displayFormat,
            string env,
            string service,
            bool? showBreakdown,
            bool? showDistribution,
            bool? showErrors,
            bool? showHits,
            bool? showLatency,
            bool? showResourceList,
            string? sizeFormat,
            string spanName,
            DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            DisplayFormat = displayFormat;
            Env = env;
            Service = service;
            ShowBreakdown = showBreakdown;
            ShowDistribution = showDistribution;
            ShowErrors = showErrors;
            ShowHits = showHits;
            ShowLatency = showLatency;
            ShowResourceList = showResourceList;
            SizeFormat = sizeFormat;
            SpanName = spanName;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsGroupDefinitionWidgetsTraceServiceDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsHeatmapDefinitionRequests> Requests;
        public readonly DashboardWidgetsHeatmapDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly DashboardWidgetsHeatmapDefinitionYaxis? Yaxis;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinition(
            ImmutableArray<DashboardWidgetsHeatmapDefinitionRequests> requests,
            DashboardWidgetsHeatmapDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            DashboardWidgetsHeatmapDefinitionYaxis? yaxis)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Yaxis = yaxis;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequests
    {
        public readonly DashboardWidgetsHeatmapDefinitionRequestsApmQuery? ApmQuery;
        public readonly DashboardWidgetsHeatmapDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsHeatmapDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsHeatmapDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequests(
            DashboardWidgetsHeatmapDefinitionRequestsApmQuery? apmQuery,
            DashboardWidgetsHeatmapDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsHeatmapDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsHeatmapDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsHeatmapDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsApmQuery(
            DashboardWidgetsHeatmapDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsHeatmapDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsLogQuery(
            DashboardWidgetsHeatmapDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionRequestsStyle
    {
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionRequestsStyle(string? palette)
        {
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHeatmapDefinitionYaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsHeatmapDefinitionYaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinition
    {
        public readonly ImmutableArray<string> Groups;
        public readonly bool? NoGroupHosts;
        public readonly bool? NoMetricHosts;
        public readonly string? NodeType;
        public readonly DashboardWidgetsHostmapDefinitionRequest? Request;
        public readonly ImmutableArray<string> Scopes;
        public readonly DashboardWidgetsHostmapDefinitionStyle? Style;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinition(
            ImmutableArray<string> groups,
            bool? noGroupHosts,
            bool? noMetricHosts,
            string? nodeType,
            DashboardWidgetsHostmapDefinitionRequest? request,
            ImmutableArray<string> scopes,
            DashboardWidgetsHostmapDefinitionStyle? style,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Groups = groups;
            NoGroupHosts = noGroupHosts;
            NoMetricHosts = noMetricHosts;
            NodeType = nodeType;
            Request = request;
            Scopes = scopes;
            Style = style;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequest
    {
        public readonly ImmutableArray<DashboardWidgetsHostmapDefinitionRequestFills> Fills;
        public readonly ImmutableArray<DashboardWidgetsHostmapDefinitionRequestSizes> Sizes;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequest(
            ImmutableArray<DashboardWidgetsHostmapDefinitionRequestFills> fills,
            ImmutableArray<DashboardWidgetsHostmapDefinitionRequestSizes> sizes)
        {
            Fills = fills;
            Sizes = sizes;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFills
    {
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsApmQuery? ApmQuery;
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsLogQuery? LogQuery;
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFills(
            DashboardWidgetsHostmapDefinitionRequestFillsApmQuery? apmQuery,
            DashboardWidgetsHostmapDefinitionRequestFillsLogQuery? logQuery,
            DashboardWidgetsHostmapDefinitionRequestFillsProcessQuery? processQuery,
            string? q)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQuery
    {
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsApmQuery(
            DashboardWidgetsHostmapDefinitionRequestFillsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQuery
    {
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsLogQuery(
            DashboardWidgetsHostmapDefinitionRequestFillsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestFillsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestFillsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizes
    {
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesApmQuery? ApmQuery;
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesLogQuery? LogQuery;
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizes(
            DashboardWidgetsHostmapDefinitionRequestSizesApmQuery? apmQuery,
            DashboardWidgetsHostmapDefinitionRequestSizesLogQuery? logQuery,
            DashboardWidgetsHostmapDefinitionRequestSizesProcessQuery? processQuery,
            string? q)
        {
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQuery
    {
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesApmQuery(
            DashboardWidgetsHostmapDefinitionRequestSizesApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQuery
    {
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesLogQuery(
            DashboardWidgetsHostmapDefinitionRequestSizesLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionRequestSizesProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionRequestSizesProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsHostmapDefinitionStyle
    {
        public readonly string? FillMax;
        public readonly string? FillMin;
        public readonly string? Palette;
        public readonly bool? PaletteFlip;

        [OutputConstructor]
        private DashboardWidgetsHostmapDefinitionStyle(
            string? fillMax,
            string? fillMin,
            string? palette,
            bool? paletteFlip)
        {
            FillMax = fillMax;
            FillMin = fillMin;
            Palette = palette;
            PaletteFlip = paletteFlip;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsIframeDefinition
    {
        public readonly string Url;

        [OutputConstructor]
        private DashboardWidgetsIframeDefinition(string url)
        {
            Url = url;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsImageDefinition
    {
        public readonly string? Margin;
        public readonly string? Sizing;
        public readonly string Url;

        [OutputConstructor]
        private DashboardWidgetsImageDefinition(
            string? margin,
            string? sizing,
            string url)
        {
            Margin = margin;
            Sizing = sizing;
            Url = url;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsLayout
    {
        public readonly double Height;
        public readonly double Width;
        public readonly double X;
        public readonly double Y;

        [OutputConstructor]
        private DashboardWidgetsLayout(
            double height,
            double width,
            double x,
            double y)
        {
            Height = height;
            Width = width;
            X = x;
            Y = y;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsLogStreamDefinition
    {
        public readonly ImmutableArray<string> Columns;
        public readonly string Logset;
        public readonly string? Query;
        public readonly DashboardWidgetsLogStreamDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsLogStreamDefinition(
            ImmutableArray<string> columns,
            string logset,
            string? query,
            DashboardWidgetsLogStreamDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Columns = columns;
            Logset = logset;
            Query = query;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsLogStreamDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsLogStreamDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsManageStatusDefinition
    {
        public readonly string? ColorPreference;
        public readonly int? Count;
        public readonly string? DisplayFormat;
        public readonly bool? HideZeroCounts;
        public readonly string Query;
        public readonly string? Sort;
        public readonly int? Start;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsManageStatusDefinition(
            string? colorPreference,
            int? count,
            string? displayFormat,
            bool? hideZeroCounts,
            string query,
            string? sort,
            int? start,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            ColorPreference = colorPreference;
            Count = count;
            DisplayFormat = displayFormat;
            HideZeroCounts = hideZeroCounts;
            Query = query;
            Sort = sort;
            Start = start;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsNoteDefinition
    {
        public readonly string? BackgroundColor;
        public readonly string Content;
        public readonly string? FontSize;
        public readonly bool? ShowTick;
        public readonly string? TextAlign;
        public readonly string? TickEdge;
        public readonly string? TickPos;

        [OutputConstructor]
        private DashboardWidgetsNoteDefinition(
            string? backgroundColor,
            string content,
            string? fontSize,
            bool? showTick,
            string? textAlign,
            string? tickEdge,
            string? tickPos)
        {
            BackgroundColor = backgroundColor;
            Content = content;
            FontSize = fontSize;
            ShowTick = showTick;
            TextAlign = textAlign;
            TickEdge = tickEdge;
            TickPos = tickPos;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinition
    {
        public readonly bool? Autoscale;
        public readonly string? CustomUnit;
        public readonly int? Precision;
        public readonly ImmutableArray<DashboardWidgetsQueryValueDefinitionRequests> Requests;
        public readonly string? TextAlign;
        public readonly DashboardWidgetsQueryValueDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinition(
            bool? autoscale,
            string? customUnit,
            int? precision,
            ImmutableArray<DashboardWidgetsQueryValueDefinitionRequests> requests,
            string? textAlign,
            DashboardWidgetsQueryValueDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Autoscale = autoscale;
            CustomUnit = customUnit;
            Precision = precision;
            Requests = requests;
            TextAlign = textAlign;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequests
    {
        public readonly string? Aggregator;
        public readonly DashboardWidgetsQueryValueDefinitionRequestsApmQuery? ApmQuery;
        public readonly ImmutableArray<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormats> ConditionalFormats;
        public readonly DashboardWidgetsQueryValueDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsQueryValueDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequests(
            string? aggregator,
            DashboardWidgetsQueryValueDefinitionRequestsApmQuery? apmQuery,
            ImmutableArray<DashboardWidgetsQueryValueDefinitionRequestsConditionalFormats> conditionalFormats,
            DashboardWidgetsQueryValueDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsQueryValueDefinitionRequestsProcessQuery? processQuery,
            string? q)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            ConditionalFormats = conditionalFormats;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsQueryValueDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsApmQuery(
            DashboardWidgetsQueryValueDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsConditionalFormats
    {
        public readonly string Comparator;
        public readonly string? CustomBgColor;
        public readonly string? CustomFgColor;
        public readonly bool? HideValue;
        public readonly string? ImageUrl;
        public readonly string Palette;
        public readonly string? Timeframe;
        public readonly double Value;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsConditionalFormats(
            string comparator,
            string? customBgColor,
            string? customFgColor,
            bool? hideValue,
            string? imageUrl,
            string palette,
            string? timeframe,
            double value)
        {
            Comparator = comparator;
            CustomBgColor = customBgColor;
            CustomFgColor = customFgColor;
            HideValue = hideValue;
            ImageUrl = imageUrl;
            Palette = palette;
            Timeframe = timeframe;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsQueryValueDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsLogQuery(
            DashboardWidgetsQueryValueDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsQueryValueDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsQueryValueDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinition
    {
        public readonly ImmutableArray<string> ColorByGroups;
        public readonly DashboardWidgetsScatterplotDefinitionRequest? Request;
        public readonly DashboardWidgetsScatterplotDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly DashboardWidgetsScatterplotDefinitionXaxis? Xaxis;
        public readonly DashboardWidgetsScatterplotDefinitionYaxis? Yaxis;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinition(
            ImmutableArray<string> colorByGroups,
            DashboardWidgetsScatterplotDefinitionRequest? request,
            DashboardWidgetsScatterplotDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            DashboardWidgetsScatterplotDefinitionXaxis? xaxis,
            DashboardWidgetsScatterplotDefinitionYaxis? yaxis)
        {
            ColorByGroups = colorByGroups;
            Request = request;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Xaxis = xaxis;
            Yaxis = yaxis;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequest
    {
        public readonly ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestXes> Xes;
        public readonly ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestYs> Ys;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequest(
            ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestXes> xes,
            ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestYs> ys)
        {
            Xes = xes;
            Ys = ys;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXes
    {
        public readonly string? Aggregator;
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesApmQuery? ApmQuery;
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesLogQuery? LogQuery;
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXes(
            string? aggregator,
            DashboardWidgetsScatterplotDefinitionRequestXesApmQuery? apmQuery,
            DashboardWidgetsScatterplotDefinitionRequestXesLogQuery? logQuery,
            DashboardWidgetsScatterplotDefinitionRequestXesProcessQuery? processQuery,
            string? q)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQuery
    {
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesApmQuery(
            DashboardWidgetsScatterplotDefinitionRequestXesApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQuery
    {
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesLogQuery(
            DashboardWidgetsScatterplotDefinitionRequestXesLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestXesProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestXesProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYs
    {
        public readonly string? Aggregator;
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsApmQuery? ApmQuery;
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsLogQuery? LogQuery;
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsProcessQuery? ProcessQuery;
        public readonly string? Q;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYs(
            string? aggregator,
            DashboardWidgetsScatterplotDefinitionRequestYsApmQuery? apmQuery,
            DashboardWidgetsScatterplotDefinitionRequestYsLogQuery? logQuery,
            DashboardWidgetsScatterplotDefinitionRequestYsProcessQuery? processQuery,
            string? q)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQuery
    {
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsApmQuery(
            DashboardWidgetsScatterplotDefinitionRequestYsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQuery
    {
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsLogQuery(
            DashboardWidgetsScatterplotDefinitionRequestYsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionRequestYsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionRequestYsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionXaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionXaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsScatterplotDefinitionYaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsScatterplotDefinitionYaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsTimeseriesDefinitionEvents> Events;
        public readonly string? LegendSize;
        public readonly ImmutableArray<DashboardWidgetsTimeseriesDefinitionMarkers> Markers;
        public readonly ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequests> Requests;
        public readonly bool? ShowLegend;
        public readonly DashboardWidgetsTimeseriesDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;
        public readonly DashboardWidgetsTimeseriesDefinitionYaxis? Yaxis;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinition(
            ImmutableArray<DashboardWidgetsTimeseriesDefinitionEvents> events,
            string? legendSize,
            ImmutableArray<DashboardWidgetsTimeseriesDefinitionMarkers> markers,
            ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequests> requests,
            bool? showLegend,
            DashboardWidgetsTimeseriesDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize,
            DashboardWidgetsTimeseriesDefinitionYaxis? yaxis)
        {
            Events = events;
            LegendSize = legendSize;
            Markers = markers;
            Requests = requests;
            ShowLegend = showLegend;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Yaxis = yaxis;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionEvents
    {
        public readonly string Q;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionEvents(string q)
        {
            Q = q;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionMarkers
    {
        public readonly string? DisplayType;
        public readonly string? Label;
        public readonly string Value;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionMarkers(
            string? displayType,
            string? label,
            string value)
        {
            DisplayType = displayType;
            Label = label;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequests
    {
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsApmQuery? ApmQuery;
        public readonly string? DisplayType;
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsLogQuery? LogQuery;
        public readonly ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequestsMetadatas> Metadatas;
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequests(
            DashboardWidgetsTimeseriesDefinitionRequestsApmQuery? apmQuery,
            string? displayType,
            DashboardWidgetsTimeseriesDefinitionRequestsLogQuery? logQuery,
            ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequestsMetadatas> metadatas,
            DashboardWidgetsTimeseriesDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsTimeseriesDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            DisplayType = displayType;
            LogQuery = logQuery;
            Metadatas = metadatas;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsApmQuery(
            DashboardWidgetsTimeseriesDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsLogQuery(
            DashboardWidgetsTimeseriesDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsMetadatas
    {
        public readonly string? AliasName;
        public readonly string Expression;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsMetadatas(
            string? aliasName,
            string expression)
        {
            AliasName = aliasName;
            Expression = expression;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionRequestsStyle
    {
        public readonly string? LineType;
        public readonly string? LineWidth;
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionRequestsStyle(
            string? lineType,
            string? lineWidth,
            string? palette)
        {
            LineType = lineType;
            LineWidth = lineWidth;
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTimeseriesDefinitionYaxis
    {
        public readonly bool? IncludeZero;
        public readonly string? Label;
        public readonly string? Max;
        public readonly string? Min;
        public readonly string? Scale;

        [OutputConstructor]
        private DashboardWidgetsTimeseriesDefinitionYaxis(
            bool? includeZero,
            string? label,
            string? max,
            string? min,
            string? scale)
        {
            IncludeZero = includeZero;
            Label = label;
            Max = max;
            Min = min;
            Scale = scale;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinition
    {
        public readonly ImmutableArray<DashboardWidgetsToplistDefinitionRequests> Requests;
        public readonly DashboardWidgetsToplistDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinition(
            ImmutableArray<DashboardWidgetsToplistDefinitionRequests> requests,
            DashboardWidgetsToplistDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            Requests = requests;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequests
    {
        public readonly DashboardWidgetsToplistDefinitionRequestsApmQuery? ApmQuery;
        public readonly ImmutableArray<DashboardWidgetsToplistDefinitionRequestsConditionalFormats> ConditionalFormats;
        public readonly DashboardWidgetsToplistDefinitionRequestsLogQuery? LogQuery;
        public readonly DashboardWidgetsToplistDefinitionRequestsProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly DashboardWidgetsToplistDefinitionRequestsStyle? Style;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequests(
            DashboardWidgetsToplistDefinitionRequestsApmQuery? apmQuery,
            ImmutableArray<DashboardWidgetsToplistDefinitionRequestsConditionalFormats> conditionalFormats,
            DashboardWidgetsToplistDefinitionRequestsLogQuery? logQuery,
            DashboardWidgetsToplistDefinitionRequestsProcessQuery? processQuery,
            string? q,
            DashboardWidgetsToplistDefinitionRequestsStyle? style)
        {
            ApmQuery = apmQuery;
            ConditionalFormats = conditionalFormats;
            LogQuery = logQuery;
            ProcessQuery = processQuery;
            Q = q;
            Style = style;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQuery
    {
        public readonly DashboardWidgetsToplistDefinitionRequestsApmQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsToplistDefinitionRequestsApmQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsApmQuery(
            DashboardWidgetsToplistDefinitionRequestsApmQueryCompute compute,
            ImmutableArray<DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsToplistDefinitionRequestsApmQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsApmQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsApmQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsApmQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsApmQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsConditionalFormats
    {
        public readonly string Comparator;
        public readonly string? CustomBgColor;
        public readonly string? CustomFgColor;
        public readonly bool? HideValue;
        public readonly string? ImageUrl;
        public readonly string Palette;
        public readonly string? Timeframe;
        public readonly double Value;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsConditionalFormats(
            string comparator,
            string? customBgColor,
            string? customFgColor,
            bool? hideValue,
            string? imageUrl,
            string palette,
            string? timeframe,
            double value)
        {
            Comparator = comparator;
            CustomBgColor = customBgColor;
            CustomFgColor = customFgColor;
            HideValue = hideValue;
            ImageUrl = imageUrl;
            Palette = palette;
            Timeframe = timeframe;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQuery
    {
        public readonly DashboardWidgetsToplistDefinitionRequestsLogQueryCompute Compute;
        public readonly ImmutableArray<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBies> GroupBies;
        public readonly string Index;
        public readonly DashboardWidgetsToplistDefinitionRequestsLogQuerySearch? Search;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsLogQuery(
            DashboardWidgetsToplistDefinitionRequestsLogQueryCompute compute,
            ImmutableArray<DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBies> groupBies,
            string index,
            DashboardWidgetsToplistDefinitionRequestsLogQuerySearch? search)
        {
            Compute = compute;
            GroupBies = groupBies;
            Index = index;
            Search = search;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryCompute
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly int? Interval;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsLogQueryCompute(
            string aggregation,
            string? facet,
            int? interval)
        {
            Aggregation = aggregation;
            Facet = facet;
            Interval = interval;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBies
    {
        public readonly string? Facet;
        public readonly int? Limit;
        public readonly DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort? Sort;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBies(
            string? facet,
            int? limit,
            DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort? sort)
        {
            Facet = facet;
            Limit = limit;
            Sort = sort;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort
    {
        public readonly string Aggregation;
        public readonly string? Facet;
        public readonly string Order;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsLogQueryGroupBiesSort(
            string aggregation,
            string? facet,
            string order)
        {
            Aggregation = aggregation;
            Facet = facet;
            Order = order;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsLogQuerySearch
    {
        public readonly string Query;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsLogQuerySearch(string query)
        {
            Query = query;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsProcessQuery
    {
        public readonly ImmutableArray<string> FilterBies;
        public readonly int? Limit;
        public readonly string Metric;
        public readonly string? SearchBy;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsProcessQuery(
            ImmutableArray<string> filterBies,
            int? limit,
            string metric,
            string? searchBy)
        {
            FilterBies = filterBies;
            Limit = limit;
            Metric = metric;
            SearchBy = searchBy;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionRequestsStyle
    {
        public readonly string? Palette;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionRequestsStyle(string? palette)
        {
            Palette = palette;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsToplistDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsToplistDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTraceServiceDefinition
    {
        public readonly string? DisplayFormat;
        public readonly string Env;
        public readonly string Service;
        public readonly bool? ShowBreakdown;
        public readonly bool? ShowDistribution;
        public readonly bool? ShowErrors;
        public readonly bool? ShowHits;
        public readonly bool? ShowLatency;
        public readonly bool? ShowResourceList;
        public readonly string? SizeFormat;
        public readonly string SpanName;
        public readonly DashboardWidgetsTraceServiceDefinitionTime? Time;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetsTraceServiceDefinition(
            string? displayFormat,
            string env,
            string service,
            bool? showBreakdown,
            bool? showDistribution,
            bool? showErrors,
            bool? showHits,
            bool? showLatency,
            bool? showResourceList,
            string? sizeFormat,
            string spanName,
            DashboardWidgetsTraceServiceDefinitionTime? time,
            string? title,
            string? titleAlign,
            string? titleSize)
        {
            DisplayFormat = displayFormat;
            Env = env;
            Service = service;
            ShowBreakdown = showBreakdown;
            ShowDistribution = showDistribution;
            ShowErrors = showErrors;
            ShowHits = showHits;
            ShowLatency = showLatency;
            ShowResourceList = showResourceList;
            SizeFormat = sizeFormat;
            SpanName = spanName;
            Time = time;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }

    [OutputType]
    public sealed class DashboardWidgetsTraceServiceDefinitionTime
    {
        public readonly string? LiveSpan;

        [OutputConstructor]
        private DashboardWidgetsTraceServiceDefinitionTime(string? liveSpan)
        {
            LiveSpan = liveSpan;
        }
    }
    }
}
