// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetServiceLevelObjective
    {
        /// <summary>
        /// Use this data source to retrieve information about an existing SLO for use in other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Datadog.GetServiceLevelObjective.InvokeAsync(new Datadog.GetServiceLevelObjectiveArgs
        ///         {
        ///             NameQuery = "My test SLO",
        ///             TagsQuery = "foo:bar",
        ///         }));
        ///         var apiSlo = Output.Create(Datadog.GetServiceLevelObjective.InvokeAsync(new Datadog.GetServiceLevelObjectiveArgs
        ///         {
        ///             Id = data.Terraform_remote_state.Api.Outputs.Slo,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceLevelObjectiveResult> InvokeAsync(GetServiceLevelObjectiveArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceLevelObjectiveResult>("datadog:index/getServiceLevelObjective:getServiceLevelObjective", args ?? new GetServiceLevelObjectiveArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing SLO for use in other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Datadog.GetServiceLevelObjective.InvokeAsync(new Datadog.GetServiceLevelObjectiveArgs
        ///         {
        ///             NameQuery = "My test SLO",
        ///             TagsQuery = "foo:bar",
        ///         }));
        ///         var apiSlo = Output.Create(Datadog.GetServiceLevelObjective.InvokeAsync(new Datadog.GetServiceLevelObjectiveArgs
        ///         {
        ///             Id = data.Terraform_remote_state.Api.Outputs.Slo,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceLevelObjectiveResult> Invoke(GetServiceLevelObjectiveInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceLevelObjectiveResult>("datadog:index/getServiceLevelObjective:getServiceLevelObjective", args ?? new GetServiceLevelObjectiveInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceLevelObjectiveArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("metricsQuery")]
        public string? MetricsQuery { get; set; }

        [Input("nameQuery")]
        public string? NameQuery { get; set; }

        [Input("tagsQuery")]
        public string? TagsQuery { get; set; }

        public GetServiceLevelObjectiveArgs()
        {
        }
    }

    public sealed class GetServiceLevelObjectiveInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("metricsQuery")]
        public Input<string>? MetricsQuery { get; set; }

        [Input("nameQuery")]
        public Input<string>? NameQuery { get; set; }

        [Input("tagsQuery")]
        public Input<string>? TagsQuery { get; set; }

        public GetServiceLevelObjectiveInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceLevelObjectiveResult
    {
        public readonly string? Id;
        public readonly string? MetricsQuery;
        public readonly string Name;
        public readonly string? NameQuery;
        public readonly string? TagsQuery;
        public readonly string Type;

        [OutputConstructor]
        private GetServiceLevelObjectiveResult(
            string? id,

            string? metricsQuery,

            string name,

            string? nameQuery,

            string? tagsQuery,

            string type)
        {
            Id = id;
            MetricsQuery = metricsQuery;
            Name = name;
            NameQuery = nameQuery;
            TagsQuery = tagsQuery;
            Type = type;
        }
    }
}
