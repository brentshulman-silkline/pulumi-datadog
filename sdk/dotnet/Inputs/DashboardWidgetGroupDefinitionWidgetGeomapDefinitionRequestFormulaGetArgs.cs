// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        [Input("cellDisplayMode")]
        public Input<string>? CellDisplayMode { get; set; }

        [Input("conditionalFormats")]
        private InputList<Inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaConditionalFormatGetArgs>? _conditionalFormats;
        public InputList<Inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaConditionalFormatGetArgs> ConditionalFormats
        {
            get => _conditionalFormats ?? (_conditionalFormats = new InputList<Inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaConditionalFormatGetArgs>());
            set => _conditionalFormats = value;
        }

        [Input("formulaExpression", required: true)]
        public Input<string> FormulaExpression { get; set; } = null!;

        [Input("limit")]
        public Input<Inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimitGetArgs>? Limit { get; set; }

        [Input("style")]
        public Input<Inputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaStyleGetArgs>? Style { get; set; }

        public DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaGetArgs()
        {
        }
        public static new DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaGetArgs Empty => new DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaGetArgs();
    }
}
