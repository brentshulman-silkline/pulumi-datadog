// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SyntheticsTest struct {
	pulumi.CustomResourceState

	// Deprecated: Use assertion instead
	Assertions pulumi.MapArrayOutput    `pulumi:"assertions"`
	DeviceIds  pulumi.StringArrayOutput `pulumi:"deviceIds"`
	Locations  pulumi.StringArrayOutput `pulumi:"locations"`
	Message    pulumi.StringPtrOutput   `pulumi:"message"`
	MonitorId  pulumi.IntOutput         `pulumi:"monitorId"`
	Name       pulumi.StringOutput      `pulumi:"name"`
	// Deprecated: This parameter is deprecated, please use `options_list`
	Options          SyntheticsTestOptionsPtrOutput          `pulumi:"options"`
	OptionsList      SyntheticsTestOptionsListPtrOutput      `pulumi:"optionsList"`
	Request          SyntheticsTestRequestOutput             `pulumi:"request"`
	RequestBasicauth SyntheticsTestRequestBasicauthPtrOutput `pulumi:"requestBasicauth"`
	RequestHeaders   pulumi.MapOutput                        `pulumi:"requestHeaders"`
	RequestQuery     pulumi.MapOutput                        `pulumi:"requestQuery"`
	Status           pulumi.StringOutput                     `pulumi:"status"`
	Steps            SyntheticsTestStepArrayOutput           `pulumi:"steps"`
	Subtype          pulumi.StringPtrOutput                  `pulumi:"subtype"`
	Tags             pulumi.StringArrayOutput                `pulumi:"tags"`
	Type             pulumi.StringOutput                     `pulumi:"type"`
}

// NewSyntheticsTest registers a new resource with the given unique name, arguments, and options.
func NewSyntheticsTest(ctx *pulumi.Context,
	name string, args *SyntheticsTestArgs, opts ...pulumi.ResourceOption) (*SyntheticsTest, error) {
	if args == nil || args.Locations == nil {
		return nil, errors.New("missing required argument 'Locations'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Request == nil {
		return nil, errors.New("missing required argument 'Request'")
	}
	if args == nil || args.Status == nil {
		return nil, errors.New("missing required argument 'Status'")
	}
	if args == nil || args.Tags == nil {
		return nil, errors.New("missing required argument 'Tags'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &SyntheticsTestArgs{}
	}
	var resource SyntheticsTest
	err := ctx.RegisterResource("datadog:index/syntheticsTest:SyntheticsTest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyntheticsTest gets an existing SyntheticsTest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyntheticsTest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyntheticsTestState, opts ...pulumi.ResourceOption) (*SyntheticsTest, error) {
	var resource SyntheticsTest
	err := ctx.ReadResource("datadog:index/syntheticsTest:SyntheticsTest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyntheticsTest resources.
type syntheticsTestState struct {
	// Deprecated: Use assertion instead
	Assertions []map[string]interface{} `pulumi:"assertions"`
	DeviceIds  []string                 `pulumi:"deviceIds"`
	Locations  []string                 `pulumi:"locations"`
	Message    *string                  `pulumi:"message"`
	MonitorId  *int                     `pulumi:"monitorId"`
	Name       *string                  `pulumi:"name"`
	// Deprecated: This parameter is deprecated, please use `options_list`
	Options          *SyntheticsTestOptions          `pulumi:"options"`
	OptionsList      *SyntheticsTestOptionsList      `pulumi:"optionsList"`
	Request          *SyntheticsTestRequest          `pulumi:"request"`
	RequestBasicauth *SyntheticsTestRequestBasicauth `pulumi:"requestBasicauth"`
	RequestHeaders   map[string]interface{}          `pulumi:"requestHeaders"`
	RequestQuery     map[string]interface{}          `pulumi:"requestQuery"`
	Status           *string                         `pulumi:"status"`
	Steps            []SyntheticsTestStep            `pulumi:"steps"`
	Subtype          *string                         `pulumi:"subtype"`
	Tags             []string                        `pulumi:"tags"`
	Type             *string                         `pulumi:"type"`
}

type SyntheticsTestState struct {
	// Deprecated: Use assertion instead
	Assertions pulumi.MapArrayInput
	DeviceIds  pulumi.StringArrayInput
	Locations  pulumi.StringArrayInput
	Message    pulumi.StringPtrInput
	MonitorId  pulumi.IntPtrInput
	Name       pulumi.StringPtrInput
	// Deprecated: This parameter is deprecated, please use `options_list`
	Options          SyntheticsTestOptionsPtrInput
	OptionsList      SyntheticsTestOptionsListPtrInput
	Request          SyntheticsTestRequestPtrInput
	RequestBasicauth SyntheticsTestRequestBasicauthPtrInput
	RequestHeaders   pulumi.MapInput
	RequestQuery     pulumi.MapInput
	Status           pulumi.StringPtrInput
	Steps            SyntheticsTestStepArrayInput
	Subtype          pulumi.StringPtrInput
	Tags             pulumi.StringArrayInput
	Type             pulumi.StringPtrInput
}

func (SyntheticsTestState) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsTestState)(nil)).Elem()
}

type syntheticsTestArgs struct {
	// Deprecated: Use assertion instead
	Assertions []map[string]interface{} `pulumi:"assertions"`
	DeviceIds  []string                 `pulumi:"deviceIds"`
	Locations  []string                 `pulumi:"locations"`
	Message    *string                  `pulumi:"message"`
	Name       string                   `pulumi:"name"`
	// Deprecated: This parameter is deprecated, please use `options_list`
	Options          *SyntheticsTestOptions          `pulumi:"options"`
	OptionsList      *SyntheticsTestOptionsList      `pulumi:"optionsList"`
	Request          SyntheticsTestRequest           `pulumi:"request"`
	RequestBasicauth *SyntheticsTestRequestBasicauth `pulumi:"requestBasicauth"`
	RequestHeaders   map[string]interface{}          `pulumi:"requestHeaders"`
	RequestQuery     map[string]interface{}          `pulumi:"requestQuery"`
	Status           string                          `pulumi:"status"`
	Steps            []SyntheticsTestStep            `pulumi:"steps"`
	Subtype          *string                         `pulumi:"subtype"`
	Tags             []string                        `pulumi:"tags"`
	Type             string                          `pulumi:"type"`
}

// The set of arguments for constructing a SyntheticsTest resource.
type SyntheticsTestArgs struct {
	// Deprecated: Use assertion instead
	Assertions pulumi.MapArrayInput
	DeviceIds  pulumi.StringArrayInput
	Locations  pulumi.StringArrayInput
	Message    pulumi.StringPtrInput
	Name       pulumi.StringInput
	// Deprecated: This parameter is deprecated, please use `options_list`
	Options          SyntheticsTestOptionsPtrInput
	OptionsList      SyntheticsTestOptionsListPtrInput
	Request          SyntheticsTestRequestInput
	RequestBasicauth SyntheticsTestRequestBasicauthPtrInput
	RequestHeaders   pulumi.MapInput
	RequestQuery     pulumi.MapInput
	Status           pulumi.StringInput
	Steps            SyntheticsTestStepArrayInput
	Subtype          pulumi.StringPtrInput
	Tags             pulumi.StringArrayInput
	Type             pulumi.StringInput
}

func (SyntheticsTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsTestArgs)(nil)).Elem()
}
