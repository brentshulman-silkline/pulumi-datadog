// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/aws"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aws.NewIntegration(ctx, "sandbox", &aws.IntegrationArgs{
// 			AccountId: pulumi.String("1234567890"),
// 			AccountSpecificNamespaceRules: pulumi.BoolMap{
// 				"auto_scaling": pulumi.Bool(false),
// 				"opsworks":     pulumi.Bool(false),
// 			},
// 			ExcludedRegions: pulumi.StringArray{
// 				pulumi.String("us-east-1"),
// 				pulumi.String("us-west-2"),
// 			},
// 			FilterTags: pulumi.StringArray{
// 				pulumi.String("key:value"),
// 			},
// 			HostTags: pulumi.StringArray{
// 				pulumi.String("key:value"),
// 				pulumi.String("key2:value2"),
// 			},
// 			RoleName: pulumi.String("DatadogAWSIntegrationRole"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Integration struct {
	pulumi.CustomResourceState

	AccountId                     pulumi.StringOutput      `pulumi:"accountId"`
	AccountSpecificNamespaceRules pulumi.MapOutput         `pulumi:"accountSpecificNamespaceRules"`
	ExcludedRegions               pulumi.StringArrayOutput `pulumi:"excludedRegions"`
	ExternalId                    pulumi.StringOutput      `pulumi:"externalId"`
	FilterTags                    pulumi.StringArrayOutput `pulumi:"filterTags"`
	HostTags                      pulumi.StringArrayOutput `pulumi:"hostTags"`
	RoleName                      pulumi.StringOutput      `pulumi:"roleName"`
}

// NewIntegration registers a new resource with the given unique name, arguments, and options.
func NewIntegration(ctx *pulumi.Context,
	name string, args *IntegrationArgs, opts ...pulumi.ResourceOption) (*Integration, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.RoleName == nil {
		return nil, errors.New("missing required argument 'RoleName'")
	}
	if args == nil {
		args = &IntegrationArgs{}
	}
	var resource Integration
	err := ctx.RegisterResource("datadog:aws/integration:Integration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegration gets an existing Integration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationState, opts ...pulumi.ResourceOption) (*Integration, error) {
	var resource Integration
	err := ctx.ReadResource("datadog:aws/integration:Integration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Integration resources.
type integrationState struct {
	AccountId                     *string                `pulumi:"accountId"`
	AccountSpecificNamespaceRules map[string]interface{} `pulumi:"accountSpecificNamespaceRules"`
	ExcludedRegions               []string               `pulumi:"excludedRegions"`
	ExternalId                    *string                `pulumi:"externalId"`
	FilterTags                    []string               `pulumi:"filterTags"`
	HostTags                      []string               `pulumi:"hostTags"`
	RoleName                      *string                `pulumi:"roleName"`
}

type IntegrationState struct {
	AccountId                     pulumi.StringPtrInput
	AccountSpecificNamespaceRules pulumi.MapInput
	ExcludedRegions               pulumi.StringArrayInput
	ExternalId                    pulumi.StringPtrInput
	FilterTags                    pulumi.StringArrayInput
	HostTags                      pulumi.StringArrayInput
	RoleName                      pulumi.StringPtrInput
}

func (IntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationState)(nil)).Elem()
}

type integrationArgs struct {
	AccountId                     string                 `pulumi:"accountId"`
	AccountSpecificNamespaceRules map[string]interface{} `pulumi:"accountSpecificNamespaceRules"`
	ExcludedRegions               []string               `pulumi:"excludedRegions"`
	FilterTags                    []string               `pulumi:"filterTags"`
	HostTags                      []string               `pulumi:"hostTags"`
	RoleName                      string                 `pulumi:"roleName"`
}

// The set of arguments for constructing a Integration resource.
type IntegrationArgs struct {
	AccountId                     pulumi.StringInput
	AccountSpecificNamespaceRules pulumi.MapInput
	ExcludedRegions               pulumi.StringArrayInput
	FilterTags                    pulumi.StringArrayInput
	HostTags                      pulumi.StringArrayInput
	RoleName                      pulumi.StringInput
}

func (IntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationArgs)(nil)).Elem()
}
