// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated (either manually in the Datadog UI or by using [datadog_integration_pagerduty](https://www.terraform.io/docs/providers/datadog/r/integration_pagerduty.html)) in order for this resource to be usable.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-datadog/blob/master/website/docs/r/integration_pagerduty_service_object.html.markdown.
type ServiceObject struct {
	s *pulumi.ResourceState
}

// NewServiceObject registers a new resource with the given unique name, arguments, and options.
func NewServiceObject(ctx *pulumi.Context,
	name string, args *ServiceObjectArgs, opts ...pulumi.ResourceOpt) (*ServiceObject, error) {
	if args == nil || args.ServiceKey == nil {
		return nil, errors.New("missing required argument 'ServiceKey'")
	}
	if args == nil || args.ServiceName == nil {
		return nil, errors.New("missing required argument 'ServiceName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["serviceKey"] = nil
		inputs["serviceName"] = nil
	} else {
		inputs["serviceKey"] = args.ServiceKey
		inputs["serviceName"] = args.ServiceName
	}
	s, err := ctx.RegisterResource("datadog:pagerduty/serviceObject:ServiceObject", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ServiceObject{s: s}, nil
}

// GetServiceObject gets an existing ServiceObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceObject(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ServiceObjectState, opts ...pulumi.ResourceOpt) (*ServiceObject, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["serviceKey"] = state.ServiceKey
		inputs["serviceName"] = state.ServiceName
	}
	s, err := ctx.ReadResource("datadog:pagerduty/serviceObject:ServiceObject", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ServiceObject{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ServiceObject) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ServiceObject) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *ServiceObject) ServiceKey() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["serviceKey"])
}

// Your Service name in PagerDuty.
func (r *ServiceObject) ServiceName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["serviceName"])
}

// Input properties used for looking up and filtering ServiceObject resources.
type ServiceObjectState struct {
	ServiceKey interface{}
	// Your Service name in PagerDuty.
	ServiceName interface{}
}

// The set of arguments for constructing a ServiceObject resource.
type ServiceObjectArgs struct {
	ServiceKey interface{}
	// Your Service name in PagerDuty.
	ServiceName interface{}
}
