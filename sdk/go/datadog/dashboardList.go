// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Datadog dashboardList resource. This can be used to create and manage Datadog Dashboard Lists and the individual dashboards within them.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-datadog/blob/master/website/docs/r/dashboard_list.html.markdown.
type DashboardList struct {
	s *pulumi.ResourceState
}

// NewDashboardList registers a new resource with the given unique name, arguments, and options.
func NewDashboardList(ctx *pulumi.Context,
	name string, args *DashboardListArgs, opts ...pulumi.ResourceOpt) (*DashboardList, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["dashItems"] = nil
		inputs["name"] = nil
	} else {
		inputs["dashItems"] = args.DashItems
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("datadog:index/dashboardList:DashboardList", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DashboardList{s: s}, nil
}

// GetDashboardList gets an existing DashboardList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboardList(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DashboardListState, opts ...pulumi.ResourceOpt) (*DashboardList, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["dashItems"] = state.DashItems
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("datadog:index/dashboardList:DashboardList", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DashboardList{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *DashboardList) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *DashboardList) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
func (r *DashboardList) DashItems() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["dashItems"])
}

// The name of this Dashbaord List.
func (r *DashboardList) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering DashboardList resources.
type DashboardListState struct {
	// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
	DashItems interface{}
	// The name of this Dashbaord List.
	Name interface{}
}

// The set of arguments for constructing a DashboardList resource.
type DashboardListArgs struct {
	// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
	DashItems interface{}
	// The name of this Dashbaord List.
	Name interface{}
}
