// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list several existing monitors for use in other resources.
func GetMonitors(ctx *pulumi.Context, args *GetMonitorsArgs, opts ...pulumi.InvokeOption) (*GetMonitorsResult, error) {
	var rv GetMonitorsResult
	err := ctx.Invoke("datadog:index/getMonitors:getMonitors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitors.
type GetMonitorsArgs struct {
	MonitorTagsFilters []string `pulumi:"monitorTagsFilters"`
	NameFilter         *string  `pulumi:"nameFilter"`
	TagsFilters        []string `pulumi:"tagsFilters"`
}

// A collection of values returned by getMonitors.
type GetMonitorsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string               `pulumi:"id"`
	MonitorTagsFilters []string             `pulumi:"monitorTagsFilters"`
	Monitors           []GetMonitorsMonitor `pulumi:"monitors"`
	NameFilter         *string              `pulumi:"nameFilter"`
	TagsFilters        []string             `pulumi:"tagsFilters"`
}

func GetMonitorsOutput(ctx *pulumi.Context, args GetMonitorsOutputArgs, opts ...pulumi.InvokeOption) GetMonitorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMonitorsResult, error) {
			args := v.(GetMonitorsArgs)
			r, err := GetMonitors(ctx, &args, opts...)
			var s GetMonitorsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMonitorsResultOutput)
}

// A collection of arguments for invoking getMonitors.
type GetMonitorsOutputArgs struct {
	MonitorTagsFilters pulumi.StringArrayInput `pulumi:"monitorTagsFilters"`
	NameFilter         pulumi.StringPtrInput   `pulumi:"nameFilter"`
	TagsFilters        pulumi.StringArrayInput `pulumi:"tagsFilters"`
}

func (GetMonitorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsArgs)(nil)).Elem()
}

// A collection of values returned by getMonitors.
type GetMonitorsResultOutput struct{ *pulumi.OutputState }

func (GetMonitorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsResult)(nil)).Elem()
}

func (o GetMonitorsResultOutput) ToGetMonitorsResultOutput() GetMonitorsResultOutput {
	return o
}

func (o GetMonitorsResultOutput) ToGetMonitorsResultOutputWithContext(ctx context.Context) GetMonitorsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetMonitorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMonitorsResultOutput) MonitorTagsFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsResult) []string { return v.MonitorTagsFilters }).(pulumi.StringArrayOutput)
}

func (o GetMonitorsResultOutput) Monitors() GetMonitorsMonitorArrayOutput {
	return o.ApplyT(func(v GetMonitorsResult) []GetMonitorsMonitor { return v.Monitors }).(GetMonitorsMonitorArrayOutput)
}

func (o GetMonitorsResultOutput) NameFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMonitorsResult) *string { return v.NameFilter }).(pulumi.StringPtrOutput)
}

func (o GetMonitorsResultOutput) TagsFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsResult) []string { return v.TagsFilters }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMonitorsResultOutput{})
}
