// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to retrieve information about an existing monitor for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "My awesome monitor"
// 		_, err := datadog.LookupMonitor(ctx, &datadog.LookupMonitorArgs{
// 			MonitorTagsFilters: []string{
// 				"foo:bar",
// 			},
// 			NameFilter: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupMonitor(ctx *pulumi.Context, args *LookupMonitorArgs, opts ...pulumi.InvokeOption) (*LookupMonitorResult, error) {
	var rv LookupMonitorResult
	err := ctx.Invoke("datadog:index/getMonitor:getMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitor.
type LookupMonitorArgs struct {
	MonitorTagsFilters []string `pulumi:"monitorTagsFilters"`
	NameFilter         *string  `pulumi:"nameFilter"`
	TagsFilters        []string `pulumi:"tagsFilters"`
}

// A collection of values returned by getMonitor.
type LookupMonitorResult struct {
	EnableLogsSample  bool   `pulumi:"enableLogsSample"`
	EscalationMessage string `pulumi:"escalationMessage"`
	EvaluationDelay   int    `pulumi:"evaluationDelay"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string                     `pulumi:"id"`
	IncludeTags        bool                       `pulumi:"includeTags"`
	Locked             bool                       `pulumi:"locked"`
	Message            string                     `pulumi:"message"`
	MonitorTagsFilters []string                   `pulumi:"monitorTagsFilters"`
	Name               string                     `pulumi:"name"`
	NameFilter         *string                    `pulumi:"nameFilter"`
	NewHostDelay       int                        `pulumi:"newHostDelay"`
	NoDataTimeframe    int                        `pulumi:"noDataTimeframe"`
	NotifyAudit        bool                       `pulumi:"notifyAudit"`
	NotifyNoData       bool                       `pulumi:"notifyNoData"`
	Query              string                     `pulumi:"query"`
	RenotifyInterval   int                        `pulumi:"renotifyInterval"`
	RequireFullWindow  bool                       `pulumi:"requireFullWindow"`
	Tags               []string                   `pulumi:"tags"`
	TagsFilters        []string                   `pulumi:"tagsFilters"`
	ThresholdWindows   GetMonitorThresholdWindows `pulumi:"thresholdWindows"`
	Thresholds         GetMonitorThresholds       `pulumi:"thresholds"`
	TimeoutH           int                        `pulumi:"timeoutH"`
	Type               string                     `pulumi:"type"`
}
