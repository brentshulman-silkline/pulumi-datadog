// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#logs-pipelines) resource, which is used to manage Datadog log pipelines order.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-datadog/blob/master/website/docs/r/logs_pipeline_order.html.markdown.
type LogsPipelineOrder struct {
	s *pulumi.ResourceState
}

// NewLogsPipelineOrder registers a new resource with the given unique name, arguments, and options.
func NewLogsPipelineOrder(ctx *pulumi.Context,
	name string, args *LogsPipelineOrderArgs, opts ...pulumi.ResourceOpt) (*LogsPipelineOrder, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Pipelines == nil {
		return nil, errors.New("missing required argument 'Pipelines'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["pipelines"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["pipelines"] = args.Pipelines
	}
	s, err := ctx.RegisterResource("datadog:index/logsPipelineOrder:LogsPipelineOrder", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LogsPipelineOrder{s: s}, nil
}

// GetLogsPipelineOrder gets an existing LogsPipelineOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogsPipelineOrder(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LogsPipelineOrderState, opts ...pulumi.ResourceOpt) (*LogsPipelineOrder, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
		inputs["pipelines"] = state.Pipelines
	}
	s, err := ctx.ReadResource("datadog:index/logsPipelineOrder:LogsPipelineOrder", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LogsPipelineOrder{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *LogsPipelineOrder) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *LogsPipelineOrder) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name attribute in the resource `.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource `NAME`. 
// No related field is available in  [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#get-pipeline-order).
func (r *LogsPipelineOrder) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
func (r *LogsPipelineOrder) Pipelines() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["pipelines"])
}

// Input properties used for looking up and filtering LogsPipelineOrder resources.
type LogsPipelineOrderState struct {
	// The name attribute in the resource `.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource `NAME`. 
	// No related field is available in  [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#get-pipeline-order).
	Name interface{}
	// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
	Pipelines interface{}
}

// The set of arguments for constructing a LogsPipelineOrder resource.
type LogsPipelineOrderArgs struct {
	// The name attribute in the resource `.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource `NAME`. 
	// No related field is available in  [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#get-pipeline-order).
	Name interface{}
	// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
	Pipelines interface{}
}
